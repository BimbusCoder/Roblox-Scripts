

--[[
 __  __   ______   ______  ______  ______   ______   __    
/\ \_\ \ /\  __ \ /\__  _\/\__  _\/\  __ \ /\  == \ /\ \   
\ \  __ \\ \  __ \\/_/\ \/\/_/\ \/\ \ \/\ \\ \  __< \ \ \  
 \ \_\ \_\\ \_\ \_\  \ \_\   \ \_\ \ \_____\\ \_\ \_\\ \_\ 
  \/_/\/_/ \/_/\/_/   \/_/    \/_/  \/_____/ \/_/ /_/ \/_/ 
                                                           

    Hattori v2 by Phoenixx, Source Release
    Ui Library made by Phoenixx (its really bad)


    Read through the code and learn from my mistakes, make fun of my shitty code, or even if you skid it,   i don't give a fuck
    If you do take the code or whatever, at least give credits

    -RIP Hattori 2020

]]



if not HttpGet then
	HttpGet = function(url, ...) return game:HttpGet(url, ...) end
end

wait(1)

if _G.AlarawdExeced then
	wait(9e9)
else
	_G.AlarawdExeced = true
end

local is_protected_closure = is_protected_closure or function(f) return false end
repeat wait() until game.Loaded
repeat wait() until game:GetService("Players").LocalPlayer

local mainPageIds = {}
local TeleportService = game:GetService("TeleportService")
local pages = game:GetService("AssetService"):GetGamePlacesAsync()
local places = {}
while true do
	for _,place in pairs(pages:GetCurrentPage()) do
		places[place.Name] = place.PlaceId
	end
	if pages.IsFinished then
		break
	end
	pages:AdvanceToNextPageAsync()
end

local gameNAME = ""

local Swordburst2 = false
local CaseClicker = false
local Parkour = false
local wayfort = false
local vesteria = false
local WildWest = false
local Wzero = false
local advup = false
local ar2 = false
local cs = false
local soundsp = false
local arcane = false
local pf = false
local rghoul = false
local jailbreak = false
local dslayer = false
local badbus = false
local bloxb = false
local wom = false
local sl2 = false

spawn(function()
	repeat wait() until game:GetService("Players") and game:GetService("Players").LocalPlayer
	game:GetService("Players").LocalPlayer.OnTeleport:Connect(function(State)
		if State == Enum.TeleportState.Started then
			syn.queue_on_teleport([[
				repeat wait() until game.Loaded;
				--;
			]])
		end
	end)
end)


for i,v in pairs(places) do
	if i:lower():find("swordburst") then
		Swordburst2 = true
		gameNAME = "Swordburst 2"
	elseif i:lower():find("case clicker") then
		--CaseClicker = true
		--gameNAME = i
	elseif i:lower():find("parkour") then
		Parkour = true
		gameNAME = "Parkour"
	elseif i:lower():find("wayfort") then
		--wayfort = true
		--gameNAME = i
	elseif i:lower():find("vesteria") then
		vesteria = true
		gameNAME = "Vesteria"
	elseif i:lower():find("wild west") then
		WildWest = true
		gameNAME = "Wild West"
	elseif i:lower():find("world // zero") then
		Wzero = true
		gameNAME = "World // Zero"
	elseif i:lower():find("adventure up") then
		--advup = true
		--gameNAME = i
	elseif i:lower():find("apocalypse rising 2") or v == 863266079 then
		ar2 = true
		gameNAME = "Apocalypse Rising 2"
	elseif i:lower():find("critical strike") then
		cs = true
		gameNAME = i
	elseif i:lower():find("sound space") then
		soundsp = true
		gameNAME = i
	elseif i:lower():find("arcane reborn") then
		--arcane = true
		--gameNAME = i
    elseif i:lower():find("phantom forces") then
		pf = true
		gameNAME = i
	elseif i:lower():find("ro-ghoul") or v == 914010731 then
		rghoul = true
		gameNAME = i
	elseif i:lower():find("jailbreak") or v == 606849621 then
		jailbreak = true

	elseif v == 4072501860 then
		--dslayer = true
	elseif v == 3233893879 then
		badbus = true
	elseif v == 185655149 then
		bloxb = true
		gameNAME = "Bloxburg"
	elseif v == 3272915504 then
		wom = true
		gameNAME = "World of Magic"
	elseif i:lower():find("Shinobi Life 2") or v == 4616652839 then
		sl2 = true
	end
end
if not soundsp then
	game:GetService("UserInputService").MouseIconEnabled = true
end

local options = _G.options or 
{
    topcolor = Color3.fromRGB(35, 35, 35),
    textcolor = Color3.fromRGB(255, 255, 255),
    AccentColor = Color3.fromRGB(200, 0, 200),
    togglekey = Enum.KeyCode.RightShift,
    titlefont = Enum.Font.SourceSansSemibold,
    font = Enum.Font.SourceSans,
}

local write_clipboard = function() end
getgenv().htgetf = htgetf or function() end
pcall(function()
	write_clipboard = syn.write_clipboard
end)
--[[
local funcs = {
	warn,
	print,
	game:GetService("Players").LocalPlayer.Kick,
	readfile,
	writefile,
	appendfile,
	rconsole,
	rconsoleinfo,
	rconsolewarn,
	rconsoleprint,
	rconsoleerr,
	replaceclosure,
	newcclosure,
	getgenv().write_clipboard,
	getrawmetatable(game).__Index,
}

for i,v in pairs(funcs) do
	local old
	pcall(function()
		old = hookfunction(v, function(...)
			local args = {...}

			local finds = {
				"http",
				"hattorihub",
				"game",
				"&",
				"emit",
				"scriptenv",
				"userid",
				"hwid",
				"fingerprint",
				"key",
				"fingerprint", 
				"identifier", 
				"sentinel"
			}

			for a,c in pairs(args) do
				for n,b in pairs(finds) do
					if tostring(c):lower():gsub(" ", ""):find(b) or tostring(a):lower():gsub(" ", ""):find(b) then
						while true do end
						return "";
					end
				end
			end

			return old(...)
		end)
	end)
end
]]




local DefaultSettings = {
	Swordburst2 = {
		["Anti AFK"] = false,
		["Mob ESP"] = false,
		["Legit Autofarm"] = false,
		["Rage Autofarm"] = false,
		["Rage Movement Speed"] = 65,
		["Mob Kill Aura"] = false,
		["Player Kill Aura"] = false,
		["Kill Aura Range"] = 25,
		["Killaura Speed"] = 1,
		["WalkSpeed"] = 20,
		["Infinite Stamina"] = false,
		["Auto Kick"] = false,
	},
	CaseClicker = {
		["ToggleSkipAnimation"] = false,
	},
	Parkour = {
		["ToggleAntiTp"] = false,
		["Toggle Autofarm"] = false,
		["Toggle Legit Autofarm"] = false,
		["Toggle Combo Multiplier"] = false,
	},
	WildWest = {
		["BreakFree"] = false,
		["Always Day"] = false,
		["Remove fall damage"] = false,
		["Anti Ragdoll"] = false,
		["Inf Stamina"] = false,
		["No Jump Cooldown"] = false,
		["Modded Horse"] = false,
		["Instant Respawn"] = false,
		["No Spread"] = false,
		["No Recoil"] = false,
		["Instant Reload"] = false,
		["Increased Fire Rate"] = false,
		["Silent Aim"] = false,
		["Team Check"] = false,
		["Visible Check"] = false,
	},
	Wzero = {
		["Kill Aura"] = false,
		["Autofarm"] = false,
		["anti-death"] = false,
	},
	cs = {
		["No Cooldown"] = false,
		["Autoclicker"] = false,
		["Speed Boost"] = false,
		["Modify Attack Damage"] = false,
		["Attack Damage Amount"] = 6,
		["No Void Damage"] = false,
		["Godmode"] = false,
	},
	soundsp = {
		["autoPlayer"] = false,
		["cursorTrail"] = false,
		["rainbowCursor"] = false,
		["legit"] = false,
	},
	pf = {
		["CameraRecoil"] = false,
		["NoSway"] = false,
		["NoRecoil"] = false,
		["InstReload"] = false,
		["NoRecoil"] = false,
		["NoFall"] = false,
		["NoSuppress"] = false,
		["AntiFreeze"] = false,
		["RapidFire"] = false,
		["InstAim"] = false,
		["InstEquip"] = false,
		["KillAura"] = false,
		["Bhop"] = false,
		["AntiAim"] = false
	},
	jailbreak = {
		["InfNitro"] = false,
		["Alwaysday"] = false,
		["LoopHeal"] = false,
		["noFallDamage"] = false,
		["FreeMobileGarage"] = false,
		["arrestAura"] = false,
		["antiArrest"] = false,
		["rgbCar"] = false,
		["sPunch"] = false,
		["infFuel"] = false
	},
	wom = {
		["alwaysDayEnabled"] = false,
		["infStaminaEnabled"] = false,
		["infAirEnabled"] = false,
		["chestEspEnabled"] = false,
		["godModeEnabled"] = false,
	},
	UniversalEsp = {
		["Show Username"] = false,
		["Text Outline"] = false,
		["Tracers"] = false,
		["Box Outline"] = false,
		["Enemy ESP Color"] = {255/255, 100/255, 100/255},
		["Team ESP Color"] = {0, 245/255, 0},
		["Visible ESP Color"] = {50/255,100/255,255/255},
	},
	sl2 = {
		["bossOnly"] = false,
		["distUnderNPC"] = 0,
		["autofarm"] = false,
		["killaura_Enabled"] = false,
		["sniper_Enabled"] = true,
		["autokill_Jins"] = false,
		["messageOnModJoin"] = false,
		["kickOnModJoin"] = false,
		["includeTesterAsMod"] = false,
		["untilBossSpawns"] = false,
		["untilRound"] = 21,
		["killaura_Enabled2"] = false,
	},
	UIColorSettings = {
		["ColorGradient1"] = {0,0.43674468994140625,1},
		["ColorGradient2"] = {0.07463932037353515625,0,1},
		["GradientTwoEnabled"] = true,
		["FasterLoading"] = false,
	},
}


local Name = "hattoriv3.xzx"
local Settings
pcall(function()
	if not pcall(function() readfile(Name) end) then writefile(Name, game:service'HttpService':JSONEncode(DefaultSettings)) end
	DefaultSettings = game:service'HttpService':JSONDecode(readfile(Name))
end)

local function Save()
	writefile(Name,game:service'HttpService':JSONEncode(DefaultSettings))
end

--[[ Library ]]--

local options = _G.options or 
{
    topcolor = Color3.fromRGB(35, 35, 35),
    textcolor = Color3.fromRGB(255, 255, 255),
    AccentColor = Color3.fromRGB(200, 0, 200),
    togglekey = Enum.KeyCode.RightShift,
    titlefont = Enum.Font.SourceSansSemibold,
    font = Enum.Font.SourceSansSemibold,
}

local GradientTwoEnabled = DefaultSettings["UIColorSettings"]["GradientTwoEnabled"]--true
local grad1 = DefaultSettings["UIColorSettings"]["ColorGradient1"]
local grad2 = DefaultSettings["UIColorSettings"]["ColorGradient2"]
local ColorGradient1 = Color3.new(grad1[1],grad1[2],grad1[3]) or Color3.new(0, 0.25, 1)
local ColorGradient2 = GradientTwoEnabled and Color3.new(grad2[1],grad2[2],grad2[3]) or (ColorGradient1 or GradientTwoEnabled)-- and Color3.fromRGB(0, 0, 255) or ColorGradient1

local uiGradients = {}
local toggleInnerCircles = {}
local toggleOuterCircles = {}
local sliderLines = {}
local sliderDots = {}

local library = {}
local tabs = {}
local oldPositions = {}
local canaction = true
local isopen = true

local TweenService = game:GetService("TweenService")
local uis = game:GetService("UserInputService")
local rs = game:GetService("RunService")
local mouse = game:GetService("Players").LocalPlayer:GetMouse()
local HttpService = game:GetService("HttpService")

local Design1 = Instance.new("ScreenGui")
Design1.Name = HttpService:GenerateGUID(false)
Design1.Parent = game:GetService("CoreGui")
library.mainUI = Design1



local function Resize (part,new,_delay)
	_delay = _delay or 0.5
	local tweenInfo = TweenInfo.new(_delay, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
	local tween = TweenService:Create(part, tweenInfo, new)
	tween:Play()
end

function makeImage()
	local id = 'rbxassetid://1084963972'
	local id2 = 'rbxassetid://867619398'
	
	local randoms = {
		0,
		90,
		180,
		-90
	}
	
	local image = Instance.new("ImageLabel", Design1)
	image.Size = UDim2.new(0, 20, 0, 20)
	image.AnchorPoint = Vector2.new(0.5, 0.5)
	image.Position = UDim2.new(0, mouse.X, 0, mouse.Y)
	image.Image = id
	image.Rotation = randoms[math.random(#randoms)]
	image.BackgroundTransparency = 1
	image.ImageColor3 = Color3.fromRGB(255, 255, 255)
	image.ZIndex = 100000
	image.Name = HttpService:GenerateGUID(false)
	
	local image2 = image:Clone()
	image2.Parent = image.Parent
	image2.Image = id2
	
	Resize(image, {ImageTransparency = 1, Size = UDim2.new(0, 100, 0, 100)}, 0.3)
	Resize(image2, {ImageTransparency = 1, Size = UDim2.new(0, 100, 0, 100)}, 0.3)
end

local function CreateDrag (gui)
    local UserInputService = game:GetService("UserInputService")
    local dragging
    local dragInput
    local dragStart
	local startPos
	
    local function update(input)
		local delta = input.Position - dragStart
		Resize(gui, {Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)}, 0.16)
	end
	
    gui.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
            dragging = true
            dragStart = input.Position
            startPos = gui.Position
            
            input.Changed:Connect(function()
                if input.UserInputState == Enum.UserInputState.End then
                    dragging = false
                end
            end)
        end
	end)
	
    gui.InputChanged:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
            dragInput = input
        end
	end)
	
    UserInputService.InputChanged:Connect(function(input)
        if input == dragInput and dragging then
            update(input)
        end
    end)
end

uis.InputBegan:connect(function(inputobj, gameProcessed) 
	if inputobj.UserInputType == Enum.UserInputType.Keyboard and not gameProcessed then
		if inputobj.KeyCode == options.togglekey then 
			if not canaction then
				return
			end
			if isopen then
				canaction = false
				for index,tab in next, tabs do
					oldPositions[index] = tab.Position
					Resize(tab,{Position = UDim2.new(-1, 0, -1, 0)})
				end
				spawn(function() wait(0.5) canaction = true end)
			else
				canaction = false
				for index,tab in next, tabs do
					Resize(tab,{Position = oldPositions[index]})
				end
				spawn(function() wait(0.5) canaction = true end)
			end
			isopen = not isopen
		end
	end
end)

local function CreateTop(text, list, size, pos)
	text = text or "New tab"
	local part = Instance.new("Frame", Design1)
	
	if pos then
		part.Position = pos
    else
        part.Position = UDim2.new(0, #tabs == 0 and 200 or tabs[#tabs].Position.X.Offset + 250, 0, 50)
    end

	if size then
		part.Size = size
	else
		part.Size = UDim2.new(0, 225, 0, 25)
	end
	part.BackgroundColor3 = options.topcolor
	part.Draggable = true
	part.ZIndex = 3
	part.Name = HttpService:GenerateGUID(false)

	local label = Instance.new("TextLabel", part)
	label.Size = part.Size
	label.BackgroundTransparency = 1
	label.TextSize = 19
	label.TextStrokeTransparency = 1
	label.TextXAlignment = Enum.TextXAlignment.Center
	label.Font = options.titlefont
	label.TextColor3 = options.textcolor
	label.ZIndex = part.ZIndex
	label.Text = tostring(text)
	label.Name = HttpService:GenerateGUID(false)
	CreateDrag(part)
	if not list then
		table.insert(tabs, part)
	end

	local underline = Instance.new("Frame", part)
	--underline.BackgroundColor3 = options.AccentColor
	underline.BorderSizePixel = 0
	underline.Size = UDim2.new(1, 2, 0, 2)
	underline.Position = UDim2.new(0, -1, 1.1, -3)
	underline.ZIndex = part.ZIndex
	underline.Name = HttpService:GenerateGUID(false)

	local UIGradient = Instance.new("UIGradient")
	UIGradient.Color = ColorSequence.new{ColorSequenceKeypoint.new(0, ColorGradient1), ColorSequenceKeypoint.new(1, ColorGradient2)}
	UIGradient.Parent = underline
	UIGradient.Name = HttpService:GenerateGUID(false)

	table.insert(uiGradients, UIGradient)

	return part
end

function library:CreateTab(name, list, size, pos)
	name = name or "New tab"
	local pixelspacing = 38
	local elements = {}
	local PhaseOneInstances = {}
	
	local CurrentTabCode = HttpService:GenerateGUID(false)
	
	
	
	local part = Instance.new("Frame")
	part.Name = HttpService:GenerateGUID(false)
	part.Parent = Design1
	
	
	
	if pos then
		part.Position = pos
    else
        part.Position = UDim2.new(0, #tabs == 0 and 200 or tabs[#tabs].Position.X.Offset + 230, 0, 50)
    end

	if size then
		part.Size = size
	else
		part.Size = UDim2.new(0, 225/1.15, 0, 28/1.15)
	end
	
	
	
	part.BackgroundColor3 = options.topcolor
	part.Draggable = true
	part.ZIndex = #tabs == 0 and 3 or (#tabs * 3) + 3
	part.Name = HttpService:GenerateGUID(false)

	local label = Instance.new("TextLabel", part)
	label.Size = part.Size
	label.TextXAlignment = Enum.TextXAlignment.Left
	label.BackgroundTransparency = 1
	label.TextSize = 19
	label.TextStrokeTransparency = 1
	label.Font = options.titlefont
	label.TextColor3 = options.textcolor
	label.ZIndex = part.ZIndex
	label.Text = "    " .. tostring(name)
	label.Name = HttpService:GenerateGUID(false)
	CreateDrag(part)
	
	if not list then
		table.insert(tabs, part)
	end

	local underline = Instance.new("Frame", part)
	underline.BorderSizePixel = 0
	underline.Size = UDim2.new(1, 2, 0, 2)
	underline.Position = UDim2.new(0, -1, 1.1, -3)
	underline.ZIndex = part.ZIndex
	underline.Name = HttpService:GenerateGUID(false)

	local UIGradient = Instance.new("UIGradient")
	UIGradient.Color = ColorSequence.new{ColorSequenceKeypoint.new(0, ColorGradient1), ColorSequenceKeypoint.new(1, ColorGradient2)}
	UIGradient.Parent = underline
	UIGradient.Name = HttpService:GenerateGUID(false)

	table.insert(uiGradients, UIGradient)
	
	local body = Instance.new("Frame", part)
	body.Size = UDim2.new(1, 0, 0, 0)
	body.ZIndex = part.ZIndex - 1
	body.AnchorPoint = Vector2.new(0.5,0)
	body.Position = UDim2.new(0.5, 0, 6, -141)
	body.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
	body.BorderSizePixel = 0
	body.BorderColor3 = Color3.fromRGB(40, 40, 40)
	body.ClipsDescendants = false
	body.BackgroundTransparency = 0
	body.Name = HttpService:GenerateGUID(false)

	local UIGradient_2 = Instance.new("UIGradient")
	UIGradient_2.Color = ColorSequence.new{ColorSequenceKeypoint.new(0, Color3.fromRGB(130, 130, 130)), ColorSequenceKeypoint.new(1, Color3.fromRGB(245, 245, 245))}
	UIGradient_2.Parent = body
	UIGradient_2.Name = HttpService:GenerateGUID(false)
	UIGradient_2.Rotation = 45

	table.insert(uiGradients, UIGradient)

	local bodyelements = Instance.new("Frame", body)
	bodyelements.ZIndex = part.ZIndex - 1
	bodyelements.Size = body.Size + UDim2.new(0, 0, 0, 1000)
	bodyelements.BackgroundTransparency = 1
	bodyelements.Name = HttpService:GenerateGUID(false)

	local UIGradient_2 = Instance.new("UIGradient")
	UIGradient_2.Color = ColorSequence.new{ColorSequenceKeypoint.new(0, Color3.fromRGB(130, 130, 130)), ColorSequenceKeypoint.new(1, Color3.fromRGB(245, 245, 245))}
	UIGradient_2.Parent = bodyelements
	UIGradient_2.Name = HttpService:GenerateGUID(false)
	table.insert(uiGradients, UIGradient)
	
	
	
	local function CreateBackground (color)
		local background = Instance.new("Frame", body)
		background.Name = HttpService:GenerateGUID(false)
		local function CreateSection (pos)
			local section = Instance.new("ImageLabel", background)
			
			section.BackgroundColor3 = Color3.new(1, 1, 1)
			section.Position = pos
			section.Size = UDim2.new(0, 200, 0, 200)
			section.BackgroundTransparency = 1
			section.Image = "https://www.roblox.com/Thumbs/Asset.ashx?width=420&height=420&assetId=4000222087"
			section.ImageColor3 = color
			section.Name = HttpService:GenerateGUID(false)
		end

		for x = 0, 2 do 
			for i = 0, 5 do 
				CreateSection(UDim2.new(0, 197 * x, 0, i * 200 - (i * 3)))
			end
		end
	end
	
	local actionbutton = Instance.new("ImageButton", part)
	actionbutton.BackgroundTransparency = 1
	actionbutton.Size = UDim2.new(0, 21, 0, 21)
	actionbutton.AnchorPoint = Vector2.new(0,0.5)
	actionbutton.Position = UDim2.new(1, -30, 0.5, 0)
	actionbutton.ZIndex = part.ZIndex
	actionbutton.Image = 'rbxassetid://244221613'
	actionbutton.ImageTransparency = 1
	actionbutton.Name = HttpService:GenerateGUID(false)

	local OPImg = Instance.new("ImageLabel", actionbutton)
	OPImg.BackgroundTransparency = 1
	OPImg.Size = UDim2.new(0, 0, 1, 0)
	OPImg.Position = UDim2.new(0.5, 0, 0, 0)
	OPImg.ZIndex = actionbutton.ZIndex + 1
	OPImg.Image = 'rbxassetid://52756150'
	OPImg.Name = HttpService:GenerateGUID(false)

	local CLImg = Instance.new("ImageLabel", actionbutton)
	CLImg.BackgroundTransparency = 1
	CLImg.Size = UDim2.new(1, 0, 1, 0)
	CLImg.Position = UDim2.new(0, 0, 0, 0)
	CLImg.ZIndex = actionbutton.ZIndex + 1
	CLImg.Image = 'rbxassetid://52756189'
	CLImg.Name = HttpService:GenerateGUID(false)
	
	
	
	local function Close()
		body.ClipsDescendants = true
        Resize(body,{Size = UDim2.new(1.01, 0, 0, 0), Position = UDim2.new(0.5, 0, 6, -141)})
        
        Resize(OPImg, {Size = UDim2.new(1.01, 0, 1.01, 0), Position = UDim2.new(0, 0, 0, 0)}, 0.25)
	end

	local function Open()
		body.ClipsDescendants = true
        Resize(body, {Size = UDim2.new(1.01, 0, 0, pixelspacing * #PhaseOneInstances + 16), Position = UDim2.new(0.5, 0, (pixelspacing / 1000) * #PhaseOneInstances + 0.85, -6)})
        
		Resize(OPImg, {Size = UDim2.new(1.01, 0, 0, 0), Position = UDim2.new(0, 0, 0.5, 0)}, 0.25)
		spawn(function()
			wait(0.3)
			body.ClipsDescendants = false
		end)
	end

	local open = true
	actionbutton.MouseButton1Click:connect(function()
		open = not open
		local func = open and Open or Close
		func()
	end)
	
	

	function elements:CreateSection(text)
		text = text or "New button"
		local SectionElements = {}
		local SectionTabs = {}
		local fakeTabs = {}
		
		local CurrentSectionCode = HttpService:GenerateGUID(false)
		
		local button = Instance.new("TextButton", bodyelements)

		button.Size = UDim2.new(0, 215/1.15, 0, 32.5/1.15)
		button.AnchorPoint = Vector2.new(0.5,0)
		button.Position = UDim2.new(0.5, 0, (pixelspacing / 990) * #PhaseOneInstances + 0.0155, 0)
		button.BackgroundTransparency = 0
        button.BorderSizePixel = 1
        button.BorderColor3 = Color3.fromRGB(60, 60, 60)
		button.TextColor3 = Color3.new(1, 1, 1)
		button.TextSize = 15
		button.TextXAlignment = Enum.TextXAlignment.Left
		button.Font = options.font
		button.Text = "    "-- .. tostring(text)
		button.ZIndex = bodyelements.ZIndex
        button.AutoButtonColor = false
		button.Active = true
		button.Name = HttpService:GenerateGUID(false)
		
		local buttonText = Instance.new("TextLabel", button)
		buttonText.Name = HttpService:GenerateGUID(false)
		buttonText.BackgroundTransparency = 1
		buttonText.Size = UDim2.new(1,0,1,0)
		buttonText.AnchorPoint = Vector2.new(0.5,0.5)
		buttonText.Position = UDim2.new(0.5,0,0.5,0)
		buttonText.ZIndex = bodyelements.ZIndex
		buttonText.Text = "    " .. tostring(text)
		buttonText.TextColor3 = Color3.new(1, 1, 1)
		buttonText.TextSize = 15
		buttonText.TextXAlignment = Enum.TextXAlignment.Left
		buttonText.Font = options.font
		
		local UIGradient = Instance.new("UIGradient")
		UIGradient.Color = ColorSequence.new{ColorSequenceKeypoint.new(0, ColorGradient1), ColorSequenceKeypoint.new(1, ColorGradient2)}
		UIGradient.Parent = button
		UIGradient.Name = HttpService:GenerateGUID(false)
		table.insert(uiGradients, UIGradient)
		
		local actionbutton = Instance.new("ImageButton", button)
		actionbutton.BackgroundTransparency = 1
		actionbutton.Size = UDim2.new(0, 30, 0, 30)
		actionbutton.AnchorPoint = Vector2.new(0.5,0.5)
		actionbutton.Position = UDim2.new(0.9, 0, 0.5, 0)
		actionbutton.ZIndex = button.ZIndex
		actionbutton.Image = 'rbxassetid://244221613'
		actionbutton.ImageTransparency = 1
		actionbutton.Name = HttpService:GenerateGUID(false)
	
		local OPImg = Instance.new("ImageButton", actionbutton)
		OPImg.BackgroundTransparency = 1
		OPImg.Size = UDim2.new(1, 0, 1, 0)
		OPImg.Position = UDim2.new(0, 0, 0, 0)
		OPImg.ZIndex = actionbutton.ZIndex + 1
		OPImg.Image = 'rbxassetid://3192533593'
		OPImg.Name = HttpService:GenerateGUID(false)
		OPImg.Rotation = 180
		
		local SecBodyelements = Instance.new("Frame", button)
		SecBodyelements.ZIndex = button.ZIndex
		SecBodyelements.Size = UDim2.new(body.Size.X.Scale, body.Size.X.Offset, 0, 0)--body.Size + UDim2.new(0, 0, 0, 1000)
		SecBodyelements.AnchorPoint = Vector2.new(0.5, 0)
		SecBodyelements.Position = UDim2.new(0.5,0,1,5)
		
		SecBodyelements.BackgroundTransparency = 0
		
		SecBodyelements.ClipsDescendants = true
		SecBodyelements.BackgroundColor3 = Color3.fromRGB(112, 112, 112)
		SecBodyelements.Name = CurrentTabCode
		SecBodyelements.BackgroundTransparency = 0
        SecBodyelements.BorderSizePixel = 2
		SecBodyelements.BorderColor3 = Color3.fromRGB(40, 40, 40)
		SecBodyelements.Visible = false
		
		local UIGradient = Instance.new("UIGradient")
		UIGradient.Color = ColorSequence.new{ColorSequenceKeypoint.new(0, ColorGradient1), ColorSequenceKeypoint.new(1, ColorGradient2)}
		UIGradient.Parent = SecBodyelements
		UIGradient.Rotation = 45
		UIGradient.Name = HttpService:GenerateGUID(false)
		table.insert(uiGradients, UIGradient)
		
		local toggleCoolD = false
		local function CloseSec()
			for i,v in pairs(fakeTabs) do
				for x,y in pairs(PhaseOneInstances) do
					if v == y then
						table.remove(PhaseOneInstances, x)
						v:Destroy()
						print(i)
					end
				end
			end
			
			TweenService:Create(OPImg,TweenInfo.new(0.35),{Rotation = 180}):Play()
			
			Resize(SecBodyelements, {Size = UDim2.new(body.Size.X.Scale, body.Size.X.Offset, 0, 0)})
			
			Open()
			
			for i,v in pairs(PhaseOneInstances) do 
				if v.Position.Y.Scale > button.Position.Y.Scale or v.Position.Y.Offset > button.Position.Y.Offset then
					Resize(v, {Position = UDim2.new(v.Position.X.Scale, v.Position.X.Offset, v.Position.Y.Scale, v.Position.Y.Offset - pixelspacing * #SectionTabs)})
				end
			end
			
			wait(0.25)
			SecBodyelements.Visible = false
			
		end
	
		local function OpenSec()
			SecBodyelements.Visible = true
			
			for i = 1, #SectionTabs do
				local s = Instance.new("Frame")
				s.Name = CurrentSectionCode
				s.Parent = nil
				table.insert(fakeTabs, s)
				table.insert(PhaseOneInstances, s)
			end
			TweenService:Create(OPImg,TweenInfo.new(0.35),{Rotation = 0}):Play()
			
			Resize(SecBodyelements, {Size = UDim2.new(body.Size.X.Scale, body.Size.X.Offset, 0, pixelspacing * #SectionTabs - 4)})
			Open()
			
			for i,v in pairs(PhaseOneInstances) do 
				if v.Position.Y.Scale > button.Position.Y.Scale or v.Position.Y.Offset > button.Position.Y.Offset then
					Resize(v, {Position = UDim2.new(v.Position.X.Scale, v.Position.X.Offset, v.Position.Y.Scale, v.Position.Y.Offset + pixelspacing * #SectionTabs)})
				end
			end
			
		end
		
		local function shine(duration)
            button.ClipsDescendants = true
            local sFrame = Instance.new("ImageLabel", button)
            sFrame.Active = true
            sFrame.Image = "rbxassetid://2954823376"
            sFrame.Size = UDim2.new(0, 200, 0, 200)
            sFrame.Position = UDim2.new(0, -100, -1.5, 0)
            sFrame.AnchorPoint = Vector2.new(0.5, 0.5)
            sFrame.ZIndex = button.ZIndex
            sFrame.BorderSizePixel = 0
            sFrame.BackgroundTransparency = 1
            sFrame.ImageTransparency = 1
			sFrame.BackgroundColor3 = Color3.new(255, 255, 255)
			sFrame.Name = HttpService:GenerateGUID(false)
            Resize(sFrame, {ImageTransparency = 0.35}, 0.5)
            sFrame:TweenPosition(UDim2.new(1, 50, 3, 0), "Out", "Quad", duration)

            spawn(function()
                wait(duration + 0.5)
				button.ClipsDescendants = false
                sFrame:Destroy()
            end)
        end

		local openSec = false
		local function buttonPress()
			if not toggleCoolD then
				toggleCoolD = true
				spawn(function()
					wait(0.5)
					toggleCoolD = false
				end)
	            makeImage()
	            --shine(0.15)
				openSec = not openSec
				local func = openSec and OpenSec or CloseSec
				func()
			end
		end
		OPImg.MouseButton1Click:connect(buttonPress)
		button.MouseButton1Click:connect(buttonPress)

		table.insert(PhaseOneInstances, button)

		Open()
		
		
		function SectionElements:AddSwitch(text, callback)
			local switchactions = {}
			text = text or "New switch"
			callback = callback or function() end
			
			local switch = Instance.new("TextButton", SecBodyelements)
			table.insert(SectionTabs, switch)
			
			switch.Size = UDim2.new(0, 205, 0, 32.5)
			switch.AnchorPoint = Vector2.new(0.5,0)
			switch.Position = UDim2.new(0.5, 0, ((pixelspacing - 3) / 700) * #SectionTabs, 28 * (#SectionTabs - 1))
			switch.BackgroundTransparency = 0
			switch.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
			switch.BorderSizePixel = 1
			switch.BorderColor3 = Color3.fromRGB(60, 60, 60)
			switch.TextColor3 = Color3.new(1, 1, 1)
			switch.TextSize = 15
			switch.TextXAlignment = Enum.TextXAlignment.Left
			switch.Font = options.font
			switch.Text = "    "
	        switch.ZIndex = SecBodyelements.ZIndex
			switch.AutoButtonColor = false
			switch.Name = HttpService:GenerateGUID(false)
			
			local buttonText = Instance.new("TextLabel", switch)
			buttonText.Name = HttpService:GenerateGUID(false)
			buttonText.BackgroundTransparency = 1
			buttonText.Size = UDim2.new(1,0,1,0)
			buttonText.AnchorPoint = Vector2.new(0.5,0.5)
			buttonText.Position = UDim2.new(0.5,0,0.5,0)
			buttonText.ZIndex = bodyelements.ZIndex
			buttonText.Text = "    " .. tostring(text)
			buttonText.TextColor3 = Color3.new(1, 1, 1)
			buttonText.TextSize = 15
			buttonText.TextXAlignment = Enum.TextXAlignment.Left
			buttonText.Font = options.font
			
			local UIGradient = Instance.new("UIGradient")
			UIGradient.Color = ColorSequence.new{ColorSequenceKeypoint.new(0, ColorGradient1), ColorSequenceKeypoint.new(1, ColorGradient2)}
			UIGradient.Parent = switch
			UIGradient.Name = HttpService:GenerateGUID(false)
			table.insert(uiGradients, UIGradient)
	
			local enabled = false
			local OuterCircle = Instance.new("ImageLabel", switch)
			OuterCircle.AnchorPoint = Vector2.new(0, 0.5)
			OuterCircle.Size = UDim2.new(0, 20, 0, 20)
			OuterCircle.Position = UDim2.new(1, -30, 0.5, 0)
			OuterCircle.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
			OuterCircle.BorderSizePixel = 0
			OuterCircle.ZIndex = switch.ZIndex + 2
			OuterCircle.ImageTransparency = 0
			OuterCircle.BackgroundTransparency = 1
			OuterCircle.Image = 'rbxassetid://2012883770'
			OuterCircle.ImageColor3 = Color3.fromRGB(150, 150, 150)
			OuterCircle.ScaleType = "Stretch"
			OuterCircle.SliceScale = 1
			OuterCircle.Name = HttpService:GenerateGUID(false)
	
	        local InnerCircle = Instance.new("ImageLabel", OuterCircle)
	        InnerCircle.Size = UDim2.new(0, 0, 0, 0)
	        InnerCircle.AnchorPoint = Vector2.new(0.5, 0.5)
			InnerCircle.Position = UDim2.new(0.5, 0, 0.5, 0)
			InnerCircle.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
			InnerCircle.BorderSizePixel = 0
			InnerCircle.ZIndex = switch.ZIndex + 3
			InnerCircle.ImageTransparency = 0
			InnerCircle.BackgroundTransparency = 1
			InnerCircle.Image = 'rbxassetid://517259585'
			InnerCircle.ImageColor3 = Color3.fromRGB(150, 150, 150)
			InnerCircle.ScaleType = "Stretch"
			InnerCircle.SliceScale = 1
			InnerCircle.Name = HttpService:GenerateGUID(false)
	
	        local Frame = Instance.new("ImageLabel", OuterCircle)
	        Frame.ClipsDescendants = true
	        Frame.BackgroundTransparency = 1
	        Frame.BorderSizePixel = 0
	        Frame.ZIndex = switch.ZIndex + 1
	        Frame.Size = UDim2.new(1, 5, 1, 5)
	        Frame.AnchorPoint = Vector2.new(0.5, 0.5)
	        Frame.Position = UDim2.new(0.5, 0, 0.5, 0)
	        Frame.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	        Frame.Image = "rbxassetid://200182847"
			Frame.ImageTransparency = 1
			Frame.Name = HttpService:GenerateGUID(false)
	
	        switch.MouseEnter:Connect(function()
	            Frame.ImageTransparency = .9
	        end)
	        switch.MouseLeave:Connect(function()
	            Frame.ImageTransparency = 1
	        end)
	
			local function Trigger(state)
				enabled = state or not enabled
				local ac = options.AccentColor
	
				if enabled then
	                Resize(OuterCircle, {ImageColor3 = Color3.fromRGB(255, 255, 255)}, .2)
	                Resize(InnerCircle, {Size = UDim2.new(1, -14.5, 1, -14.5), ImageColor3 = Color3.fromRGB(255, 255, 255)}, .2)
				else
	                Resize(OuterCircle, {ImageColor3 = Color3.fromRGB(150,150,150)}, .2)
	                Resize(InnerCircle, {Size = UDim2.new(0, 0, 0, 0), ImageColor3 = Color3.fromRGB(150,150,150)}, .2)
				end
	
				pcall(callback, enabled)
			end
	
			switch.MouseButton1Click:connect(Trigger)
	
			function switchactions:Set(state)
				Trigger(state)
				pcall(callback, enabled)
			end
	
			Open()
			return switchactions
		end
		
		function SectionElements:AddButton(text, callback)
			text = text or "New button"
			callback = callback or function() end
	
			local button = Instance.new("TextButton", SecBodyelements)
			table.insert(SectionTabs, button)
	
			button.Size = UDim2.new(0, 205, 0, 32.5)
			button.AnchorPoint = Vector2.new(0.5,0)
			button.Position = UDim2.new(0.5, 0, ((pixelspacing - 3) / 700) * #SectionTabs, 28 * (#SectionTabs - 1))
			button.BackgroundTransparency = 0
			button.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
	        button.BorderSizePixel = 1
	        button.BorderColor3 = Color3.fromRGB(60, 60, 60)
			button.TextColor3 = Color3.new(1, 1, 1)
			button.TextSize = 15
			button.TextXAlignment = Enum.TextXAlignment.Left
			button.Font = options.font
			button.Text = "    " .. tostring(text)
			button.ZIndex = SecBodyelements.ZIndex
	        button.AutoButtonColor = false
	        button.ClipsDescendants = true
			button.Active = true
			button.Name = HttpService:GenerateGUID(false)
			
			local buttonText = Instance.new("TextLabel", button)
			buttonText.Name = HttpService:GenerateGUID(false)
			buttonText.BackgroundTransparency = 1
			buttonText.Size = UDim2.new(1,0,1,0)
			buttonText.AnchorPoint = Vector2.new(0.5,0.5)
			buttonText.Position = UDim2.new(0.5,0,0.5,0)
			buttonText.ZIndex = bodyelements.ZIndex
			buttonText.Text = "    " .. tostring(text)
			buttonText.TextColor3 = Color3.new(1, 1, 1)
			buttonText.TextSize = 15
			buttonText.TextXAlignment = Enum.TextXAlignment.Left
			buttonText.Font = options.font
			
			local UIGradient = Instance.new("UIGradient")
			UIGradient.Color = ColorSequence.new{ColorSequenceKeypoint.new(0, ColorGradient1), ColorSequenceKeypoint.new(1, ColorGradient2)}
			UIGradient.Parent = button 
			UIGradient.Name = HttpService:GenerateGUID(false)
			table.insert(uiGradients, UIGradient)
			
			local actionbutton = Instance.new("ImageButton", button)
			actionbutton.BackgroundTransparency = 1
			actionbutton.Size = UDim2.new(0, 24, 0, 24)
			actionbutton.AnchorPoint = Vector2.new(0.5,0.5)
			actionbutton.Position = UDim2.new(0.9, 0, 0.5, 0)
			actionbutton.ZIndex = button.ZIndex
			actionbutton.Image = 'rbxassetid://5044249458'
			actionbutton.ImageTransparency = 1
			actionbutton.Name = HttpService:GenerateGUID(false)
		
			local OPImg = Instance.new("ImageButton", actionbutton)
			OPImg.BackgroundTransparency = 1
			OPImg.Size = UDim2.new(1, 0, 1, 0)
			OPImg.Position = UDim2.new(0, 0, 0, 0)
			OPImg.ZIndex = actionbutton.ZIndex + 1
			OPImg.Image = 'rbxassetid://5044275451'
			OPImg.Name = HttpService:GenerateGUID(false)
	        
	        local function shine(duration)
	            button.ClipsDescendants = true
	            local sFrame = Instance.new("ImageLabel", button)
	            sFrame.Active = true
	            sFrame.Image = "rbxassetid://2954823376"
	            sFrame.Size = UDim2.new(0, 200, 0, 200)
	            sFrame.Position = UDim2.new(0, -100, -1.5, 0)
	            sFrame.AnchorPoint = Vector2.new(0.5, 0.5)
	            sFrame.ZIndex = button.ZIndex
	            sFrame.BorderSizePixel = 0
	            sFrame.BackgroundTransparency = 1
	            sFrame.ImageTransparency = 1
				sFrame.BackgroundColor3 = Color3.new(255, 255, 255)
				sFrame.Name = HttpService:GenerateGUID(false)
	            Resize(sFrame, {ImageTransparency = 0.35}, 0.5)
	            sFrame:TweenPosition(UDim2.new(1, 50, 3, 0), "Out", "Quad", duration)
	
	            spawn(function()
	                wait(duration + 0.5)
	                sFrame:Destroy()
	            end)
	        end
	
			local function onClick()
	            makeImage()
	            shine(0.75)
				pcall(callback)
			end
			
			OPImg.MouseButton1Click:connect(onClick)
			button.MouseButton1Click:connect(onClick)
			
			Open()
		end
		
		function SectionElements:AddSlider(text, minvalue, maxvalue, callback)
			local slideractions = {}
			text = text or "New slider"
			minvalue = minvalue or 0
			maxvalue = maxvalue or 100
			callback = callback or function() end
	
			local box = Instance.new("TextLabel", SecBodyelements)
			table.insert(SectionTabs, box)
	
			box.Size = UDim2.new(0, 205, 0, 32.5)
			box.AnchorPoint = Vector2.new(0.5,0)
			box.Position = UDim2.new(0.5, 0, ((pixelspacing - 3) / 700) * #SectionTabs, 28 * (#SectionTabs - 1))
			box.BackgroundTransparency = 0
			box.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
	        box.BorderSizePixel = 1
	        box.BorderColor3 = Color3.fromRGB(60, 60, 60)
			box.TextColor3 = Color3.new(1, 1, 1)
			box.TextSize = 15
			box.TextXAlignment = Enum.TextXAlignment.Left
			box.Font = options.font
			box.Text = ""
			box.ZIndex = SecBodyelements.ZIndex
			box.Name = HttpService:GenerateGUID(false)
			
			local UIGradient = Instance.new("UIGradient")
			UIGradient.Color = ColorSequence.new{ColorSequenceKeypoint.new(0, ColorGradient1), ColorSequenceKeypoint.new(1, ColorGradient2)}
			UIGradient.Parent = box
			UIGradient.Name = HttpService:GenerateGUID(false)
			table.insert(uiGradients, UIGradient)
			
			local UpperSlideValue = Instance.new("TextLabel")
			UpperSlideValue.Name = HttpService:GenerateGUID(false)
			UpperSlideValue.Parent = box
			UpperSlideValue.AnchorPoint = Vector2.new(0.5, 0.5)
			UpperSlideValue.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
			UpperSlideValue.BackgroundTransparency = 1.000
			UpperSlideValue.Position = UDim2.new(0.5, 0, 0.5, 0)
			UpperSlideValue.Size = UDim2.new(1, -7, 1, -1)
			UpperSlideValue.ZIndex = box.ZIndex + 1
			UpperSlideValue.Font = options.font
			UpperSlideValue.Text = tostring(minvalue)
			UpperSlideValue.TextColor3 = Color3.fromRGB(150, 150, 150)
			UpperSlideValue.TextSize = 14
			UpperSlideValue.TextXAlignment = Enum.TextXAlignment.Right
			UpperSlideValue.TextYAlignment = Enum.TextYAlignment.Top
			
			local UpperSlideText = Instance.new("TextLabel")
			UpperSlideText.Name = HttpService:GenerateGUID(false)
			UpperSlideText.Parent = box
			UpperSlideText.AnchorPoint = Vector2.new(0.5, 0.5)
			UpperSlideText.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
			UpperSlideText.BackgroundTransparency = 1.000
			UpperSlideText.Position = UDim2.new(0.5, 0, 0.5, 0)
			UpperSlideText.Size = UDim2.new(1, -7, 1, -1)
			UpperSlideText.ZIndex = box.ZIndex
			UpperSlideText.Font = options.font
			UpperSlideText.Text = tostring(text)
			UpperSlideText.TextColor3 = Color3.fromRGB(150, 150, 150)
			UpperSlideText.TextSize = 14
			UpperSlideText.TextXAlignment = Enum.TextXAlignment.Left
			UpperSlideText.TextYAlignment = Enum.TextYAlignment.Top
			
	
			local Slider = Instance.new("Frame")
			local Point = Instance.new("ImageLabel")
			local MouseOn = Instance.new("ImageLabel")
			local MouseDown = Instance.new("ImageLabel")
			local ValIcon = Instance.new("ImageLabel")
			local ValText = Instance.new("TextLabel")
			local Back = Instance.new("Frame")
			local MouseButton = Instance.new("TextButton")
			
			Slider.Name = HttpService:GenerateGUID(false)
			Slider.Parent = box
			Slider.BackgroundColor3 = Color3.fromRGB(125, 125, 125)
			Slider.BorderSizePixel = 0
			Slider.Size = UDim2.new(0, 160, 0, 2)
			Slider.ZIndex = box.ZIndex
			Slider.AnchorPoint = Vector2.new(0.5,0.5)
			Slider.Position = UDim2.new(0.5, 0, 0.5, 7)
			
			Point.Name = HttpService:GenerateGUID(false)
			Point.Parent = Slider
			Point.AnchorPoint = Vector2.new(0.5, 0.5)
			Point.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
			Point.BackgroundTransparency = 1.000
			Point.Position = UDim2.new(0, 0, 0.5, 0)
			Point.Size = UDim2.new(0, 12, 0, 12)
			Point.ZIndex = box.ZIndex + 1
			Point.Image = "rbxassetid://1217158727"
			Point.ImageColor3 = Color3.fromRGB(255, 255, 255)
			
			MouseOn.Name = HttpService:GenerateGUID(false)
			MouseOn.Parent = Point
			MouseOn.AnchorPoint = Vector2.new(0.5, 0.5)
			MouseOn.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
			MouseOn.BackgroundTransparency = 1.000
			MouseOn.Position = UDim2.new(0.5, 0, 0.5, 0)
			MouseOn.ZIndex = box.ZIndex + 1
			MouseOn.Image = "rbxassetid://1217158727"
			MouseOn.ImageColor3 = Color3.fromRGB(255, 255, 255)
			MouseOn.ImageTransparency = 0.850
			
			MouseDown.Name = HttpService:GenerateGUID(false)
			MouseDown.Parent = Point
			MouseDown.AnchorPoint = Vector2.new(0.5, 0.5)
			MouseDown.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
			MouseDown.BackgroundTransparency = 1.000
			MouseDown.Position = UDim2.new(0.5, 0, 0.5, 0)
			MouseDown.ZIndex = box.ZIndex + 1
			MouseDown.Image = "rbxassetid://1217158727"
			MouseDown.ImageColor3 = Color3.fromRGB(255, 255, 255)
			MouseDown.ImageTransparency = 0.850
			
			ValIcon.Name = HttpService:GenerateGUID(false)
			ValIcon.Parent = Point
			ValIcon.AnchorPoint = Vector2.new(0.5, 1)
			ValIcon.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
			ValIcon.BackgroundTransparency = 1.000
			ValIcon.BorderSizePixel = 0
			ValIcon.ClipsDescendants = true
			ValIcon.Position = UDim2.new(0.5, 0, 0, 2)
			ValIcon.ZIndex = box.ZIndex + 1
			ValIcon.Image = "http://www.roblox.com/asset/?id=5047851106"
			ValIcon.ImageColor3 = Color3.fromRGB(255, 255, 255)
			
			ValText.Name = HttpService:GenerateGUID(false)
			ValText.Parent = ValIcon
			ValText.AnchorPoint = Vector2.new(0.5, 0.5)
			ValText.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
			ValText.BackgroundTransparency = 1.000
			ValText.Position = UDim2.new(0.5, 0, 0.5, 0)
			ValText.Size = UDim2.new(0.800000012, 0, 0, 28)
			ValText.ZIndex = box.ZIndex + 1
			ValText.Font = Enum.Font.SourceSans
			ValText.Text = "1"
			ValText.TextColor3 = Color3.fromRGB(0, 170, 210)
			ValText.TextSize = 14
			
			Back.Name = HttpService:GenerateGUID(false)
			Back.Parent = Slider
			Back.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
			Back.BorderSizePixel = 0
			Back.Size = UDim2.new(0, 0, 1, 0)
			Back.ZIndex = box.ZIndex
			
			MouseButton.Name = HttpService:GenerateGUID(false)
			MouseButton.Parent = Slider
			MouseButton.AnchorPoint = Vector2.new(0, 0.5)
			MouseButton.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
			MouseButton.BackgroundTransparency = 1.000
			MouseButton.BorderSizePixel = 0
			MouseButton.Position = UDim2.new(0, 0, 0.5, 0)
			MouseButton.Size = UDim2.new(1, 0, 1, 10)
			MouseButton.Font = Enum.Font.SourceSans
			MouseButton.Text = ""
			MouseButton.TextColor3 = Color3.fromRGB(0, 0, 0)
			MouseButton.TextSize = 14
			MouseButton.TextTransparency = 1
			
			local MouseisOn = false
			local MouseisDown = false
			local Value = 0
			local Max = 100
			local IntOnly = true 
			local ValueLabelMultiply = 1
			local ValueLabel = true
			
			MouseButton.MouseEnter:Connect(function()
				MouseisOn = true
				MouseOn:TweenSize(UDim2.new(2, 0, 2, 0),Enum.EasingDirection.Out,Enum.EasingStyle.Linear,0.12,true,nil)
			end)
			
			MouseButton.MouseLeave:Connect(function()
				MouseisOn = false
				if MouseisDown == false then
					MouseOn:TweenSize(UDim2.new(0,0,0,0),Enum.EasingDirection.Out,Enum.EasingStyle.Linear,0.12,true,nil)
				end
			end)
			
			local UserInputService = game:GetService("UserInputService")
			local RunService = game:GetService("RunService")
			
			local Connection;
			UserInputService.InputEnded:Connect(function(input)
			    if input.UserInputType == Enum.UserInputType.MouseButton1 then
			        if(Connection) then
						ValIcon:TweenSize(UDim2.new(0, 0, 0, 0),Enum.EasingDirection.Out,Enum.EasingStyle.Linear,0.12,true,nil)
			            Connection:Disconnect();
			            Connection = nil;
			        end;
			    end;
			end);
			
			MouseButton.MouseButton1Down:Connect(function()
			    if(Connection) then
			        Connection:Disconnect();
			    end;
			
			    Connection = RunService.Heartbeat:Connect(function()
			        local mouse = UserInputService:GetMouseLocation();
			        local percent = math.clamp((mouse.X - MouseButton.AbsolutePosition.X) / (MouseButton.AbsoluteSize.X), 0, 1);
			        local Value = minvalue + (maxvalue - minvalue) * percent;
					
					ValIcon:TweenSize(UDim2.new(0, 28,0, 40),Enum.EasingDirection.Out,Enum.EasingStyle.Linear,0.12,true,nil)
						
					if MouseisOn == false then
						MouseOn:TweenSize(UDim2.new(0,0,0,0),Enum.EasingDirection.Out,Enum.EasingStyle.Linear,0.12,true,nil)
					end
					
					local NewValue = percent * 100
					Point:TweenPosition(UDim2.new(NewValue/Max,0,0.5,0),Enum.EasingDirection.Out,Enum.EasingStyle.Quad,0.1,true,nil)
					Back:TweenSize(UDim2.new(NewValue/Max,0,1,0),Enum.EasingDirection.Out,Enum.EasingStyle.Quad,0.1,true,nil)
			
			        Value = tonumber(string.format("%.2f", math.floor(Value)));
			
					ValText.Text = Value
					UpperSlideValue.Text = tostring(Value)
					
			    end);
			end);
			
			function slideractions:Set(val)
				local NewValue = ((val-minvalue)/(maxvalue-minvalue)) * 100
				Point:TweenPosition(UDim2.new(NewValue/Max,0,0.5,0),Enum.EasingDirection.Out,Enum.EasingStyle.Quad,0.1,true,nil)
				Back:TweenSize(UDim2.new(NewValue/Max,0,1,0),Enum.EasingDirection.Out,Enum.EasingStyle.Quad,0.1,true,nil)
		
				ValText.Text = val
				UpperSlideValue.Text = tostring(val)
			end
	
			return slideractions
		end
		
		return SectionElements
	end
	
	function elements:AddButton(text, callback)
		text = text or "New button"
		callback = callback or function() end

		local button = Instance.new("TextButton", bodyelements)

		button.Size = UDim2.new(0, 215/1.15, 0, 32.5/1.15)
		button.AnchorPoint = Vector2.new(0.5,0)
		button.Position = UDim2.new(0.5, 0, (pixelspacing / 990) * #PhaseOneInstances + 0.0155, 0)
		button.BackgroundTransparency = 0
		button.BackgroundColor3 = Color3.fromRGB(160, 160, 160)
        button.BorderSizePixel = 3
		button.BorderMode = Enum.BorderMode.Inset
        button.BorderColor3 = Color3.fromRGB(160, 160, 160)
		button.TextColor3 = Color3.new(1, 1, 1)
		button.TextSize = 15
		button.TextXAlignment = Enum.TextXAlignment.Left
		button.Font = options.font
		button.Text = "    " --.. tostring(text)
		button.ZIndex = bodyelements.ZIndex
        button.AutoButtonColor = false
        button.ClipsDescendants = true
		button.Active = true
		button.Name = HttpService:GenerateGUID(false)
		
		local buttonText = Instance.new("TextLabel", button)
		buttonText.Name = HttpService:GenerateGUID(false)
		buttonText.BackgroundTransparency = 1
		buttonText.Size = UDim2.new(1,0,1,0)
		buttonText.AnchorPoint = Vector2.new(0.5,0.5)
		buttonText.Position = UDim2.new(0.5,0,0.5,0)
		buttonText.ZIndex = bodyelements.ZIndex
		buttonText.Text = "    " .. tostring(text)
		buttonText.TextColor3 = Color3.new(1, 1, 1)
		buttonText.TextSize = 15
		buttonText.TextXAlignment = Enum.TextXAlignment.Left
		buttonText.Font = options.font
		
		local UIGradient = Instance.new("UIGradient")
		UIGradient.Color = ColorSequence.new{ColorSequenceKeypoint.new(0, ColorGradient1), ColorSequenceKeypoint.new(1, ColorGradient2)}
		UIGradient.Parent = button
		UIGradient.Name = HttpService:GenerateGUID(false)
		table.insert(uiGradients, UIGradient)
		
		local actionbutton = Instance.new("ImageButton", button)
		actionbutton.BackgroundTransparency = 1
		actionbutton.Size = UDim2.new(0, 24, 0, 24)
		actionbutton.AnchorPoint = Vector2.new(0.5,0.5)
		actionbutton.Position = UDim2.new(0.9, 0, 0.5, 0)
		actionbutton.ZIndex = button.ZIndex
		actionbutton.Image = 'rbxassetid://5044249458'
		actionbutton.ImageTransparency = 1
		actionbutton.Name = HttpService:GenerateGUID(false)
	
		local OPImg = Instance.new("ImageButton", actionbutton)
		OPImg.BackgroundTransparency = 1
		OPImg.Size = UDim2.new(1, 0, 1, 0)
		OPImg.Position = UDim2.new(0, 0, 0, 0)
		OPImg.ZIndex = actionbutton.ZIndex + 1
		OPImg.Image = 'rbxassetid://5044275451'
		OPImg.Name = HttpService:GenerateGUID(false)
        
        local function shine(duration)
            button.ClipsDescendants = true
            local sFrame = Instance.new("ImageLabel", button)
            sFrame.Active = true
            sFrame.Image = "rbxassetid://2954823376"
            sFrame.Size = UDim2.new(0, 200, 0, 200)
            sFrame.Position = UDim2.new(0, -100, -1.5, 0)
            sFrame.AnchorPoint = Vector2.new(0.5, 0.5)
            sFrame.ZIndex = button.ZIndex
            sFrame.BorderSizePixel = 0
            sFrame.BackgroundTransparency = 1
            sFrame.ImageTransparency = 1
			sFrame.BackgroundColor3 = Color3.new(255, 255, 255)
			sFrame.Name = HttpService:GenerateGUID(false)
            Resize(sFrame, {ImageTransparency = 0.35}, 0.5)
            sFrame:TweenPosition(UDim2.new(1, 50, 3, 0), "Out", "Quad", duration)

            spawn(function()
                wait(duration + 0.5)
                sFrame:Destroy()
            end)
        end

		local function onClick()
            makeImage()
            shine(0.75)
			pcall(callback)
		end

		OPImg.MouseButton1Click:connect(onClick)

		button.MouseButton1Click:connect(onClick)

		table.insert(PhaseOneInstances, button)

		Open()
	end
	local openColors = {}
	function elements:AddColor(text, presetColor, callback)
		text = text or "New color"
		callback = callback or function() end

		local hueSatDragging = false;
		local valueDragging = false;
		local button = Instance.new("TextButton", bodyelements)
		local statusFrame = Instance.new("Frame", button);
		local colorPickingFrame = Instance.new("Frame", button);
		local hueSatFrame = Instance.new("ImageLabel", colorPickingFrame);
		local hueSatIndicatorFrame = Instance.new("ImageLabel", hueSatFrame);
		local valueFrame = Instance.new("ImageLabel", colorPickingFrame);
		local valueIndicatorFrame = Instance.new("ImageLabel", valueFrame);

		button.Size = UDim2.new(0, 215/1.15, 0, 32.5/1.15)
		button.AnchorPoint = Vector2.new(0.5,0)
		button.Position = UDim2.new(0.5, 0, (pixelspacing / 990) * #PhaseOneInstances + 0.0155, 0)
		button.BackgroundTransparency = 0
		button.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
		button.BorderSizePixel = 1
		button.BorderColor3 = Color3.fromRGB(60, 60, 60)
		button.TextColor3 = Color3.new(1, 1, 1)
		button.TextSize = 15
		button.TextXAlignment = Enum.TextXAlignment.Left
		button.Font = options.font
		button.Text = "    " --.. tostring(text)
        button.AutoButtonColor = false
        button.ClipsDescendants = false
		button.Active = true
		button.Name = HttpService:GenerateGUID(false)
		button.ZIndex = bodyelements.ZIndex

		local buttonText = Instance.new("TextLabel", button)
		buttonText.Name = HttpService:GenerateGUID(false)
		buttonText.BackgroundTransparency = 1
		buttonText.Size = UDim2.new(1,0,1,0)
		buttonText.AnchorPoint = Vector2.new(0.5,0.5)
		buttonText.Position = UDim2.new(0.5,0,0.5,0)
		buttonText.ZIndex = button.ZIndex + 1
		buttonText.Text = "    " .. tostring(text)
		buttonText.TextColor3 = Color3.new(1, 1, 1)
		buttonText.TextSize = 15
		buttonText.TextXAlignment = Enum.TextXAlignment.Left
		buttonText.Font = options.font
		
		statusFrame.Name = HttpService:GenerateGUID(false)
		statusFrame.AnchorPoint = Vector2.new(1, 0);
		statusFrame.BackgroundColor3 = presetColor or Color3.fromRGB(255, 255, 255);
		statusFrame.BorderSizePixel = 0;
		statusFrame.Position = UDim2.new(1, 0, 0, 0);
		statusFrame.Size = UDim2.new(0.223, 0, 1, 0);

		local ColorBoxButton = Instance.new("ImageLabel", button)
		ColorBoxButton.AnchorPoint = Vector2.new(0, 0.5)
		ColorBoxButton.Size = UDim2.new(0, 20, 0, 20)
		ColorBoxButton.Position = UDim2.new(1, -30, 0.5, 0)
		ColorBoxButton.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
		ColorBoxButton.BorderSizePixel = 0
		ColorBoxButton.ZIndex = button.ZIndex + 2
		ColorBoxButton.ImageTransparency = 0
		ColorBoxButton.BackgroundTransparency = 1
		ColorBoxButton.Image = 'rbxassetid://3574700605'
		ColorBoxButton.ImageColor3 = presetColor
		ColorBoxButton.ScaleType = "Stretch"
		ColorBoxButton.SliceScale = 1
		ColorBoxButton.Name = HttpService:GenerateGUID(false)
		
		colorPickingFrame.Name = HttpService:GenerateGUID(false)
		colorPickingFrame.BackgroundColor3 = Color3.fromRGB(40, 40, 40);
		colorPickingFrame.BorderSizePixel = 1
		colorPickingFrame.BorderColor3 = Color3.fromRGB(60, 60, 60)
		colorPickingFrame.Position = UDim2.new(0, 0, 1, 0);
		colorPickingFrame.Size = UDim2.new(1, 0, 0, 0);
		colorPickingFrame.Visible = false;
		colorPickingFrame.ZIndex = button.ZIndex;
		
		hueSatFrame.Name = HttpService:GenerateGUID(false)
		hueSatFrame.BackgroundTransparency = 1;
		hueSatFrame.BorderSizePixel = 0;
		hueSatFrame.ClipsDescendants = true;
		hueSatFrame.Position = UDim2.new(0.03, 0, 0.057, 0);
		hueSatFrame.Size = UDim2.new(0.764, 0, 0.886, 0);
		hueSatFrame.Image = "rbxassetid://4018903152";
		hueSatFrame.ZIndex = button.ZIndex;
		
		hueSatIndicatorFrame.Name = HttpService:GenerateGUID(false)
		hueSatIndicatorFrame.AnchorPoint = Vector2.new(0.5, 0.5);
		hueSatIndicatorFrame.BackgroundTransparency = 1;
		hueSatIndicatorFrame.BorderSizePixel = 0;
		hueSatIndicatorFrame.Position = UDim2.new(presetColor and select(1, Color3.toHSV(presetColor)) or 0, 0, presetColor and 1 - select(2, Color3.toHSV(presetColor)) or 0, 0);
		hueSatIndicatorFrame.Size = UDim2.new(0.146, 0, 0.2, 0);
		hueSatIndicatorFrame.Image = "rbxassetid://4019495410";
		hueSatIndicatorFrame.ImageColor3 = Color3.fromRGB(0, 0, 0);
		hueSatIndicatorFrame.ScaleType = Enum.ScaleType.Crop;
		hueSatIndicatorFrame.ZIndex = button.ZIndex;
		
		valueFrame.Name = HttpService:GenerateGUID(false)
		valueFrame.AnchorPoint = Vector2.new(1, 0)
		valueFrame.BackgroundTransparency = 1
		valueFrame.BorderSizePixel = 0;
		valueFrame.Position = UDim2.new(0.981, 0, 0.057, 0);
		valueFrame.Size = UDim2.new(0.157, 0, 0.886, 0);
		valueFrame.Image = "rbxassetid://4019265005";
		valueFrame.ImageColor3 = presetColor and Color3.fromHSV(Color3.toHSV(presetColor)) or Color3.fromRGB(255, 255, 255);
		valueFrame.ScaleType = Enum.ScaleType.Crop;
		valueFrame.ZIndex = button.ZIndex;
		
		valueIndicatorFrame.Name = HttpService:GenerateGUID(false)
		valueIndicatorFrame.AnchorPoint = Vector2.new(0, 0.5);
		valueIndicatorFrame.BackgroundColor3 = Color3.fromRGB(255, 255, 255);
		valueIndicatorFrame.BackgroundTransparency = 1
		valueIndicatorFrame.BorderColor3 = Color3.fromRGB(0, 0, 0);
		valueIndicatorFrame.BorderSizePixel = 0;
		valueIndicatorFrame.Position = UDim2.new(-0.6, 0, presetColor and 1 - select(3, Color3.toHSV(presetColor)) or 0, 0);
		valueIndicatorFrame.Size = UDim2.new(0, 25, 0, 25);
		valueIndicatorFrame.Image = "rbxassetid://71659683";
		valueIndicatorFrame.ImageColor3 = Color3.fromRGB(255,255,255)
		valueIndicatorFrame.ZIndex = button.ZIndex;

		openColors[button.Name] = function()
			spawn(function()
				button.ZIndex = bodyelements.ZIndex
				valueIndicatorFrame.ZIndex = button.ZIndex;
				valueFrame.ZIndex = button.ZIndex;
				hueSatIndicatorFrame.ZIndex = button.ZIndex;
				hueSatFrame.ZIndex = button.ZIndex;
				colorPickingFrame.ZIndex = button.ZIndex;
				ColorBoxButton.ZIndex = button.ZIndex + 2
				buttonText.ZIndex = button.ZIndex
				colorPickingFrame:TweenSize(UDim2.new(1, 0, 0, 0), Enum.EasingDirection.Out, Enum.EasingStyle.Quad, 0.2, true);
				wait(0.15);
				colorPickingFrame.Visible = false;
			end)
		end

		button.MouseButton1Click:Connect(function()
			if not colorPickingFrame.Visible then
				for i,v in pairs(openColors) do
					if i ~= button.Name then
						warn(i,v)
						v()
					end
				end
				button.ZIndex = 20
				valueIndicatorFrame.ZIndex = button.ZIndex;
				valueFrame.ZIndex = button.ZIndex;
				hueSatIndicatorFrame.ZIndex = button.ZIndex;
				hueSatFrame.ZIndex = button.ZIndex;
				colorPickingFrame.ZIndex = button.ZIndex;
				ColorBoxButton.ZIndex = button.ZIndex + 2
				colorPickingFrame.Visible = true;
				buttonText.ZIndex = button.ZIndex
				colorPickingFrame:TweenSize(UDim2.new(1, 0, 5, 0), Enum.EasingDirection.Out, Enum.EasingStyle.Quad, 0.2, true);
			elseif colorPickingFrame.Visible then
				button.ZIndex = bodyelements.ZIndex
				valueIndicatorFrame.ZIndex = button.ZIndex;
				valueFrame.ZIndex = button.ZIndex;
				hueSatIndicatorFrame.ZIndex = button.ZIndex;
				hueSatFrame.ZIndex = button.ZIndex;
				colorPickingFrame.ZIndex = button.ZIndex;
				ColorBoxButton.ZIndex = button.ZIndex + 2
				buttonText.ZIndex = button.ZIndex
				colorPickingFrame:TweenSize(UDim2.new(1, 0, 0, 0), Enum.EasingDirection.Out, Enum.EasingStyle.Quad, 0.2, true);
				wait(0.15);
				colorPickingFrame.Visible = false;
			end;
		end);
		
		hueSatFrame.InputBegan:Connect(function(input)
			if input.UserInputType == Enum.UserInputType.MouseButton1 then
				hueSatDragging = true;
			end;
		end);
		
		hueSatFrame.InputEnded:Connect(function(input)
			if input.UserInputType == Enum.UserInputType.MouseButton1 then
				hueSatDragging = false;
			end;
		end);

		valueFrame.InputBegan:Connect(function(input)
			if input.UserInputType == Enum.UserInputType.MouseButton1 then
				valueDragging = true;
			end;
		end)
		
		valueFrame.InputEnded:Connect(function(input)
			if input.UserInputType == Enum.UserInputType.MouseButton1 then
				valueDragging = false;
			end;
		end);
		
		game:GetService("UserInputService").InputChanged:Connect(function(input)
			if hueSatDragging and input.UserInputType == Enum.UserInputType.MouseMovement then
				hueSatIndicatorFrame.Position = UDim2.new(math.clamp((input.Position.X - hueSatFrame.AbsolutePosition.X) / hueSatFrame.AbsoluteSize.X, 0, 1), 0, math.clamp((input.Position.Y - hueSatFrame.AbsolutePosition.Y) / hueSatFrame.AbsoluteSize.Y, 0, 1), 0);
				statusFrame.BackgroundColor3 = Color3.fromHSV(hueSatIndicatorFrame.Position.X.Scale, 1 - hueSatIndicatorFrame.Position.Y.Scale, 1 - valueIndicatorFrame.Position.Y.Scale);
				valueFrame.ImageColor3 = Color3.fromHSV(hueSatIndicatorFrame.Position.X.Scale, 1 - hueSatIndicatorFrame.Position.Y.Scale, 1);
				ColorBoxButton.ImageColor3 = statusFrame.BackgroundColor3
				callback(statusFrame.BackgroundColor3);

			elseif valueDragging and input.UserInputType == Enum.UserInputType.MouseMovement then
				valueIndicatorFrame.Position = UDim2.new(-0.6, 0, math.clamp((input.Position.Y - valueFrame.AbsolutePosition.Y) / valueFrame.AbsoluteSize.Y, 0, 1), 0);
				statusFrame.BackgroundColor3 = Color3.fromHSV(hueSatIndicatorFrame.Position.X.Scale, 1 - hueSatIndicatorFrame.Position.Y.Scale, 1 - valueIndicatorFrame.Position.Y.Scale);
				valueFrame.ImageColor3 = Color3.fromHSV(hueSatIndicatorFrame.Position.X.Scale, 1 - hueSatIndicatorFrame.Position.Y.Scale, 1);
				ColorBoxButton.ImageColor3 = statusFrame.BackgroundColor3
				callback(statusFrame.BackgroundColor3);

			end;
		end);

		table.insert(PhaseOneInstances, button)
		callback(statusFrame.BackgroundColor3);

		Open()
	end
	
	function elements:AddSwitch(text, callback)
		local switchactions = {}
		text = text or "New switch"
		callback = callback or function() end
		
		local switch = Instance.new("TextButton", bodyelements)
		switch.Size = UDim2.new(0, 215/1.15, 0, 32.5/1.15)
		switch.AnchorPoint = Vector2.new(0.5,0)
		switch.Position = UDim2.new(0.5, 0, (pixelspacing / 990) * #PhaseOneInstances + 0.0155, 0)
		switch.BackgroundTransparency = 0
		switch.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
		switch.BorderSizePixel = 1
		switch.BorderColor3 = Color3.fromRGB(60, 60, 60)
		switch.TextColor3 = Color3.new(1, 1, 1)
		switch.TextSize = 15
		switch.TextXAlignment = Enum.TextXAlignment.Left
		switch.Font = options.font
		switch.Text = "    " .. tostring(text)
        switch.ZIndex = bodyelements.ZIndex
		switch.AutoButtonColor = false
		switch.Name = HttpService:GenerateGUID(false)

		local enabled = false
		local OuterCircle = Instance.new("ImageLabel", switch)
		OuterCircle.AnchorPoint = Vector2.new(0, 0.5)
		OuterCircle.Size = UDim2.new(0, 20, 0, 20)
		OuterCircle.Position = UDim2.new(1, -30, 0.5, 0)
		OuterCircle.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
		OuterCircle.BorderSizePixel = 0
		OuterCircle.ZIndex = switch.ZIndex + 2
		OuterCircle.ImageTransparency = 0
		OuterCircle.BackgroundTransparency = 1
		OuterCircle.Image = 'rbxassetid://2012883770'
		OuterCircle.ImageColor3 = Color3.fromRGB(150, 150, 150)
		OuterCircle.ScaleType = "Stretch"
		OuterCircle.SliceScale = 1
		OuterCircle.Name = HttpService:GenerateGUID(false)
		toggleOuterCircles[OuterCircle] = enabled

        local InnerCircle = Instance.new("ImageLabel", OuterCircle)
        InnerCircle.Size = UDim2.new(0, 0, 0, 0)
        InnerCircle.AnchorPoint = Vector2.new(0.5, 0.5)
		InnerCircle.Position = UDim2.new(0.5, 0, 0.5, 0)
		InnerCircle.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
		InnerCircle.BorderSizePixel = 0
		InnerCircle.ZIndex = switch.ZIndex + 3
		InnerCircle.ImageTransparency = 0
		InnerCircle.BackgroundTransparency = 1
		InnerCircle.Image = 'rbxassetid://517259585'
		InnerCircle.ImageColor3 = Color3.fromRGB(150, 150, 150)
		InnerCircle.ScaleType = "Stretch"
		InnerCircle.SliceScale = 1
		InnerCircle.Name = HttpService:GenerateGUID(false)
		toggleInnerCircles[InnerCircle] = enabled

        local Frame = Instance.new("ImageLabel", OuterCircle)
        Frame.ClipsDescendants = true
        Frame.BackgroundTransparency = 1
        Frame.BorderSizePixel = 0
        Frame.ZIndex = switch.ZIndex + 1
        Frame.Size = UDim2.new(1, 5, 1, 5)
        Frame.AnchorPoint = Vector2.new(0.5, 0.5)
        Frame.Position = UDim2.new(0.5, 0, 0.5, 0)
        Frame.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
        Frame.Image = "rbxassetid://200182847"
		Frame.ImageTransparency = 1
		Frame.Name = HttpService:GenerateGUID(false)

        switch.MouseEnter:Connect(function()
            Frame.ImageTransparency = .9
        end)
        switch.MouseLeave:Connect(function()
            Frame.ImageTransparency = 1
        end)

		local function Trigger(state)
			if state == nil then 
				enabled = not enabled
			else 
				enabled = state 
			end
			local ac = options.AccentColor
			toggleOuterCircles[OuterCircle] = enabled
			toggleInnerCircles[InnerCircle] = enabled

			if enabled then
                Resize(OuterCircle, {ImageColor3 = ColorGradient1}, .2)
                Resize(InnerCircle, {Size = UDim2.new(1, -14.5, 1, -14.5), ImageColor3 = ColorGradient1}, .2)
			else
                Resize(OuterCircle, {ImageColor3 = Color3.fromRGB(150,150,150)}, .2)
                Resize(InnerCircle, {Size = UDim2.new(0, 0, 0, 0), ImageColor3 = Color3.fromRGB(150,150,150)}, .2)
			end
			pcall(callback, enabled)
		end

		switch.MouseButton1Click:connect(Trigger)

		function switchactions:Set(state)
			Trigger(state)
		end

		table.insert(PhaseOneInstances, switch)

		Open()

		return switchactions
	end
	
	function elements:NewList(name, text)
		text = text or "Empty List"
		
		local Top = CreateTop(name, true)

		local button = Instance.new("TextLabel", Top)
		
		local minHeight = 10
		
		button.Position = UDim2.new(0, 0, 0, 27)
		button.BackgroundTransparency = 0
		button.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
		button.BorderSizePixel = 0
		button.TextColor3 = Color3.new(1, 1, 1)
		button.TextSize = 20
		button.TextXAlignment = Enum.TextXAlignment.Left
		button.Font = options.font
		button.Text = tostring(text)
		button.TextXAlignment = Enum.TextXAlignment.Center
		button.Name = HttpService:GenerateGUID(false)
		
		button.Size = UDim2.new(0, 225, 0, math.max(minHeight, button.TextBounds.Y) )
		
		return Top
	end
	
	function elements:NewLogWindow(text)
		local actions = {}
		text = text or "New Window"
		
		local Top = CreateTop(text, true, UDim2.new(0, 600, 0, 25), UDim2.new(.65, 0, .6, 0))
		local body = Instance.new("ScrollingFrame", Top)
		
		body.Position = UDim2.new(0, 0, 0, 0)
		body.Size = UDim2.new(1, 0, 0, 300)
		body.BackgroundTransparency = 0
		body.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
		body.BorderSizePixel = 0
		body.ClipsDescendants = true
		body.Name = HttpService:GenerateGUID(false)

		local VelTxt = Instance.new("TextLabel",Top)
		VelTxt.ZIndex = Top.ZIndex + 1
		VelTxt.Text = "Vel Earned: "
		VelTxt.BackgroundTransparency = 1
		VelTxt.TextColor3 = Color3.fromRGB(210, 210, 0)
		VelTxt.Position = UDim2.new(0,60,0.5,0)
		VelTxt.TextSize = 20
		VelTxt.Font = options.font
		VelTxt.Name = HttpService:GenerateGUID(false)

		function actions:Log(text, color3, image)
			local log = Instance.new("TextLabel")
			log.Parent = body
			log.Text = text or ""
			log.Size = UDim2.new(1, 0, 0, 35)
			log.TextColor3 = color3 or Color3.new(1,1,1)
			log.BackgroundTransparency = 1
			log.TextSize = 20
			log.TextXAlignment = Enum.TextXAlignment.Center
			log.Position = UDim2.new(0,0,0, (30 * #body:GetChildren()))
			log.Font = options.font
			log.Name = HttpService:GenerateGUID(false)
			body.CanvasSize = UDim2.new(0, 0, 0, #body:GetChildren() * 30)
		end

		local actionbutton = Instance.new("ImageButton", Top)
		actionbutton.BackgroundTransparency = 1
		actionbutton.Size = UDim2.new(0, 25, 0, 25)
		actionbutton.Position = UDim2.new(0.93, 0, 0, 0)
		actionbutton.ZIndex = Top.ZIndex
		actionbutton.Image = 'rbxassetid://244221613'
		actionbutton.ImageTransparency = 1
		actionbutton.Name = HttpService:GenerateGUID(false)

		local OPImg = Instance.new("ImageLabel", actionbutton)
		OPImg.BackgroundTransparency = 1
		OPImg.Size = UDim2.new(0, 0, 1, 0)
		OPImg.Position = UDim2.new(0.5, 0, 0, 0)
		OPImg.ZIndex = actionbutton.ZIndex + 1
		OPImg.Image = 'rbxassetid://52756150'
		OPImg.Name = HttpService:GenerateGUID(false)

		local CLImg = Instance.new("ImageLabel", actionbutton)
		CLImg.BackgroundTransparency = 1
		CLImg.Size = UDim2.new(1, 0, 1, 0)
		CLImg.Position = UDim2.new(0, 0, 0, 0)
		CLImg.ZIndex = actionbutton.ZIndex + 1
		CLImg.Image = 'rbxassetid://52756189'
		CLImg.Name = HttpService:GenerateGUID(false)

		local function Close ()
			Resize(body,{Size = UDim2.new(1, 0, 0, 0), Position = UDim2.new(0, 0, 6, -132.5)})
			
			Resize(OPImg, {Size = UDim2.new(1.05, 0, 1.05, 0), Position = UDim2.new(0, 0, 0, 0)}, 0.25)
		end

		local function Open ()
			Resize(body, {Size = UDim2.new(1, 0, 0, 300), Position = UDim2.new(0,0,0,0)})
			
			Resize(OPImg, {Size = UDim2.new(1.05, 0, 0, 0), Position = UDim2.new(0, 0, 0.5, 0)}, 0.25)
		end

		local open = true
		actionbutton.MouseButton1Click:connect(function()
			open = not open
			local func = open and Open or Close
			func()
		end)

		function actions:SetVel(num)
			VelTxt.Text = "Vel Earned: "..num
		end

		return actions

	end
	
	function elements:AddDrop(text, list, callback)
		local switchactions = {}
		text = text or "New Dropdown"
		callback = callback or function() end

		local DropDownOutlinedTextBox = Instance.new("TextBox")
		local Bar = Instance.new("Frame")
		local ErrorText = Instance.new("TextLabel")
		local UIPadding = Instance.new("UIPadding")
		local TopBarL = Instance.new("Frame")
		local TopBarR = Instance.new("Frame")
		local RBar = Instance.new("Frame")
		local LBar = Instance.new("Frame")
		local TextHit = Instance.new("TextLabel")
		local back = Instance.new("TextLabel")
		local TextSize = Instance.new("TextLabel")
		local DropDown = Instance.new("ImageLabel")
		local Holder = Instance.new("Frame")
		local UIListLayout = Instance.new("UIGridLayout")
		local UIPadding_2 = Instance.new("UIPadding")
		local Icon = Instance.new("ImageLabel")
		
		DropDownOutlinedTextBox.Name = HttpService:GenerateGUID(false)
		DropDownOutlinedTextBox.Parent = bodyelements
		DropDownOutlinedTextBox.Size = UDim2.new(0, 215/1.15, 0, 32.5/1.15)
		DropDownOutlinedTextBox.AnchorPoint = Vector2.new(0.5,0)
		DropDownOutlinedTextBox.Position = UDim2.new(0.5, 0, (pixelspacing / 990) * #PhaseOneInstances + 0.0155, 0)
		DropDownOutlinedTextBox.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		DropDownOutlinedTextBox.BackgroundTransparency = 1
		DropDownOutlinedTextBox.ZIndex = bodyelements.ZIndex
		DropDownOutlinedTextBox.ClearTextOnFocus = false
		DropDownOutlinedTextBox.Font = Enum.Font.SourceSans
		DropDownOutlinedTextBox.PlaceholderColor3 = Color3.fromRGB(156, 156, 156)
		DropDownOutlinedTextBox.PlaceholderText = text
		DropDownOutlinedTextBox.Text = ""
		DropDownOutlinedTextBox.TextColor3 = Color3.fromRGB(255, 255, 255)
		DropDownOutlinedTextBox.TextSize = 15.000
		DropDownOutlinedTextBox.TextXAlignment = Enum.TextXAlignment.Left
		
		Bar.Name = HttpService:GenerateGUID(false)
		Bar.Parent = DropDownOutlinedTextBox
		Bar.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
		Bar.BorderSizePixel = 0
		Bar.Position = UDim2.new(0, -6, 1, 0)
		Bar.Selectable = true
		Bar.Size = UDim2.new(1, 12, 0, 2)
		Bar.ZIndex = DropDownOutlinedTextBox.ZIndex
		
		ErrorText.Name = HttpService:GenerateGUID(false)
		ErrorText.Parent = DropDownOutlinedTextBox
		ErrorText.AnchorPoint = Vector2.new(1, 0)
		ErrorText.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		ErrorText.BackgroundTransparency = 1.000
		ErrorText.BorderSizePixel = 0
		ErrorText.Position = UDim2.new(1, 6, 1, 0)
		ErrorText.Size = UDim2.new(1, -4, 0, 18)
		ErrorText.Visible = false
		ErrorText.Font = Enum.Font.SourceSans
		ErrorText.Text = "Error"
		ErrorText.TextColor3 = Color3.fromRGB(255, 33, 33)
		ErrorText.TextSize = 14.000
		ErrorText.TextStrokeColor3 = Color3.fromRGB(255, 33, 33)
		ErrorText.TextStrokeTransparency = 0.940
		ErrorText.TextXAlignment = Enum.TextXAlignment.Left
		ErrorText.ZIndex = DropDownOutlinedTextBox.ZIndex
		
		UIPadding.Parent = DropDownOutlinedTextBox
		UIPadding.PaddingLeft = UDim.new(0, 6)
		UIPadding.PaddingRight = UDim.new(0, 6)
		
		TopBarL.Name = HttpService:GenerateGUID(false)
		TopBarL.Parent = DropDownOutlinedTextBox
		TopBarL.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
		TopBarL.BorderSizePixel = 0
		TopBarL.Position = UDim2.new(0, -6, 0, -2)
		TopBarL.Selectable = true
		TopBarL.Size = UDim2.new(0, 4, 0, 2)
		TopBarL.ZIndex = DropDownOutlinedTextBox.ZIndex
		
		TopBarR.Name = HttpService:GenerateGUID(false)
		TopBarR.Parent = DropDownOutlinedTextBox
		TopBarR.AnchorPoint = Vector2.new(1, 0)
		TopBarR.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
		TopBarR.BorderSizePixel = 0
		TopBarR.Position = UDim2.new(1, 6, 0, -2)
		TopBarR.Selectable = true
		TopBarR.Size = UDim2.new(1, 8, 0, 2)
		TopBarR.ZIndex = DropDownOutlinedTextBox.ZIndex
		
		RBar.Name = HttpService:GenerateGUID(false)
		RBar.Parent = DropDownOutlinedTextBox
		RBar.AnchorPoint = Vector2.new(1, 0)
		RBar.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
		RBar.BorderSizePixel = 0
		RBar.Position = UDim2.new(1, 7, 0, -1)
		RBar.Selectable = true
		RBar.Size = UDim2.new(0, 2, 1, 2)
		RBar.ZIndex = DropDownOutlinedTextBox.ZIndex
		
		LBar.Name = HttpService:GenerateGUID(false)
		LBar.Parent = DropDownOutlinedTextBox
		LBar.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
		LBar.BorderSizePixel = 0
		LBar.Position = UDim2.new(0, -7, 0, -1)
		LBar.Selectable = true
		LBar.Size = UDim2.new(0, 2, 1, 2)
		LBar.ZIndex = DropDownOutlinedTextBox.ZIndex
		
		TextHit.Name = HttpService:GenerateGUID(false)
		TextHit.Parent = DropDownOutlinedTextBox
		TextHit.AnchorPoint = Vector2.new(0, 0.5)
		TextHit.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		TextHit.BackgroundTransparency = 1.000
		TextHit.Position = UDim2.new(0, 0, 0.5, 0)
		TextHit.Size = UDim2.new(1, 0, 1, 0)
		TextHit.ZIndex = DropDownOutlinedTextBox.ZIndex
		TextHit.Font = Enum.Font.SourceSans
		TextHit.TextColor3 = Color3.fromRGB(0, 0, 0)
		TextHit.TextSize = 14.000
		TextHit.TextXAlignment = Enum.TextXAlignment.Left
		
		back.Name = HttpService:GenerateGUID(false)
		back.Parent = TextHit
		back.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		back.BackgroundTransparency = 1.000
		back.Size = UDim2.new(1, 0, 1, 0)
		back.ZIndex = DropDownOutlinedTextBox.ZIndex
		back.Font = Enum.Font.SourceSans
		back.TextColor3 = Color3.fromRGB(0, 0, 0)
		back.TextSize = 14.000
		back.TextXAlignment = Enum.TextXAlignment.Left
		
		TextSize.Name = HttpService:GenerateGUID(false)
		TextSize.Parent = DropDownOutlinedTextBox
		TextSize.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		TextSize.BackgroundTransparency = 1.000
		TextSize.Size = UDim2.new(1, 0, 1, 0)
		TextSize.Visible = false
		TextSize.Font = Enum.Font.SourceSans
		TextSize.TextColor3 = Color3.fromRGB(0, 0, 0)
		TextSize.TextSize = 14.000
		TextSize.TextXAlignment = Enum.TextXAlignment.Left
		TextSize.ZIndex = DropDownOutlinedTextBox.ZIndex
		
		DropDown.Name = HttpService:GenerateGUID(false)
		DropDown.Parent = DropDownOutlinedTextBox
		DropDown.BackgroundColor3 = Color3.fromRGB(112, 112, 112)
		DropDown.BackgroundTransparency = 0
		DropDown.BorderSizePixel = 2
		DropDown.BorderColor3 = Color3.fromRGB(45,45,45)
		DropDown.AnchorPoint = Vector2.new(0.5,0)
		DropDown.Position = UDim2.new(0.5, 0, 1, 4)
		DropDown.Size = UDim2.new(1, 5, 0, 0)
		DropDown.Visible = false
		DropDown.ZIndex = DropDownOutlinedTextBox.ZIndex + 2
		--DropDown.Image = "rbxassetid://1935044829"
		DropDown.ImageTransparency = 1
		DropDown.ImageColor3 = Color3.fromRGB(112, 112, 112)
		DropDown.ScaleType = Enum.ScaleType.Slice
		DropDown.SliceCenter = Rect.new(8, 8, 248, 248)
		
		local UIGradient = Instance.new("UIGradient")
		UIGradient.Color = ColorSequence.new{ColorSequenceKeypoint.new(0, ColorGradient1), ColorSequenceKeypoint.new(1, ColorGradient2)}
		UIGradient.Parent = DropDown
		UIGradient.Name = HttpService:GenerateGUID(false)
		table.insert(uiGradients, UIGradient)
		
		Holder.Name = HttpService:GenerateGUID(false)
		Holder.Parent = DropDown
		Holder.BackgroundColor3 = Color3.fromRGB(112, 112, 112)
		Holder.BackgroundTransparency = 1.000
		Holder.BorderSizePixel = 0
		Holder.ClipsDescendants = true
		Holder.Size = UDim2.new(1, 0, 1, 0)
		Holder.ZIndex = DropDownOutlinedTextBox.ZIndex
		
		UIListLayout.Parent = Holder
		UIListLayout.FillDirection = Enum.FillDirection.Horizontal
		UIListLayout.CellPadding = UDim2.new(0,0,0,4)
		UIListLayout.CellSize = UDim2.new(1,-8,0,32)
		UIListLayout.SortOrder = Enum.SortOrder.LayoutOrder
		UIListLayout.HorizontalAlignment = Enum.HorizontalAlignment.Center
		UIListLayout.StartCorner = Enum.StartCorner.TopLeft
		UIListLayout.VerticalAlignment = Enum.VerticalAlignment.Center
		
		UIPadding_2.Parent = Holder
		UIPadding_2.PaddingBottom = UDim.new(0, 4)
		UIPadding_2.PaddingTop = UDim.new(0, 4)
		
		Icon.Name = HttpService:GenerateGUID(false)
		Icon.Parent = DropDownOutlinedTextBox
		Icon.BackgroundTransparency = 1.000
		Icon.Position = UDim2.new(1, -13, 0.5, -2)
		Icon.Size = UDim2.new(0, 10, 0, 6)
		Icon.Image = "http://www.roblox.com/asset/?id=45732894"
		Icon.ImageColor3 = Color3.fromRGB(35, 35, 35)
		Icon.ZIndex = DropDownOutlinedTextBox.ZIndex
		
		
		local Color = ColorGradient1
		local DropButtons = {}
		local box = DropDownOutlinedTextBox
		local bar = Bar
		local round = Instance.new("Frame",bar)
		local TpBarR = TopBarR
		local TpBarL = TopBarL
		
		local BarR = RBar
		local BarL = LBar
		
		round.BorderSizePixel = 0
		round.AnchorPoint = Vector2.new(0,0)
		round.Position = UDim2.new(0,0,0,0)
		round.Size = UDim2.new(1,0,1,0)
		round.Name = HttpService:GenerateGUID(false)
		round.BackgroundColor3 = Color
		round.ZIndex = DropDownOutlinedTextBox.ZIndex
		round.BackgroundTransparency = 1
		
		local TopR_round = round:Clone()
		TopR_round.Parent = TpBarR
		
		local TopL_round = round:Clone()
		TopL_round.Parent = TpBarL
		
		local BarR_round = round:Clone()
		BarR_round.Parent = BarR
		
		local BarL_round = round:Clone()
		BarL_round.Parent = BarL
		
		local Hit = TextHit
		Hit.Parent = box
		Hit.TextScaled = true
		Hit.Text = text
		box.TextWrapped = true
		back.TextColor3 = Color
		back.TextColor3 = Color
		back.TextTransparency=1
		
		local TextSize = TextSize:Clone()
		TextSize.Parent = box
		
		local Foused = false
		local Hit_Foused = false
		local tarns_in = false
		local tarns_out = false
		local function box_Changed()
			if box.PlaceholderText ~= "" then
				Hit.Size = UDim2.new(0,box.TextBounds.X,1,0)
				Hit.TextSize = box.TextSize
				Hit.Text = box.PlaceholderText
				Hit.TextScaled = true
				Hit.TextColor3 = box.PlaceholderColor3
				TextSize.TextSize = box.TextSize
				TextSize.Text = box.PlaceholderText
				TextSize.TextColor3 = box.PlaceholderColor3
				back.TextSize = box.TextSize
				back.Text = box.PlaceholderText
				back.TextScaled = true
				back.TextColor3 = box.PlaceholderColor3
				back.Font = box.Font
				back.TextColor3 = Color
				wait()
				box.PlaceholderText = ""
			end
		end
		
		function Focused()
			Foused = true
			local Time = 0.3
			
			if Hit_Foused == false then
				Hit_Foused = true
				Hit:TweenSizeAndPosition(UDim2.new(0, TextSize.TextBounds.X-4, 0, TextSize.TextBounds.Y-4), UDim2.new(0, 0, 0, -2),Enum.EasingDirection.In,Enum.EasingStyle.Quad, Time, true, nil)
				TpBarR:TweenSize(UDim2.new(1, -(TextSize.TextBounds.X)+12,0,2),Enum.EasingDirection.In,Enum.EasingStyle.Quad, Time, true, nil)
			end
			tarns_out = false
			tarns_in = true
			local u = 10
			repeat wait(0.03)
				if back == nil then break end
				if back.TextTransparency < 0.01 then 
					tarns_in = false
				break end
				back.TextTransparency = back.TextTransparency-0.1
				back.TextScaled = true
				round.BackgroundTransparency = back.TextTransparency
				TopL_round.BackgroundTransparency = back.TextTransparency
				TopR_round.BackgroundTransparency = back.TextTransparency
				BarL_round.BackgroundTransparency = back.TextTransparency
				BarR_round.BackgroundTransparency = back.TextTransparency
			until back.TextTransparency < 0.01 or tarns_in == false
		end
		box.Focused:Connect(Focused)
		local function FocusLost()
			for i,v in pairs(DropButtons) do
				v.Visible = true
			end
				
			Foused = false
			local Time = 0.3
			
			if Hit_Foused == true and box.Text == "" then
				Hit_Foused = false
				Hit:TweenSizeAndPosition(UDim2.new(0, TextSize.TextBounds.X, 1, 0), UDim2.new(0, 0, 0.5, 0),Enum.EasingDirection.InOut,Enum.EasingStyle.Quad, Time, true, nil)
				TpBarR:TweenSize(UDim2.new(1, 8, 0, 2),Enum.EasingDirection.In,Enum.EasingStyle.Quad, Time-0.04, true, nil)
			--end
				tarns_in = false
				tarns_out = true
				local u = 10
				repeat wait(0.03)
					if back == nil then break end
					if back.TextTransparency > 0.9 then 
						tarns_out = false
					break end
					back.TextTransparency = back.TextTransparency+0.1
					back.TextScaled = true
					round.BackgroundTransparency = back.TextTransparency
					TopL_round.BackgroundTransparency = back.TextTransparency
					TopR_round.BackgroundTransparency = back.TextTransparency
					BarL_round.BackgroundTransparency = back.TextTransparency
					BarR_round.BackgroundTransparency = back.TextTransparency
				until back.TextTransparency > 0.9 or tarns_out == false
			end
		end
		
		box.FocusLost:Connect(FocusLost)
		box.Changed:Connect(box_Changed)
		
		
		
		local Main = DropDown
		local Padding = UIPadding
		local SizeXOffset = Main.Size.X.Offset
		local SizeXScale = Main.Size.X.Scale
		local Time = 300
		local MouseOn = false
		
		Main:GetPropertyChangedSignal("Size"):Connect(function()
			if Main.Size.Y.Offset == 0 then
				Main.Visible = false
			else
				Main.Visible = true
			end
		end)
		
		local TweenService = game:GetService("TweenService")
		local Inico = TweenService:Create(
			Icon,
			TweenInfo.new(
				Time / 1000, 
				Enum.EasingStyle.Quint, 
				Enum.EasingDirection.Out, 
				0,
				false,
				0
			),
			{ 
				Rotation = 180;
			}
		)
		local Outico = TweenService:Create(
			Icon,
			TweenInfo.new(
				Time / 1000,
				Enum.EasingStyle.Quint, 
				Enum.EasingDirection.Out, 
				0,
				false,
				0
			),
			{
				Rotation = 0;
			}
		)
		
		Main.MouseEnter:Connect(function()
			MouseOn = true
		end)
		Main.MouseLeave:Connect(function()
			MouseOn = false
		end)
		
		local function OpenBox()
			local childs = {}
			for i,v in pairs(Holder:GetChildren()) do
				if v:IsA("TextButton") and v.Visible == true then
					table.insert(childs, v)
				end
			end
			local AbsoluteContentSizeY = 38*(#childs)
			Main:TweenSize(UDim2.new(SizeXScale,SizeXOffset,0,AbsoluteContentSizeY+Padding.PaddingBottom.Offset+Padding.PaddingTop.Offset),Enum.EasingDirection.Out,Enum.EasingStyle.Quad,Time / 1000,true,nil)
			Inico:Play()
		end
		
		local function CloseBox()
			local found = false
			for i,v in pairs(list) do
				if tostring(v) == tostring(box.Text) then
					found = true
				end	
			end
			if found == false then
				box.Text = ""
			else
				Focused()
			end
			Main:TweenSize(UDim2.new(SizeXScale,SizeXOffset,0,0),Enum.EasingDirection.Out,Enum.EasingStyle.Quad,Time / 1000,true,nil)
			Outico:Play()
		end
		
		local save = box.Text
		box:GetPropertyChangedSignal("Text"):Connect(function()
			save = box.Text
			if Foused == false and box.Text == "" then
				Hit_Foused = false
				local Time = 0.3
				Hit:TweenSizeAndPosition(UDim2.new(0, TextSize.TextBounds.X, 1, 0), UDim2.new(0, 0, 0.5, 0),Enum.EasingDirection.InOut,Enum.EasingStyle.Quad, Time, true, nil)
				TpBarR:TweenSize(UDim2.new(1, 8, 0, 2),Enum.EasingDirection.In,Enum.EasingStyle.Quad, Time-0.04, true, nil)
			end
			if Foused == false and box.Text ~= "" then
				Hit_Foused = false
				local Time = 0.3
				Hit:TweenSizeAndPosition(UDim2.new(0, TextSize.TextBounds.X-4, 0, TextSize.TextBounds.Y-4), UDim2.new(0, 0, 0, -2),Enum.EasingDirection.In,Enum.EasingStyle.Quad, Time, true, nil)
				TpBarR:TweenSize(UDim2.new(1, -(TextSize.TextBounds.X)+12,0,2),Enum.EasingDirection.In,Enum.EasingStyle.Quad, Time, true, nil)
			end
			if Foused == true and box.Text ~= "" then
				for i,v in pairs(DropButtons) do
					if v.Text:lower():gsub(" ",""):find(box.Text:lower():gsub(" ","")) then
						v.Parent.Visible = true
					else
						v.Parent.Visible = false
					end
					OpenBox()
				end
			else
				for i,v in pairs(DropButtons) do
					v.Parent.Visible = true
				end
				OpenBox()
			end
		end)
		box_Changed()
		
		box.Focused:Connect(OpenBox)
		
		box.FocusLost:Connect(CloseBox)
		
		
		local function ListButton(name, callback)
			local TextButton = Instance.new("TextButton")
			
			TextButton.Name = HttpService:GenerateGUID(false)
			TextButton.Parent = Holder
			TextButton.BackgroundTransparency = 0
			TextButton.Size = UDim2.new(1, 0, 0, 32)
			TextButton.ZIndex = DropDownOutlinedTextBox.ZIndex + 4
			TextButton.Active = true
			TextButton.Text = "   "--..name
			TextButton.Font = Enum.Font.SourceSans
			TextButton.TextColor3 = Color3.fromRGB(255, 255, 255)
			TextButton.TextSize = 14.000
			TextButton.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
			TextButton.TextXAlignment = Enum.TextXAlignment.Left
			TextButton.BorderSizePixel = 0
			
			local buttonText = Instance.new("TextLabel", TextButton)
			buttonText.Name = HttpService:GenerateGUID(false)
			buttonText.BackgroundTransparency = 1
			buttonText.Size = UDim2.new(1,0,1,0)
			buttonText.AnchorPoint = Vector2.new(0.5,0.5)
			buttonText.Position = UDim2.new(0.5,0,0.5,0)
			buttonText.ZIndex = TextButton.ZIndex
			buttonText.Text = "   "..name
			buttonText.TextColor3 = Color3.new(1, 1, 1)
			buttonText.TextSize = 15
			buttonText.TextXAlignment = Enum.TextXAlignment.Left
			buttonText.Font = options.font
			
			local UIGradient = Instance.new("UIGradient")
			UIGradient.Color = ColorSequence.new{ColorSequenceKeypoint.new(0, ColorGradient1), ColorSequenceKeypoint.new(1, ColorGradient2)}
			UIGradient.Parent = TextButton
			UIGradient.Name = HttpService:GenerateGUID(false)
			table.insert(uiGradients, UIGradient)
			
			--[[local actionbutton = Instance.new("ImageButton", TextButton)
			actionbutton.BackgroundTransparency = 1
			actionbutton.Size = UDim2.new(0, 24, 0, 24)
			actionbutton.AnchorPoint = Vector2.new(0.5,0.5)
			actionbutton.Position = UDim2.new(0.9, 0, 0.5, 0)
			actionbutton.ZIndex = TextButton.ZIndex
			actionbutton.Image = 'rbxassetid://5044249458'
			actionbutton.ImageTransparency = 1
			actionbutton.Name = HttpService:GenerateGUID(false)
		
			local OPImg = Instance.new("ImageButton", actionbutton)
			OPImg.BackgroundTransparency = 1
			OPImg.Size = UDim2.new(1, 0, 1, 0)
			OPImg.Position = UDim2.new(0, 0, 0, 0)
			OPImg.ZIndex = actionbutton.ZIndex + 1
			OPImg.Image = 'http://www.roblox.com/asset/?id=5044275451'
			OPImg.Name = HttpService:GenerateGUID(false)]]
			
			table.insert(DropButtons, buttonText)
			
			local clck = function()
				spawn(function()
					pcall(callback, name) 
				end)
				box.Text = name
				CloseBox()
			end
			
			TextButton.MouseButton1Down:Connect(clck)
			--actionbutton.MouseButton1Down:Connect(clck)
		end
		
		for i,v in pairs(list) do
			ListButton(v, callback)
		end
		
		table.insert(PhaseOneInstances, DropDownOutlinedTextBox)

		Open()

		return switchactions
	end

	function elements:NewHeader(text) 
		text = text or "New Label"
		local act = {}
		local button = Instance.new("TextLabel", bodyelements)
		button.Size = UDim2.new(0, 215/1.15, 0, 32.5/1.15)
		button.AnchorPoint = Vector2.new(0.5,0)
		button.Position = UDim2.new(0.5, 0, (pixelspacing / 990) * #PhaseOneInstances + 0.0155, 0)
		button.BackgroundTransparency = 1
		button.BorderSizePixel = 0
		button.TextColor3 = Color3.fromRGB(255, 255, 255)
		button.TextSize = 15
		button.TextXAlignment = Enum.TextXAlignment.Center
		button.Font = options.font
		button.Text = text
		button.ZIndex = bodyelements.ZIndex
		button.Name = HttpService:GenerateGUID(false)
		
		function act:SetText(txt)
			button.Text = txt
		end

		table.insert(PhaseOneInstances, button)
		
		Open()
		
		return act
	end
	
	


	function elements:AddBox(placeholder, callback) 
		placeholder = placeholder or "New Box"
		callback = callback or function() end
		
		local DisabledOutlineColor = Color3.fromRGB(60, 60, 60)

		--[[local button = Instance.new("TextBox", bodyelements)
		button.Size = UDim2.new(0, 215/1.15, 0, 32.5/1.15)
		button.AnchorPoint = Vector2.new(0.5,0)
		button.Position = UDim2.new(0.5, 0, (pixelspacing / 990) * #PhaseOneInstances + 0.0155, 0)
		button.BackgroundTransparency = 0
		button.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
		button.BorderSizePixel = 0
		button.TextColor3 = Color3.fromRGB(255, 255, 255)
		button.TextSize = 15
		button.TextXAlignment = Enum.TextXAlignment.Center
		button.Font = options.font
		button.Text = ""
		button.PlaceholderText = placeholder
		button.ZIndex = bodyelements.ZIndex
		button.Name = HttpService:GenerateGUID(false)]]
		
		local OutlinedTextBox = Instance.new("TextBox")
		local Bar = Instance.new("Frame")
		local ErrorText = Instance.new("TextLabel")
		local UIPadding = Instance.new("UIPadding")
		local TopBarL = Instance.new("Frame")
		local TopBarR = Instance.new("Frame")
		local RBar = Instance.new("Frame")
		local LBar = Instance.new("Frame")
		local TextHit = Instance.new("TextLabel")
		local back = Instance.new("TextLabel")
		local TextSize = Instance.new("TextLabel")
		
		
		OutlinedTextBox.Name = HttpService:GenerateGUID(false)
		OutlinedTextBox.Parent = bodyelements
		OutlinedTextBox.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		OutlinedTextBox.BackgroundTransparency = 1
		OutlinedTextBox.Size = UDim2.new(0, 215/1.15, 0, 32.5/1.15)
		OutlinedTextBox.AnchorPoint = Vector2.new(0.5,0)
		OutlinedTextBox.Position = UDim2.new(0.5, 0, (pixelspacing / 990) * #PhaseOneInstances + 0.0155, 0)
		OutlinedTextBox.ZIndex = bodyelements.ZIndex
		OutlinedTextBox.ClearTextOnFocus = false
		OutlinedTextBox.Font = Enum.Font.SourceSans
		OutlinedTextBox.PlaceholderColor3 = Color3.fromRGB(156, 156, 156)
		OutlinedTextBox.PlaceholderText = placeholder
		OutlinedTextBox.Text = ""
		OutlinedTextBox.TextColor3 = Color3.fromRGB(255, 255, 255)
		OutlinedTextBox.TextSize = 15.000
		OutlinedTextBox.TextXAlignment = Enum.TextXAlignment.Left
		
		Bar.Name = HttpService:GenerateGUID(false)
		Bar.Parent = OutlinedTextBox
		Bar.BackgroundColor3 = DisabledOutlineColor
		Bar.BorderSizePixel = 0
		Bar.Position = UDim2.new(0, -6, 1, 0)
		Bar.Selectable = true
		Bar.Size = UDim2.new(1, 12, 0, 2)
		Bar.ZIndex = OutlinedTextBox.ZIndex
		
		ErrorText.Name = HttpService:GenerateGUID(false)
		ErrorText.Parent = OutlinedTextBox
		ErrorText.AnchorPoint = Vector2.new(1, 0)
		ErrorText.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		ErrorText.BackgroundTransparency = 1.000
		ErrorText.BorderSizePixel = 0
		ErrorText.Position = UDim2.new(1, 6, 1, 0)
		ErrorText.Size = UDim2.new(1, -4, 0, 18)
		ErrorText.Visible = false
		ErrorText.Font = Enum.Font.SourceSans
		ErrorText.Text = "Error"
		ErrorText.TextColor3 = Color3.fromRGB(255, 33, 33)
		ErrorText.TextSize = 14.000
		ErrorText.TextStrokeColor3 = Color3.fromRGB(255, 33, 33)
		ErrorText.TextStrokeTransparency = 0.940
		ErrorText.TextXAlignment = Enum.TextXAlignment.Left
		ErrorText.ZIndex = OutlinedTextBox.ZIndex
		
		UIPadding.Parent = OutlinedTextBox
		UIPadding.PaddingLeft = UDim.new(0, 6)
		UIPadding.PaddingRight = UDim.new(0, 6)
		
		TopBarL.Name = HttpService:GenerateGUID(false)
		TopBarL.Parent = OutlinedTextBox
		TopBarL.BackgroundColor3 = DisabledOutlineColor
		TopBarL.BorderSizePixel = 0
		TopBarL.Position = UDim2.new(0, -6, 0, -2)
		TopBarL.Selectable = true
		TopBarL.Size = UDim2.new(0, 4, 0, 2)
		TopBarL.ZIndex = OutlinedTextBox.ZIndex
		
		TopBarR.Name = HttpService:GenerateGUID(false)
		TopBarR.Parent = OutlinedTextBox
		TopBarR.AnchorPoint = Vector2.new(1, 0)
		TopBarR.BackgroundColor3 = DisabledOutlineColor
		TopBarR.BorderSizePixel = 0
		TopBarR.Position = UDim2.new(1, 6, 0, -2)
		TopBarR.Selectable = true
		TopBarR.Size = UDim2.new(1, 8, 0, 2)
		TopBarR.ZIndex = OutlinedTextBox.ZIndex
		
		RBar.Name = HttpService:GenerateGUID(false)
		RBar.Parent = OutlinedTextBox
		RBar.AnchorPoint = Vector2.new(1, 0)
		RBar.BackgroundColor3 = DisabledOutlineColor
		RBar.BorderSizePixel = 0
		RBar.Position = UDim2.new(1, 7, 0, -1)
		RBar.Selectable = true
		RBar.Size = UDim2.new(0, 2, 1, 2)
		RBar.ZIndex = OutlinedTextBox.ZIndex
		
		LBar.Name = HttpService:GenerateGUID(false)
		LBar.Parent = OutlinedTextBox
		LBar.BackgroundColor3 = DisabledOutlineColor
		LBar.BorderSizePixel = 0
		LBar.Position = UDim2.new(0, -7, 0, -1)
		LBar.Selectable = true
		LBar.Size = UDim2.new(0, 2, 1, 2)
		LBar.ZIndex = OutlinedTextBox.ZIndex
		
		TextHit.Name = HttpService:GenerateGUID(false)
		TextHit.Parent = OutlinedTextBox
		TextHit.AnchorPoint = Vector2.new(0, 0.5)
		TextHit.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		TextHit.BackgroundTransparency = 1.000
		TextHit.Position = UDim2.new(0, 0, 0.5, 0)
		TextHit.Size = UDim2.new(1, 0, 1, 0)
		TextHit.Font = Enum.Font.SourceSans
		TextHit.TextColor3 = Color3.fromRGB(0, 0, 0)
		TextHit.TextSize = 14.000
		TextHit.TextXAlignment = Enum.TextXAlignment.Left
		TextHit.ZIndex = OutlinedTextBox.ZIndex
		
		back.Name = HttpService:GenerateGUID(false)
		back.Parent = TextHit
		back.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		back.BackgroundTransparency = 1.000
		back.Size = UDim2.new(1, 0, 1, 0)
		back.Font = Enum.Font.SourceSans
		back.TextColor3 = Color3.fromRGB(0, 0, 0)
		back.TextSize = 14.000
		back.TextXAlignment = Enum.TextXAlignment.Left
		back.ZIndex = OutlinedTextBox.ZIndex
		
		TextSize.Name = HttpService:GenerateGUID(false)
		TextSize.Parent = OutlinedTextBox
		TextSize.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		TextSize.BackgroundTransparency = 1.000
		TextSize.Size = UDim2.new(1, 0, 1, 0)
		TextSize.Visible = false
		TextSize.Font = Enum.Font.SourceSans
		TextSize.TextColor3 = Color3.fromRGB(0, 0, 0)
		TextSize.TextSize = 14.000
		TextSize.TextXAlignment = Enum.TextXAlignment.Left
		TextSize.ZIndex = OutlinedTextBox.ZIndex
		
		local Color = ColorGradient1
		local box = OutlinedTextBox
		local bar = Bar
		local round = Instance.new("Frame",bar)
		local TpBarR = TopBarR
		local TpBarL = TopBarL
		
		local BarR = RBar
		local BarL = LBar
		
		round.BorderSizePixel = 0
		round.AnchorPoint = Vector2.new(0,0)
		round.Position = UDim2.new(0,0,0,0)
		round.Size = UDim2.new(1,0,1,0)
		round.Name = HttpService:GenerateGUID(false)
		round.BackgroundColor3 = Color
		round.BackgroundTransparency = 1
		round.ZIndex = OutlinedTextBox.ZIndex
		
		local TopR_round = round:Clone()
		TopR_round.Parent = TpBarR
		
		local TopL_round = round:Clone()
		TopL_round.Parent = TpBarL
		
		local BarR_round = round:Clone()
		BarR_round.Parent = BarR
		
		local BarL_round = round:Clone()
		BarL_round.Parent = BarL
		
		local Hit = TextHit
		Hit.Parent = box
		Hit.TextScaled = true
		Hit.Text = ""
		box.TextWrapped = true
		back.TextColor3 = Color
		back.TextColor3 = Color
		back.TextTransparency=1
		local TextSize = TextSize
		TextSize.Parent = box
		local Foused = false
		local Hit_Foused = false
		local tarns_in = false
		local tarns_out = false
		local function box_Changed()
			if box.PlaceholderText == "" then else
				Hit.Size = UDim2.new(0,box.TextBounds.X,1,0)
				Hit.TextSize = box.TextSize
				Hit.Text = box.PlaceholderText
				Hit.TextScaled = true
				Hit.TextColor3 = box.PlaceholderColor3
				TextSize.TextSize = box.TextSize
				TextSize.Text = box.PlaceholderText
				TextSize.TextColor3 = box.PlaceholderColor3
				back.TextSize = box.TextSize
				back.Text = box.PlaceholderText
				back.TextScaled = true
				back.TextColor3 = box.PlaceholderColor3
				back.Font = box.Font
				back.TextColor3 = Color
				box.PlaceholderText = ""
			end
		end
		local save = box.Text
		box:GetPropertyChangedSignal("Text"):Connect(function()
			save = box.Text
			if Foused == false and box.Text == "" then
				Hit_Foused = false
				local Time = 0.3
				Hit:TweenSizeAndPosition(UDim2.new(0, TextSize.TextBounds.X, 1, 0), UDim2.new(0, 0, 0.5, 0),Enum.EasingDirection.InOut,Enum.EasingStyle.Quad, Time, true, nil)
				TpBarR:TweenSize(UDim2.new(1, 8, 0, 2),Enum.EasingDirection.In,Enum.EasingStyle.Quad, Time-0.04, true, nil)
			end
			if Foused == false and box.Text ~= "" then
				Hit_Foused = false
				local Time = 0.3
				Hit:TweenSizeAndPosition(UDim2.new(0, TextSize.TextBounds.X-4, 0, TextSize.TextBounds.Y-4), UDim2.new(0, 0, 0, -2),Enum.EasingDirection.In,Enum.EasingStyle.Quad, Time, true, nil)
				TpBarR:TweenSize(UDim2.new(1, -(TextSize.TextBounds.X)+12,0,2),Enum.EasingDirection.In,Enum.EasingStyle.Quad, Time, true, nil)
			end
		end)
		box_Changed()
		local function Focused()
			Foused = true
			local Time = 0.3
			
			if Hit_Foused == false then
				Hit_Foused = true
				Hit:TweenSizeAndPosition(UDim2.new(0, TextSize.TextBounds.X-4, 0, TextSize.TextBounds.Y-4), UDim2.new(0, 0, 0, -2),Enum.EasingDirection.In,Enum.EasingStyle.Quad, Time, true, nil)
				TpBarR:TweenSize(UDim2.new(1, -(TextSize.TextBounds.X)+12,0,2),Enum.EasingDirection.In,Enum.EasingStyle.Quad, Time, true, nil)
			end
			tarns_out = false
			tarns_in = true
			local u = 10
			local back = Hit:FindFirstChild("back")
			repeat wait(0.03)
				if back == nil then break end
				if back.TextTransparency < 0.01 then 
					tarns_in = false
				break end
				back.TextTransparency = back.TextTransparency-0.1
				back.TextScaled = true
				round.BackgroundTransparency = back.TextTransparency
				TopL_round.BackgroundTransparency = back.TextTransparency
				TopR_round.BackgroundTransparency = back.TextTransparency
				BarL_round.BackgroundTransparency = back.TextTransparency
				BarR_round.BackgroundTransparency = back.TextTransparency
			until back.TextTransparency < 0.01 or tarns_in == false
		end
		box.Focused:Connect(Focused)
		local function FocusLost()
			spawn(function()
				pcall(callback, OutlinedTextBox.Text) 
			end)
			Foused = false
			local Time = 0.3
			--round:TweenSize(UDim2.new(0, 0,round.Size.Y.Scale,round.Size.Y.Offset),Enum.EasingDirection.In,Enum.EasingStyle.Quad, Time, true, nil)
			if Hit_Foused == true and box.Text == "" then
				Hit_Foused = false
				Hit:TweenSizeAndPosition(UDim2.new(0, TextSize.TextBounds.X, 1, 0), UDim2.new(0, 0, 0.5, 0),Enum.EasingDirection.InOut,Enum.EasingStyle.Quad, Time, true, nil)
				TpBarR:TweenSize(UDim2.new(1, 8, 0, 2),Enum.EasingDirection.In,Enum.EasingStyle.Quad, Time-0.04, true, nil)
			--end
				tarns_in = false
				tarns_out = true
				local u = 10
				local back = Hit:FindFirstChild("back")
				repeat wait(0.03)
					if back == nil then break end
					if back.TextTransparency > 0.9 then 
						tarns_out = false
					break end
					back.TextTransparency = back.TextTransparency+0.1
					back.TextScaled = true
					round.BackgroundTransparency = back.TextTransparency
					TopL_round.BackgroundTransparency = back.TextTransparency
					TopR_round.BackgroundTransparency = back.TextTransparency
					BarL_round.BackgroundTransparency = back.TextTransparency
					BarR_round.BackgroundTransparency = back.TextTransparency
				until back.TextTransparency > 0.9 or tarns_out == false
			end
		end
		box.FocusLost:Connect(FocusLost)
		box.Changed:Connect(box_Changed)

		table.insert(PhaseOneInstances, OutlinedTextBox)
		Open()
	end
	local Mouse = game:service'Players'.LocalPlayer:GetMouse()
	function elements:AddSlider(text, minvalue, maxvalue, callback)
		local slideractions = {}
		text = text or "New slider"
		minvalue = minvalue or 0
		maxvalue = maxvalue or 100
		callback = callback or function() end

		local box = Instance.new("TextLabel", bodyelements)
		box.Size = UDim2.new(0, 215/1.15, 0, 32.5/1.15)
		box.AnchorPoint = Vector2.new(0.5,0)
		box.Position = UDim2.new(0.5, 0, (pixelspacing / 990) * #PhaseOneInstances + 0.0155, 0)
		box.BackgroundTransparency = 0
		box.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
		box.BorderSizePixel = 1
		box.BorderColor3 = Color3.fromRGB(60, 60, 60)
		box.TextColor3 = Color3.new(1, 1, 1)
		box.TextSize = 15
		box.TextXAlignment = Enum.TextXAlignment.Left
		box.Font = options.font
		box.Text = ""
        box.ZIndex = bodyelements.ZIndex
		box.Name = HttpService:GenerateGUID(false)
		
		local UpperSlideValue = Instance.new("TextLabel")
		UpperSlideValue.Name = HttpService:GenerateGUID(false)
		UpperSlideValue.Parent = box
		UpperSlideValue.AnchorPoint = Vector2.new(0.5, 0.5)
		UpperSlideValue.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		UpperSlideValue.BackgroundTransparency = 1.000
		UpperSlideValue.Position = UDim2.new(0.5, 0, 0.5, 0)
		UpperSlideValue.Size = UDim2.new(1, -7, 1, -1)
		UpperSlideValue.ZIndex = box.ZIndex + 1
		UpperSlideValue.Font = options.font
		UpperSlideValue.Text = tostring(minvalue)
		UpperSlideValue.TextColor3 = Color3.fromRGB(150, 150, 150)
		UpperSlideValue.TextSize = 14
		UpperSlideValue.TextXAlignment = Enum.TextXAlignment.Right
		UpperSlideValue.TextYAlignment = Enum.TextYAlignment.Top
		
		local UpperSlideText = Instance.new("TextLabel")
		UpperSlideText.Name = HttpService:GenerateGUID(false)
		UpperSlideText.Parent = box
		UpperSlideText.AnchorPoint = Vector2.new(0.5, 0.5)
		UpperSlideText.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		UpperSlideText.BackgroundTransparency = 1.000
		UpperSlideText.Position = UDim2.new(0.5, 0, 0.5, 0)
		UpperSlideText.Size = UDim2.new(1, -7, 1, -1)
		UpperSlideText.ZIndex = box.ZIndex
		UpperSlideText.Font = options.font
		UpperSlideText.Text = tostring(text)
		UpperSlideText.TextColor3 = Color3.fromRGB(150, 150, 150)
		UpperSlideText.TextSize = 14
		UpperSlideText.TextXAlignment = Enum.TextXAlignment.Left
		UpperSlideText.TextYAlignment = Enum.TextYAlignment.Top
		

		local Slider = Instance.new("Frame")
		local Point = Instance.new("ImageLabel")
		local MouseOn = Instance.new("ImageLabel")
		local MouseDown = Instance.new("ImageLabel")
		local ValIcon = Instance.new("ImageLabel")
		local ValText = Instance.new("TextLabel")
		local Back = Instance.new("Frame")
		local MouseButton = Instance.new("TextButton")
		
		Slider.Name = HttpService:GenerateGUID(false)
		Slider.Parent = box
		Slider.BackgroundColor3 = Color3.fromRGB(125, 125, 125)
		Slider.BorderSizePixel = 0
		Slider.Size = UDim2.new(0, 160, 0, 2)
		Slider.ZIndex = box.ZIndex
		Slider.AnchorPoint = Vector2.new(0.5,0.5)
		Slider.Position = UDim2.new(0.5, 0, 0.5, 7)
		
		Point.Name = HttpService:GenerateGUID(false)
		Point.Parent = Slider
		Point.AnchorPoint = Vector2.new(0.5, 0.5)
		Point.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		Point.BackgroundTransparency = 1.000
		Point.Position = UDim2.new(0, 0, 0.5, 0)
		Point.Size = UDim2.new(0, 12, 0, 12)
		Point.ZIndex = box.ZIndex + 1
		Point.Image = "rbxassetid://1217158727"
		Point.ImageColor3 = ColorGradient1
		table.insert(sliderDots, Point)
		
		MouseOn.Name = HttpService:GenerateGUID(false)
		MouseOn.Parent = Point
		MouseOn.AnchorPoint = Vector2.new(0.5, 0.5)
		MouseOn.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		MouseOn.BackgroundTransparency = 1.000
		MouseOn.Position = UDim2.new(0.5, 0, 0.5, 0)
		MouseOn.ZIndex = box.ZIndex + 1
		MouseOn.Image = "rbxassetid://1217158727"
		MouseOn.ImageColor3 = ColorGradient1
		MouseOn.ImageTransparency = 0.850
		table.insert(sliderDots, MouseOn)

		MouseDown.Name = HttpService:GenerateGUID(false)
		MouseDown.Parent = Point
		MouseDown.AnchorPoint = Vector2.new(0.5, 0.5)
		MouseDown.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		MouseDown.BackgroundTransparency = 1.000
		MouseDown.Position = UDim2.new(0.5, 0, 0.5, 0)
		MouseDown.ZIndex = box.ZIndex + 1
		MouseDown.Image = "rbxassetid://1217158727"
		MouseDown.ImageColor3 = ColorGradient1
		MouseDown.ImageTransparency = 0.850
		table.insert(sliderDots, MouseDown)
		
		ValIcon.Name = HttpService:GenerateGUID(false)
		ValIcon.Parent = Point
		ValIcon.AnchorPoint = Vector2.new(0.5, 1)
		ValIcon.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		ValIcon.BackgroundTransparency = 1.000
		ValIcon.BorderSizePixel = 0
		ValIcon.ClipsDescendants = true
		ValIcon.Position = UDim2.new(0.5, 0, 0, 2)
		ValIcon.ZIndex = box.ZIndex + 1
		ValIcon.Image = "http://www.roblox.com/asset/?id=5047851106"
		ValIcon.ImageColor3 = ColorGradient1
		ValIcon.Size = UDim2.new(0, 0,0, 0)
		table.insert(sliderDots, ValIcon)
		
		ValText.Name = HttpService:GenerateGUID(false)
		ValText.Parent = ValIcon
		ValText.AnchorPoint = Vector2.new(0.5, 0.5)
		ValText.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		ValText.BackgroundTransparency = 1.000
		ValText.Position = UDim2.new(0.5, 0, 0.5, 0)
		ValText.Size = UDim2.new(0.800000012, 0, 0, 28)
		ValText.ZIndex = box.ZIndex + 1
		ValText.Font = Enum.Font.SourceSans
		ValText.Text = "1"
		ValText.TextColor3 = Color3.fromRGB(255, 255, 255)
		ValText.TextSize = 14
		
		Back.Name = HttpService:GenerateGUID(false)
		Back.Parent = Slider
		Back.BackgroundColor3 = ColorGradient2
		Back.BorderSizePixel = 0
		Back.Size = UDim2.new(0, 0, 1, 0)
		Back.ZIndex = box.ZIndex
		table.insert(sliderLines, Back)
		
		MouseButton.Name = HttpService:GenerateGUID(false)
		MouseButton.Parent = Slider
		MouseButton.AnchorPoint = Vector2.new(0, 0.5)
		MouseButton.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		MouseButton.BackgroundTransparency = 1.000
		MouseButton.BorderSizePixel = 0
		MouseButton.Position = UDim2.new(0, 0, 0.5, 0)
		MouseButton.Size = UDim2.new(1, 0, 1, 10)
		MouseButton.Font = Enum.Font.SourceSans
		MouseButton.Text = ""
		MouseButton.TextColor3 = Color3.fromRGB(0, 0, 0)
		MouseButton.TextSize = 14
		MouseButton.TextTransparency = 1
		
		table.insert(PhaseOneInstances, box)
		Open()
		
		--[[local MouseisOn = false
		local MouseisDown = false
		local Value = 0
		local Max = 100
		local IntOnly = true -- Round or not
		local ValueLabelMultiply = 1
		local ValueLabel = true
		
		MouseButton.MouseEnter:Connect(function()
			MouseisOn = true
			MouseOn:TweenSize(UDim2.new(2, 0, 2, 0),Enum.EasingDirection.Out,Enum.EasingStyle.Linear,0.12,true,nil)
		end)
		
		MouseButton.MouseLeave:Connect(function()
			MouseisOn = false
			if MouseisDown == false then
				MouseOn:TweenSize(UDim2.new(0,0,0,0),Enum.EasingDirection.Out,Enum.EasingStyle.Linear,0.12,true,nil)
			end
		end)
		
		function DoChangeValue(Preset)
			if tonumber(Preset) then
				local NewValue = ((Preset-minvalue)/(maxvalue-minvalue)) * 100
				Point:TweenPosition(UDim2.new(NewValue/Max,0,0.5,0),Enum.EasingDirection.Out,Enum.EasingStyle.Quad,0.1,true,nil)
				Back:TweenSize(UDim2.new(NewValue/Max,0,1,0),Enum.EasingDirection.Out,Enum.EasingStyle.Quad,0.1,true,nil)
				
				ValText.Text = Preset
				UpperSlideValue.Text = tostring(Preset)
			else
				local NewValue = Value
				Point:TweenPosition(UDim2.new(NewValue/Max,0,0.5,0),Enum.EasingDirection.Out,Enum.EasingStyle.Quad,0.1,true,nil)
				Back:TweenSize(UDim2.new(NewValue/Max,0,1,0),Enum.EasingDirection.Out,Enum.EasingStyle.Quad,0.1,true,nil)
				
				local percent = Value / 100
				local new_val = minvalue + ((maxvalue - minvalue) * percent)
				if IntOnly then
					new_val = math.floor(new_val + .5)
				end
				
				ValText.Text = new_val
				UpperSlideValue.Text = tostring(new_val)
				spawn(function()
					pcall(callback, new_val) 
				end)
			end
		end
		--DoChangeValue()
		
		function SetValueFromMousePos()
			local Pos = Mouse.X - Slider.AbsolutePosition.X
			if Pos < 0 or Pos == 0 then
				Pos = 0
			end
			if Pos > Slider.AbsoluteSize.X or Pos == Slider.AbsoluteSize.X then
				Pos = Slider.AbsoluteSize.X
			end
			if IntOnly then
				Value = math.floor((Pos/Slider.AbsoluteSize.X)*Max+0.5)
			else
				Value = (Pos/Slider.AbsoluteSize.X)*Max
			end
			DoChangeValue()
		end
		
		MouseButton.MouseButton1Down:Connect(function()
			if MouseisOn == true then
				MouseisDown = true
				SetValueFromMousePos()
				Point:TweenSize(UDim2.new(0,14,0,14),Enum.EasingDirection.Out,Enum.EasingStyle.Quad,0.2,true,nil)
				MouseDown:TweenSize(UDim2.new(2, 0, 2, 0),Enum.EasingDirection.Out,Enum.EasingStyle.Linear,0.12,true,nil)
				if ValueLabel == true then
					ValIcon:TweenSize(UDim2.new(0, 28,0, 40),Enum.EasingDirection.Out,Enum.EasingStyle.Linear,0.12,true,nil)
				end
			end
		end)
		
		function Button1Up()
			MouseisDown = false
			Point:TweenSize(UDim2.new(0,12,0,12),Enum.EasingDirection.Out,Enum.EasingStyle.Quad,0.2,true,nil)
			MouseDown:TweenSize(UDim2.new(0,0,0,0),Enum.EasingDirection.Out,Enum.EasingStyle.Linear,0.12,true,nil)
			if ValueLabel == true then
				ValIcon:TweenSize(UDim2.new(0,0,0,0),Enum.EasingDirection.Out,Enum.EasingStyle.Linear,0.12,true,nil)
			end
			if MouseisOn == false then
				MouseOn:TweenSize(UDim2.new(0,0,0,0),Enum.EasingDirection.Out,Enum.EasingStyle.Linear,0.12,true,nil)
			end
		end
		
		MouseButton.MouseButton1Up:Connect(Button1Up)
		local UserInputService = game:GetService("UserInputService")
		UserInputService.InputEnded:Connect(function(Key, GameProcessedEvent)
			if Key.UserInputType == Enum.UserInputType.MouseButton1 then
				Button1Up()
			end
		end)
		
		Mouse.Move:Connect(function()
			if MouseisDown == true then
				SetValueFromMousePos()
			end
		end)
		
		table.insert(PhaseOneInstances, box)
		Open()
		
		function slideractions:Set(val)
			DoChangeValue(val)
		end]]
		
		local MouseisOn = false
		local MouseisDown = false
		local Value = 0
		local Max = 100
		local IntOnly = true -- Round or not
		local ValueLabelMultiply = 1
		local ValueLabel = true
		
		MouseButton.MouseEnter:Connect(function()
			MouseisOn = true
			MouseOn:TweenSize(UDim2.new(2, 0, 2, 0),Enum.EasingDirection.Out,Enum.EasingStyle.Linear,0.12,true,nil)
		end)
		
		MouseButton.MouseLeave:Connect(function()
			MouseisOn = false
			if MouseisDown == false then
				MouseOn:TweenSize(UDim2.new(0,0,0,0),Enum.EasingDirection.Out,Enum.EasingStyle.Linear,0.12,true,nil)
			end
		end)
		
		local UserInputService = game:GetService("UserInputService")
		local RunService = game:GetService("RunService")
		
		local Connection;
		UserInputService.InputEnded:Connect(function(input)
		    if input.UserInputType == Enum.UserInputType.MouseButton1 then
		        if(Connection) then
					ValIcon:TweenSize(UDim2.new(0, 0, 0, 0),Enum.EasingDirection.Out,Enum.EasingStyle.Linear,0.12,true,nil)
		            Connection:Disconnect();
		            Connection = nil;
		        end;
		    end;
		end);
		
		MouseButton.MouseButton1Down:Connect(function()
		    if(Connection) then
		        Connection:Disconnect();
		    end;
		
		    Connection = RunService.Heartbeat:Connect(function()
		        local mouse = UserInputService:GetMouseLocation();
		        local percent = math.clamp((mouse.X - MouseButton.AbsolutePosition.X) / (MouseButton.AbsoluteSize.X), 0, 1);
		        local Value = minvalue + (maxvalue - minvalue) * percent;
				
				ValIcon:TweenSize(UDim2.new(0, 28,0, 40),Enum.EasingDirection.Out,Enum.EasingStyle.Linear,0.12,true,nil)
					
				if MouseisOn == false then
					MouseOn:TweenSize(UDim2.new(0,0,0,0),Enum.EasingDirection.Out,Enum.EasingStyle.Linear,0.12,true,nil)
				end
				
				local NewValue = percent * 100
				Point:TweenPosition(UDim2.new(NewValue/Max,0,0.5,0),Enum.EasingDirection.Out,Enum.EasingStyle.Quad,0.1,true,nil)
				Back:TweenSize(UDim2.new(NewValue/Max,0,1,0),Enum.EasingDirection.Out,Enum.EasingStyle.Quad,0.1,true,nil)
		
		        Value = tonumber(string.format("%.2f", math.floor(Value)));
		
				ValText.Text = Value
				UpperSlideValue.Text = tostring(Value)

				spawn(function()
					pcall(callback, (Value)) 
				end)
				
		    end);
		end);
		
		function slideractions:Set(val)
			local NewValue = ((val-minvalue)/(maxvalue-minvalue)) * 100
			Point:TweenPosition(UDim2.new(NewValue/Max,0,0.5,0),Enum.EasingDirection.Out,Enum.EasingStyle.Quad,0.1,true,nil)
			Back:TweenSize(UDim2.new(NewValue/Max,0,1,0),Enum.EasingDirection.Out,Enum.EasingStyle.Quad,0.1,true,nil)
	
			ValText.Text = val
			UpperSlideValue.Text = tostring(val)
		end

		return slideractions
	end

	
	return elements
end


-------------------------------------------------------------------------------------------------------------------------

if Swordburst2 then
	
					
local mainmodule = nil
local graph = nil
local anim = getsenv(game:GetService("Players").LocalPlayer.Character.Animate)
local mobModel = nil

workspace.StreamingEnabled = false

for i, v in pairs(getnilinstances()) do
	if v:IsA("ModuleScript") then
		if v.Name == "MainModule" then
			mainmodule = require(v)
			local thingy = v:FindFirstChild("Graphics", true)
			if thingy then
				graph = require(thingy)
			end
		end
	end
end

if mainmodule == nil then 
	error('Cannot find MainModule')
	script:Destroy()
elseif graph == nil then
	error('Cannot find Actions Module')
	script:Destroy()
elseif anim == nil then
	error('Cannot find Animate Module')
	script:Destroy()
end

game:GetService("ScriptContext"):SetTimeout(1)
local CanAutofarm = DefaultSettings["Swordburst2"]["Legit Autofarm"]--false
local CanAutofarmRage = DefaultSettings["Swordburst2"]["Rage Autofarm"]--false
local pKillAura = DefaultSettings["Swordburst2"]["Player Kill Aura"]--false
local mobKill = DefaultSettings["Swordburst2"]["Mob Kill Aura"]--false
local mobkillSwitch = mobKill
local leaveModJoins = DefaultSettings["Swordburst2"]["Auto Kick"]--false
local SelectedFloor = ""
local SkillToUse = "Leaping Slash"
local PrioritizeBoss = false
local PrioritizeChests = false
local walkspeed = DefaultSettings["Swordburst2"]["WalkSpeed"]
local BOSSMOB = nil
local CHESTMOB = nil
local distval = -16
local ignoretable = {}
local killAuraRange = DefaultSettings["Swordburst2"]["Kill Aura Range"]--18
local killAuraSpeed = DefaultSettings["Swordburst2"]["Killaura Speed"]--10
local rageModeSpeedVal = DefaultSettings["Swordburst2"]["Rage Movement Speed"]--65
local infStamina = DefaultSettings["Swordburst2"]["Infinite Stamina"]
local mobesp = DefaultSettings["Swordburst2"]["Mob ESP"]
_G.AntiAfk = DefaultSettings["Swordburst2"]["Anti AFK"]

local die;
local invis;
local bring;

spawn(function()
	while wait(40) do -- Autosave settings every 40 secs
		DefaultSettings["Swordburst2"]["Auto Kick"] = leaveModJoins
		DefaultSettings["Swordburst2"]["Kill Aura Range"] = killAuraRange
		DefaultSettings["Swordburst2"]["Killaura Speed"] = killAuraSpeed
		DefaultSettings["Swordburst2"]["Rage Movement Speed"] = rageModeSpeedVal
		DefaultSettings["Swordburst2"]["Anti AFK"] = _G.AntiAfk
		DefaultSettings["Swordburst2"]["Infinite Stamina"] = infStamina
		DefaultSettings["Swordburst2"]["Mob ESP"] = mobesp

		DefaultSettings["UIColorSettings"]["GradientTwoEnabled"] = GradientTwoEnabled
		DefaultSettings["UIColorSettings"]["ColorGradient1"] = {ColorGradient1.r, ColorGradient1.g, ColorGradient1.b}
		DefaultSettings["UIColorSettings"]["ColorGradient2"] = {ColorGradient2.r, ColorGradient2.g, ColorGradient2.b}

		Save()
	end
end)

local FloorMobData = {
	[542351431] = { -- // Floor 1
		["Mobs"] = {
			["Frenzy Boar"] = true,
			["Hermit Crab"] = true,
			["Wolf"] = true,
			["Bear"] = true,
			["Dire Wolf"] = true,
			["Ruin Knight"] = true,
			["Draconite"] = true,
			["Ruin Kobold Knight"] = true,
			["Rahjin the Thief King"] = true,
		}
	},

	[548231754] = { -- // Floor 2
		["Mobs"] = {
			["Leaf Beetle"] = true,
			["Leaf Ogre"] = true,
			["Leafray"] = true,
			["Pearl Keeper"] = true,
			["Pearl Guardian"] = true,
			["Gorrock the Grove Protector"] = true,
			["Wasp"] = true,
			["Bushback Tortoise"] = true,
			["Borik the BeeKeeper"] = true,
		}
	},

	[555980327] = { -- // Floor 3
		["Mobs"] = {
			["Snowgre"] = true,
			["Angry Snowman"] = true,
			["Icewhal"] = true,
			["Alpha Icewhal"] = true,
			["Snowhorse"] = true,
			["Ice Elemental"] = true,
			["Ice Walker"] = true,
			["Qerach The Forgotten Golem"] = true,
			["Ra'thae the Ice King"] = true,
		}
	},

	[572487908] = { -- // Floor 4
		["Mobs"] = {
			["Wattlechin Crocodile"] = true,
			["Birchman"] = true,
			["Treeray"] = true,
			["Bamboo Spiderling"] = true,
			["Rotling"] = true,
			["Boneling"] = true,
			["Bamboo Spiderling"] = true,
			["Dungeon Dweller"] = true,
			["Bamboo Spider"] = true,
			["Lion Protector"] = true,
			["Irath the Lion"] = true,
		}
	},

	[580239979] = { -- // Floor 5
		["Mobs"] = {
			["Girdled lizard"] = true,
			["Angry Cactus"] = true,
			["Desert Vulture"] = true,
			["Giant Centipede"] = true,
			["Sand Scorpion"] = true,
			["Fire Scorpion"] = true,
			["Green Patrolman"] = true,
			["Patrolman Elite"] = true,
			["Centaurian Defender"] = true,
			["Sa'jun the Centurian Chieftain"] = true,
		}
	},

	[582198062] = { -- // Floor 7
		["Mobs"] = {
			["Jelly Wisp"] = true,
			["Firefly"] = true,
			["Shroom Back Clam"] = true,
			["Gloom Shroom"] = true,
			["Horned Sailfin Iguana"] = true,
			["Frogazoid"] = true,
			["Blightmouth."] = true,
			["Snapper"] = true,
			["Smashroom"] = true,
		}
	},

	[548878321] = { -- // Floor 8
		["Mobs"] = {
			["Giant Praying Mantis"] = true,
			["Petal Knight"] = true,
			["Leaf Rhino"] = true,
			["Sky Raven"] = true,
			["Hippogriff"] = true,
			["Forest Wanderer"] = true,
			["Wingless Hippogriff"] = true,
			["Dungeon Crusador"] = true,
			["Formaug the Jungle Giant"] = true,
		}
	},

	[573267292] = { -- // Floor 9
		["Mobs"] = {
			["Batting Eye"] = true,
			["Lingerer"] = true,
			["Fishrock Spider"] = true,
			["Reptasaurus"] = true,
			["Ent"] = true,
			["Undead Warrior"] = true,
			["Polyserpant"] = true,
			["Gargoyle Reaper"] = true,
			["Enraged Lingerer"] = true,
			["Undead Berserker"] = true,
			["Mortis the Flaming Sear"] = true,
		}
	},

	[2659143505] = { -- // Floor 10
		["Mobs"] = {
			["Minion"] = true,
			["Winged Minion"] = true,
			["Grunt"] = true,
			["Guard Hound"] = true,
			["Shady Villager"] = true,
			["Baal, The Tormentor"] = true,
			["Minion"] = true,
			["Winged Minion"] = true,
			["Wendigo"] = true,
			["Clay Giant"] = true,
			["Undead Servant"] = true,
			["Grim  the  Overseer"] = true,
		}
	},

	[5287433115] = { -- // Floor 11
		["Mobs"] = {
			["Reaper"] = true,
			["Soul Eater"] = true,
			["Command Falcon"] = true,
			["Shadow Figure"] = true,
			["???????"] = true,
			["Ra"] = true,
			["Ka"] = true,
			["Da"] = true,
		}
	},

}

local services = mainmodule.Services
		
skills = services.Skills.skillHandlers
		--[[
			Sweeping Strike -- 1hSword
			Whirlwind Spin - 2x 1hSword
			Downward SMASH - 2hSword
			Piercing Dash - Rapier
			Leaping Slash - Katana
			Infinity Slash
			Block
			Roll
		]]
		
		-- Example Func: skills["Infinity Slash"]()
		
local MobFold = workspace.Mobs
		
local keyS = getupvalues(services.Combat.DamageArea)
local ks2 = getupvalues(keyS[6])
local keys = ks2[1]
local rpcKey = getupvalues(ks2[4])[4]
		
local SavedKey = ""
local nils = 0

local function isAlive(v)
	local alive;
	if (CanAutofarm == false and CanAutofarmRage == false and mobKill == false) or v.Parent == nil or v == nil or (v:FindFirstChild("Entity") and v:FindFirstChild("Entity"):FindFirstChild("Health") and v:FindFirstChild("Entity"):FindFirstChild("Health").Value == 0) then 
		if v.Name ~= "Reaper" and v:FindFirstChild("Head") and v.Head.Transparency ~= 0 then
			alive = false 
		elseif v.Name == "Reaper" and v:FindFirstChild("Reaper hands") and v["Reaper hands"].Transparency ~= 0 then
			alive = false
		else
			alive = true
		end
	else 
		alive = true 
	end
			
	return alive
end

local teleporting = false

local old = anim.StopTrack
anim.StopTrack = function(a,b)
	if tostring(a) == "Running" and running == true then
		return nil
	else
		return old(a,b)
	end
end

game:GetService("RunService").Stepped:connect(function()
	if running then
		anim.PlayTrack("Running", 2)
	end
end)


--[[local function tweenMove(Target)
	if Target and Target.PrimaryPart then
		teleporting = true
		local PathfindingService = game:GetService("PathfindingService")
		local char = game:GetService("Players").LocalPlayer.Character
		local T = Target.PrimaryPart
		local path = PathfindingService:CreatePath()
	
		path:ComputeAsync(char.HumanoidRootPart.Position, T.Position)
		local waypoints = path:GetWaypoints()

		running = true

		graph.DoEffect("Sprint Trail", {
			Enabled = true, 
			Character = game:GetService("Players").LocalPlayer.Character
		});
		if #waypoints > 10 and T then
			for i, v in pairs(waypoints) do
				if (T.Position - char.PrimaryPart.Position).magnitude < 8 then
					break
				end
				char.Humanoid:MoveTo(v.Position)
				char.Humanoid.MoveToFinished:Wait()
				if (T.Position - char.PrimaryPart.Position).magnitude < 8 then
					break
				end
			end
		elseif #waypoints <= 10 then
			char.Humanoid:MoveTo(T.Position)
			teleporting = false
		end

		running = false
		graph.DoEffect("Sprint Trail", {
			Enabled = false, 
			Character = game:GetService("Players").LocalPlayer.Character
		});
		teleporting = false
	end
end--]]

local function tweenMove(Target)
	if Target and Target.PrimaryPart then
		teleporting = true
		local PathfindingService = game:GetService("PathfindingService")
		local char = game:GetService("Players").LocalPlayer.Character
		local T = Target.PrimaryPart
		local path = PathfindingService:CreatePath()

		running = true

		graph.DoEffect("Sprint Trail", {
			Enabled = true, 
			Character = game:GetService("Players").LocalPlayer.Character
		});

		repeat
			if T and game:GetService("Players").LocalPlayer.Character:FindFirstChild("HumanoidRootPart") and CanAutofarm then
				path:ComputeAsync(game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.Position, T.Position)
				if path.Status == Enum.PathStatus.Success then
					local waypoints = path:GetWaypoints()
					ignorelist = {}
					if #waypoints <= 10 and game:GetService("Players").LocalPlayer.Character:FindFirstChild("Humanoid") then
						game:GetService("Players").LocalPlayer.Character.Humanoid:MoveTo(T.Position)
						teleporting = false
						break
					elseif game:GetService("Players").LocalPlayer.Character:FindFirstChild("Humanoid") then
						game:GetService("Players").LocalPlayer.Character.Humanoid:MoveTo(waypoints[2].Position)
						game:GetService("Players").LocalPlayer.Character.Humanoid:MoveTo(waypoints[3].Position)
						wait(0.1)
					else
						break
					end
				else
					ignorelist[mob] = true
					break
				end
			else
				break
			end
		until waypoints and #waypoints == 1
		teleporting = false

		running = false

		graph.DoEffect("Sprint Trail", {
			Enabled = false, 
			Character = game:GetService("Players").LocalPlayer.Character
		});
	end
end

local no = true
local lastCombatKey = ""
function getCombatKey()
	if #keys <= 20 and no then
		no = false
		local refills = game.ReplicatedStorage.Function:InvokeServer('Combat', rpcKey, {
			"RefillKeys",
			lastCombatKey;
		})
				
		if type(refills) == "table" then
			for i, key in next, refills do
				keys[#keys + 1] = key;
			end
		end
		no = true
	end
		
	local cKey = table.remove(keys, #keys)
	if cKey ~= nil and cKey ~= "" then
		lastCombatKey = cKey;
	end
	
	return cKey;
end

local plr = game.Players.LocalPlayer
local chr = plr.Character or plr.CharacterAdded:Wait()

local hi = 1;
local function swing()
	local swordtype = getrenv()._G.CalculateCombatStyle()
	local LocalPlayer = game:GetService("Players").LocalPlayer
	local Profile = game:GetService("ReplicatedStorage").Profiles[LocalPlayer.Name]
	if Profile.AnimSettings[swordtype].Value ~= "" then
		swordtype = Profile.AnimSettings[swordtype].Value;
	end;
	if swordtype ~= "Unarmed" then
		local swingy = game:GetService("ReplicatedStorage").Database.Animations[swordtype]:FindFirstChild("Swing" .. tostring(hi));
		swingy = LocalPlayer.Character:FindFirstChildOfClass("Humanoid"):LoadAnimation(swingy)
		swingy:Play()
		wait(swingy.Length)
		if hi == 3 then
			hi = 1
		end
	end
	hi = hi + 1
end

local function damage(mob)
	local chr = plr.Character or plr.CharacterAdded:Wait()
	if SkillToUse ~= nil then
		if chr:FindFirstChildOfClass("Humanoid") and chr:FindFirstChildOfClass("Humanoid").Health ~= 0 and chr:FindFirstChild("HumanoidRootPart") and mob and mob.PrimaryPart and isAlive(mob) then
			local mag = (game:GetService("Players").LocalPlayer.Character.PrimaryPart.Position - mob.PrimaryPart.Position).magnitude
			if mag <= killAuraRange then 
				--local keyB = getCombatKey()
				--if keyB then
				if CanAutofarmRage or mobKill then
					for i = 1, killAuraSpeed do
						spawn(function()
							game.ReplicatedStorage.Event:FireServer("Combat", rpcKey, {
								"Attack",
								SkillToUse,
								mob,
								"-1"
							})
						end)
					end
					wait()--wait(0.01)
				else
					game.ReplicatedStorage.Event:FireServer("Combat", rpcKey, {
						"Attack",
						SkillToUse,
						mob,
						"-1"
					})
					swing()					
				end
			end
		else
			die = true
		end
	else
		--warn'Skill is nil'
	end
end

local cf = nil

local mt = getrawmetatable(game)
local indexBackup = mt.__index

local plr = game.Players.LocalPlayer
local chr = plr.Character or plr.CharacterAdded:Wait()
local root = chr.HumanoidRootPart

plr.CharacterAdded:Connect(function(char)
	chr = char
	root = chr:WaitForChild("HumanoidRootPart")
end)

setreadonly(mt, false) 
mt.__index = function(self,key,...)
    if not checkcaller() and self == root and CanAutofarmRage and BruteforceRage then
        if key == "CFrame" and cf then
			root.CFrame = cf
			return cf
        end
    end
    return indexBackup(self,key,...)
end
setreadonly(mt, true)
local tween
function tweenMoveRage(model, target, isCFrame)
	spawn(function()
			if not BruteforceRage and target and model then
				pcall(function()
					workspace.CurrentCamera.CameraSubject = chr.HumanoidRootPart
				end)
				local tweenservice = game:service'TweenService'
                local CFrameValue = Instance.new("CFrameValue")
                CFrameValue.Value = model:GetPrimaryPartCFrame()

                CFrameValue:GetPropertyChangedSignal("Value"):connect(function()
                    if model and model.PrimaryPart then
                        model:SetPrimaryPartCFrame(CFrameValue.Value)
                    end
                end)

                local Info = TweenInfo.new(
                    ((model:GetPrimaryPartCFrame().Position - target.Position).magnitude)/ rageModeSpeedVal,
                    Enum.EasingStyle.Linear,
                    Enum.EasingDirection.Out,
                    0,
                    false,
                    0 
                )

                
                if not isCFrame then
                    tween = tweenservice:Create(CFrameValue, Info, {Value = (target.CFrame) * CFrame.new(0,25,0)})
                else
                    tween = tweenservice:Create(CFrameValue, Info, {Value = (target) * CFrame.new(0,0,0)})
                end
                if tween then
                    tween:Play()
                    if teleporting then
                        tween.Completed:Connect(function()
                            teleporting = false
						end)
						spawn(function()
							repeat wait() until mobModel == nil or CanAutofarmRage == false or mobModel.PrimaryPart == nil or isAlive(mobModel) == false or game:GetService("Players").LocalPlayer.Character.PrimaryPart == nil or teleporting == false
							teleporting = false

							pcall(function()
								tween:Stop()
							end)
						end)
                    end
				end

			elseif BruteforceRage and target then
				cf = target.CFrame * CFrame.new(0,22,0)
			else
				print(BruteforceRage, target)
				cf = nil
            end
    end)
end

spawn(function()
	while true do
		if CanAutofarm then
			if mobModel ~= nil and mobModel.PrimaryPart ~= nil and isAlive(mobModel) ~= false and game:GetService("Players").LocalPlayer.Character.PrimaryPart ~= nil then--and ignorelist[mobModel] ~= nil then
				tweenMove(mobModel)
				repeat game:GetService'RunService'.Heartbeat:Wait() until teleporting == false or mobModel == nil or mobModel.PrimaryPart == nil or isAlive(mobModel) == false or game:GetService("Players").LocalPlayer.Character.PrimaryPart == nil
				damage(mobModel)
			else
				die = true
			end
		elseif CanAutofarmRage then
			if mobModel ~= nil and mobModel.PrimaryPart ~= nil and isAlive(mobModel) ~= false and game:GetService("Players").LocalPlayer.Character.PrimaryPart ~= nil then
				if BruteforceRage then
					teleporting = false
					repeat game:GetService'RunService'.Heartbeat:Wait() if mobModel and mobModel.PrimaryPart and game:GetService("Players").LocalPlayer.Character then tweenMoveRage(game:GetService("Players").LocalPlayer.Character, mobModel.PrimaryPart) damage(mobModel) end until mobModel == nil or mobModel.PrimaryPart == nil or isAlive(mobModel) == false or game:GetService("Players").LocalPlayer.Character.PrimaryPart == nil
				else
					pcall(function()
						tweenMoveRage(game:GetService("Players").LocalPlayer.Character, mobModel.PrimaryPart)
					end)
					repeat game:GetService'RunService'.Heartbeat:Wait() damage(mobModel) until teleporting == false or mobModel == nil or mobModel.PrimaryPart == nil or isAlive(mobModel) == false or game:GetService("Players").LocalPlayer.Character.PrimaryPart == nil
					teleporting = false
					pcall(function()
						tween:Stop()
					end)
				end
			else
				die = true
			end
		end
		game:GetService'RunService'.Heartbeat:Wait()
	end
end)

local Players = game:GetService("Players")

local function getclosest(isKillAura)
	local isKillAura = isKillAura or false
	local mob = nil
	local close = math.huge
	local lplayer = game:GetService("Players").LocalPlayer
	local char = lplayer.Character
	local mobList = nil
	if FloorMobData[game.PlaceId] then
		mobList = FloorMobData[game.PlaceId]["Mobs"]
	end
	for i, v in pairs(game:GetService("Workspace"):WaitForChild('Mobs'):GetChildren()) do
		if v and v.PrimaryPart and char and char:FindFirstChild("HumanoidRootPart") and v ~= nil and v.PrimaryPart ~= nil and isAlive(v) and (isKillAura or (mobList == nil or mobList[v.Name] == true)) then
			local mag = (v.PrimaryPart.Position-char:FindFirstChild("HumanoidRootPart").Position).magnitude
			if mag < close then
				mob = v
				close = mag
			end
		end
	end
	return mob
end

local function fire(...)
	game.ReplicatedStorage.Event:FireServer(...)
end

local function invoke(...)
	game:GetService("ReplicatedStorage").Function:InvokeServer(...)
end

local function dismantle(rarity)
	local restartFunc = Instance.new("BindableFunction")
	restartFunc.OnInvoke = function(text)
		if text == "Yes" then
			for i, v in pairs(game.ReplicatedStorage.Profiles[game:GetService("Players").LocalPlayer.Name].Inventory:children'') do
				if game.ReplicatedStorage.Database.Items[v.Name].Rarity.Value == rarity then
					game.ReplicatedStorage.Event:FireServer("Equipment", {
						"Dismantle",
						v
					})
				end
			end	
		else
			return
		end
	end
	game.StarterGui:SetCore("SendNotification", {
		Title = "Dismantle All" ..  rarity .. "?";
		Text = "Are you sure?";
		Callback = restartFunc;
		Button1 = "Yes";
		Button2 = "No";
	})
end

local function setupenvironment()
	local LocalPlayer = game:GetService("Players").LocalPlayer
	local Profile = game:GetService("ReplicatedStorage").Profiles[LocalPlayer.Name]
	local ItemDB = game:GetService("ReplicatedStorage").Database.Items
	local level = math.floor(Profile.Stats.Exp.Value ^ 0.3333333333333333)
	local Katana;
	local right;
	local left;
	for i, v in pairs(Profile.Inventory:GetChildren()) do
		if ItemDB[v.Name]:FindFirstChild("Class") and (ItemDB[v.Name].Class.Value == "Katana" or ItemDB[v.Name].Class.Value == "1HSword") and ItemDB[v.Name].Level.Value <= level then
			Katana = v
		end
		if v.Value == Profile.Equip.Right.Value then
			if ItemDB[v.Name].Class.Value ~= "Katana" then
				right = v
			end
		end
		if v.Value == Profile.Equip.Left.Value then
			left = v
		end
	end
	
	if Katana == nil then
		LocalPlayer:Kick("Unable to find an equippable Katana or 1HSword in your inventory. Please see #faq in the discord server.")
	end

	if right then
		invoke("Equipment", {"Unequip", right})
	end
	if left then
		invoke("Equipment", {"Unequip", left})
	end

	invoke("Equipment", {"EquipWeapon", Katana, "Right"})
	SkillToUse = ItemDB[Katana.Name].Class.Value == "Katana" and "Leaping Slash" or "Sweeping Strike"
	fire("Skills", {"UseSkill", SkillToUse, nil})

	if right then
		wait(0.35)
		invoke("Equipment", {"Unequip", Katana})
		invoke("Equipment", {"EquipWeapon", right, "Right"})
		if left then
			invoke("Equipment", {"EquipWeapon", left, "Left"})
		end
	end	
	
	
end

coroutine.resume(coroutine.create(function()
	while true do
		if CanAutofarm or CanAutofarmRage then
			local v = getclosest()
			if v ~= nil and v.PrimaryPart ~= nil and isAlive(v) then--and ignorelist[mobModel] == nil then
				mobModel = v
				die = false
				repeat
					wait()
				until die or not isAlive(mobModel) --or ignorelist[mobModel] ~= nil
				die = false
				mobModel = nil
			end
		end
		wait()
	end
end))

coroutine.resume(coroutine.create(function()
	while game:GetService'RunService'.Heartbeat:Wait() do
		if mobKill and not CanAutofarmRage and not CanAutofarm then
			local close = getclosest(true)
			if close ~= nil and close.PrimaryPart ~= nil and isAlive(close) then
				damage(close)				
			end
		end
	end
end))

coroutine.resume(coroutine.create(function()
	while true do
		if pKillAura then
			for k, plr in next, game:service'Players':GetPlayers() do
				if plr ~= game.Players.LocalPlayer then
					local v = plr.Character
					if v ~= nil and v.PrimaryPart ~= nil then
						if v:FindFirstChild("Entity") then
							if v:FindFirstChild("Entity"):FindFirstChild("Health") then
								if v:FindFirstChild("Entity"):FindFirstChild("Health").Value > 0 and isAlive(v) then
									damage(v)
								end
							end
						end
					end
				end
			end
		end
		game:GetService'RunService'.Heartbeat:Wait()
	end
end))

setupenvironment()
	
	
--// Gui Library Creation & Functioning
local PlayerTab = library:CreateTab("Player")
	
local opUpgrd = PlayerTab:AddButton("Open Upgrade Menu", function()
	mainmodule.Services.UI.openUpgrade()
end)
	
local opDism = PlayerTab:AddButton("Open Dismantle Menu", function()
	mainmodule.Services.UI.openDismantle()
end)
	
local opCryst = PlayerTab:AddButton("Open Crystal Forge Menu", function()
	mainmodule.Services.UI.openCrystalForge()
end)
	
local AutoUpgEquipped = PlayerTab:AddButton("Auto max equipped Weapon", function()
	local ownedId = game.ReplicatedStorage.Profiles[game:GetService("Players").LocalPlayer.Name].Equip.Right.Value
	local equipped
	
	for i, v in pairs(game.ReplicatedStorage.Profiles[game:GetService("Players").LocalPlayer.Name].Inventory:children'') do
		if tonumber(v.Value) == tonumber(ownedId) then
			equipped = v
			break
		end
	end
	repeat
		wait(0.05)
		game.ReplicatedStorage.Event:FireServer("Equipment", {
			"Upgrade",
			equipped,
			false
		})
	until 
			equipped:FindFirstChild("Upgrade").Value == 10
end)
	
local AutoUpgEquippedArmr = PlayerTab:AddButton("Auto max equipped Armor", function()
	local ownedId = game.ReplicatedStorage.Profiles[game:GetService("Players").LocalPlayer.Name].Equip.Clothing.Value
	local equipped
	
	for i, v in pairs(game.ReplicatedStorage.Profiles[game:GetService("Players").LocalPlayer.Name].Inventory:children'') do
		if tonumber(v.Value) == tonumber(ownedId) then
			equipped = v
			break
		end
	end
	repeat
		wait(0.1)
		game.ReplicatedStorage.Event:FireServer("Equipment", {
			"Upgrade",
			equipped,
			false
		})
	until 
			equipped:FindFirstChild("Upgrade").Value == 10
end)
	
local VirtualUser = game:service'VirtualUser'
game:service'Players'.LocalPlayer.Idled:connect(function()
	if _G.AntiAfk then
		VirtualUser:CaptureController()
		VirtualUser:ClickButton2(Vector2.new())
	end
end)

local invisible = PlayerTab:AddButton("Invisible Mode", function()
	local Character = game:GetService("Players").LocalPlayer.Character
	local Clone = Character.LowerTorso.Root:Clone()
	Character.LowerTorso.Root:Destroy()
	Clone.Parent = Character.LowerTorso
	game.StarterGui:SetCore("SendNotification", {
		Title = "Invisibility Enabled"; -- the title (ofc)
		Text = "It will stop working when you die or reset. Use at your own risk.";
		Duration = 5; -- how long the notification should in secounds
	})
end)
--[[
local ol = PlayerTab:AddButton("Bring Mobs", function()
	for i, v in pairs(game:GetService("Workspace"):FindFirstChild("Mobs"):GetDescendants()) do
		if v:IsA("BasePart" or "UnionOperation" or "Model") and v.Anchored == false then
			game:GetService("Players").LocalPlayer.MaximumSimulationRadius = math.pow(math.huge,math.huge)*math.huge
			game:GetService("Players").LocalPlayer.SimulationRadius = math.pow(math.huge,math.huge)*math.huge
			v.CFrame = game:GetService("Players").LocalPlayer.Character:FindFirstChild("Head").CFrame
		end
	end
end)
]]--

_G.AntiAfkTab = PlayerTab:AddSwitch("Anti AFK", function(state)
	_G.AntiAfk = state
end)
_G.AntiAfkTab:Set(_G.AntiAfk)
local color = Color3.fromRGB(100, 180, 255)

--[[toggleMobEsp = PlayerTab:AddSwitch("Mob ESP", function(state)
	mobesp = state
end)
toggleMobEsp:Set(mobesp)]]

--[[spawn(function()
    while true do
        for hue = 0, 1, 1/60 do
            color = Color3.fromHSV(hue, 1, 1)
            wait()
        end
    end
end)

function Create_Esp(part)
    local screen = workspace.CurrentCamera:WorldToViewportPoint(part.Position)
    local name = Drawing.new("Text")
    name.Text = part.Parent.Name
    name.Color = color
    name.Position = Vector2.new(screen.x, screen.y)
    name.Size = 20.0
    name.Outline = true
    name.Center = true
    name.Visible = true

    game:GetService("RunService").Stepped:connect(function()
        pcall(function()
            local screen = workspace.CurrentCamera:WorldToViewportPoint(part.Position)
            name.Color = color
            local destroyed = not part:IsDescendantOf(workspace)
            if destroyed and name ~= nil then
                name:Remove()
            end
            if part ~= nil then
                name.Position = Vector2.new(screen.x, screen.y)
            end
            local _, screen = workspace.CurrentCamera:WorldToViewportPoint(part.Position)
            if screen and mobesp then
                name.Visible = true
            else
                name.Visible = false
            end
        end)
    end)
end

local mobs = workspace.Mobs:getChildren()
for i,v in next,mobs do
    if v:findFirstChild("HumanoidRootPart") then
        Create_Esp(v.HumanoidRootPart)
    end
end

workspace.Mobs.ChildAdded:Connect(function(mob)
    local hrp = mob:WaitForChild("HumanoidRootPart", 9e9)
    Create_Esp(hrp)
end)--]]



local AutoTab = library:CreateTab("Autofarm")
local AutofarmRageS = {}
AutofarmS = AutoTab:AddSwitch("Legit Autofarm", function(state)
	CanAutofarm = state

	if state then
		if CanAutofarmRage then
			CanAutofarmRage = false
			AutofarmRageS:Set(false)
		end
	end
end)

AutofarmRageS = AutoTab:AddSwitch("Rage Autofarm", function(state)
	CanAutofarmRage = state

	if state then
		mobKill = true
		if CanAutofarm then
			CanAutofarm = false
			AutofarmS:Set(false)
		end
	else
		if mobkillSwitch then
			mobKill = true
		else
			mobKill = false
		end
	end
end)
if rageModeSpeedVal > 75 or rageModeSpeedVal < 40 then rageModeSpeedVal = 65 end
local Rspeed = AutoTab:AddSlider("Rage Tween Speed", 40, 75, function (x)
	rageModeSpeedVal = tonumber(x)
end)
Rspeed:Set(rageModeSpeedVal)

BruteforceRageS = AutoTab:AddSwitch("Bruteforce TP to mobs", function(state)
	BruteforceRage = state
end)

mobKillAura = AutoTab:AddSwitch("Mob Kill Aura", function(state)
	mobKill = state
	mobkillSwitch = state

	wait()
end)
mobKillAura:Set(mobKill)

plrKillAura = AutoTab:AddSwitch("Player Kill Aura", function(state)
	pKillAura = state
end)
plrKillAura:Set(pKillAura)

mobKillAuraRange = AutoTab:AddSlider("Kill Aura Range", 5, 40, function(x)
	killAuraRange = x
end)
mobKillAuraRange:Set(killAuraRange)

mobKillAuraspeeeed = AutoTab:AddSlider("Killaura Speed", 1, 20, function(x)
	killAuraSpeed = x
end)
mobKillAuraspeeeed:Set(killAuraSpeed)

local speed = AutoTab:AddSlider("WalkSpeed", 20, 60, function (x)
	game:GetService("Players").LocalPlayer.Character.Humanoid.WalkSpeed = tonumber(x)
	DefaultSettings["Swordburst2"]["WalkSpeed"] = tonumber(x)
end)
speed:Set(walkspeed)

if FloorMobData[game.PlaceId] then
	local mobsToToggle = FloorMobData[game.PlaceId]["Mobs"]
	local mobPrioTab = library:CreateTab("Mob Priority")
	local switches = {}

	game.StarterGui:SetCore("SendNotification", {
		Title = "Hattori Mob Priority";
		Text = "The mob priority is still a work in progress, if you enable only a mob that is very far away, it may take a while for the damage to register. Just know it is not broken unless it errors.";
		Duration = 360;
	})

	mobPrioTab:AddButton("Select All", function()
		for i,v in pairs(switches) do
			pcall(function()
				v:Set(true)
			end)
		end
	end)

	mobPrioTab:AddButton("Deselect All", function()
		for i,v in pairs(switches) do
			pcall(function()
				v:Set(false)
			end)
		end
	end)

	for i,v in pairs(mobsToToggle) do
		local switch = mobPrioTab:AddSwitch(i, function(set)
			mobsToToggle[i] = set
		end)
		switch:Set(v)
		table.insert(switches, switch)
	end

end

local modList = {
	'AbstractAlex',
	'Blocky_Max',
	'SIevin',
	'Anticism',
	'OKevinO',
	'MisterGreenTurtle',
	'Reiko_Play',
	'MisterRedTurtle',
	'Hippie_ofDoom',
	'NightcoreRayRayw',
	'Wiseman_Matt',
	'RavenousZen',
	'CrypticArchr',
	'Alrkuo',
	'Dillytube',
	'NotSoAxser',
	'Glaciynical',
	'WickedNovaG1rl',
	'Centuryghost',
	'Zekrulix',
	'poopslim',
	'Skilluvi',
	'B1can',
	'Aquavsty',
	'RozukageMardarin',
	'SirMalRoyal',
	'NotSoV1RUS',
	'Direnias',
	'racerbee',
	'redvsty',
	'gravytr_ain',
	'UnitEternal',
	'entor',
	'Zaubergel',
	'Atritan7',
	'Insecure_FreakFurry',
	'rinvsty',
	'Brvdberry'
};

local function turnOffAll()
	pcall(function()
		mobKillAura:Set(false)
		plrKillAura:Set(false)
		AutofarmRageS:Set(false)
		AutofarmS:Set(false)
	end)
	pcall(function()
		game.Players.LocalPlayer.Character:BreakJoints()
	end)
end

game:service'Players'.PlayerAdded:Connect(function(pr)
	for i,v in pairs(modList) do
		if v:lower() == pr.Name:lower() and leaveModJoins then 
			game:service'Players'.LocalPlayer:Kick("Panic mode Activated!\nModerator '"..pr.Name.."' has joined!")
		elseif v:lower() == pr.Name:lower() and panickModJoins then
			turnOffAll()
		end
	end
end)

local panck = library:CreateTab("Mod Detector")
LeaveOnJoins = panck:AddSwitch("Auto Kick", function(state)
	leaveModJoins = state
	if state then
		for i,pr in pairs(game:service'Players':GetPlayers()) do
			for i,v in pairs(modList) do
				if v:lower() == pr.Name:lower() and leaveModJoins then 
					game:service'Players'.LocalPlayer:Kick("Panic mode Activated!\nModerator '"..pr.Name.."' has joined!")
				end
			end
		end
	end
end)
LeaveOnJoins:Set(leaveModJoins)

PanicOnJoins = panck:AddSwitch("Panic, Disable everything", function(state)
	panickModJoins = state
	if state then
		for i,pr in pairs(game:service'Players':GetPlayers()) do
			for i,v in pairs(modList) do
				if v:lower() == pr.Name:lower() and panickModJoins then 
					turnOffAll()
				end
			end
		end
	end
end)
	
local LogWindow = AutoTab:NewLogWindow("Autofarm logs")
	
local Profile = game:GetService("ReplicatedStorage").Profiles[game:GetService("Players").LocalPlayer.Name]
local Vel = Profile.Stats.Vel
local LastVel = Vel.Value
local Log = {}
	
Log.Earned = {
	Vel = 0,
	Items = {},
}
	
function getRarityColor3(name)
	if name == "Uncommon" then
		return Color3.fromRGB(114, 255, 98)
	elseif name == "Rare" then
		return Color3.fromRGB(39, 215, 231)
	elseif name == "Common" then
		return Color3.new(0.9, 0.9, 0.9)
	elseif name == "Legendary" then
		return Color3.fromRGB(231, 43, 200)
	end
end
	
Profile.Inventory.ChildAdded:Connect(function(item)
	pcall(function()
		table.insert(Log.Earned.Items, item.Name)
		local data = mainmodule.Services.Util.GetItemDataByName(item.Name)
		LogWindow:Log("Item Recieved: "..item.Name..
								" // Lvl: "..data.Level.Value..
								" // "..data.Rarity.Value, 
		
							getRarityColor3(data.Rarity.Value),
							data.Icon.Texture)
	end)
end)
	
Vel.Changed:Connect(function()
	local earn = Vel.Value - LastVel
	LastVel = Vel.Value
	Log.Earned.Vel = Log.Earned.Vel + earn
	LogWindow:SetVel(Log.Earned.Vel)
end)
	
		--local Header = AutoTab:NewHeader("-==- Prioritize will be added soon. -==-")
	
local FlrTab = library:CreateTab("Floor Tp")
	
--[[local FloorSel = FlrTab:NewHeader("Selected Floor: None")
	
local FloorInput = FlrTab:AddBox("Input Floor name", function(text)
	
	for i, v in pairs(places) do
		if tostring(i):lower():find(text:lower()) then
			SelectedFloor = i
			FloorSel:SetText("Selected Floor: " .. i)
		end
	end
	
end)
	
local list
	
local ShowFlrsbutton = FlrTab:AddSwitch("List Available Floors", function(state)
	if state then
		local Flrs = ""
				
		for i, v in pairs(places) do
			if Flrs ~= "" then
				Flrs = Flrs.."\n"..i
			else
				Flrs = i
			end
		end
			
		list = FlrTab:NewList("Floor names", Flrs)
	elseif list ~= nil then
		list:Destroy()
	end	
end)
	
local TpFlrbutton = FlrTab:AddButton("Teleport to Selected Floor", function()
	
	local placeId = places[SelectedFloor]
	
	local teleportData = {
		auth = placeId,
		profileData = {}
	}
	
	TeleportService:Teleport(placeId, game:GetService("Players").LocalPlayer, teleportData)
end)]]

local TeleportService = game:GetService("TeleportService")
local lowplayers = false
local Rejlowplayers = false
local ignore = {game.JobId}
local function Teleport(gameID)
    local teleportData = {
        auth = gameID,
        profileData = {}
    }
    if lowplayers then
        local lessplayers = math.huge
        local servers = game:service'HttpService':JSONDecode(game:HttpGet("https://games.roblox.com/v1/games/"..gameID.."/servers/Public?sortOrder=Asc&limit=100"))
		local smallserverID;
		

		for _, server in pairs(servers.data) do
			--print(gameID, server.playing, server.id)
			if server.playing > 0 and server.playing < lessplayers and ignore[server.id] == nil then
				lessplayers = server.playing
				smallserverID = server.id

				if server.playing == 1 then
					break
				end
			end
		end




        --[[for count = 1, tempshit.TotalCollectionSize do
            local GameInstances = game:GetService("HttpService"):JSONDecode(game:HttpGet("https://www.roblox.com/games/getgameinstancesjson?placeId=" .. gameID .. "&startindex=" .. count))
                for i, v in pairs(GameInstances.data) do
                    if i == GameInstances.TotalCollectionSize then
                        if #v.CurrentPlayers > 0 and #v.CurrentPlayers < lessplayers and ignore[v.Guid] == nil then
                            lessplayers = #v.CurrentPlayers
                            smallserverID = v.Guid
                            break
                        else
                            break
                        end
                    else
                        if #v.CurrentPlayers > 0 and #v.CurrentPlayers < lessplayers and ignore[v.Guid] == nil then
                            lessplayers = #v.CurrentPlayers
                            smallserverID = v.Guid
                        end
                    end
                --print(#v.CurrentPlayers)
            end
        end]]
        game:GetService("TeleportService"):TeleportToPlaceInstance(tonumber(gameID), smallserverID, game:GetService("Players").LocalPlayer, nil, teleportData, nil)
        game:GetService("Players").LocalPlayer.OnTeleport:Connect(function(State)
            if State == Enum.TeleportState.Failed then
                ignore[smallserverID] = true
                Teleport(gameID)
            end
        end)
    else
        TeleportService:Teleport(gameID, game:GetService("Players").LocalPlayer, teleportData)
    end
end

local floor = {}
local Locations = require(game:GetService("ReplicatedStorage").Database.Locations)
for i, v in ipairs(Locations.floors) do
	floor[v.PlaceId] = v.Designation .. " - " .. v.Name
end


local button = FlrTab:AddDrop("Teleport To", floor, function(text)
	for i, v in pairs(floor) do
		if tostring(v) == text then
			Teleport(i)
		end
	end
end)

local lessplay = FlrTab:AddSwitch("Join Lowest Player Server", function(state)
	lowplayers = state
end)

game.Players.PlayerAdded:Connect(function()
	if #game.Players:GetPlayers() > 5 then
		if Rejlowplayers then
			Teleport(game.PlaceId)
		end
	end
end)

local rejlessplay = FlrTab:AddSwitch("Join lowest on server fill", function(state)
	Rejlowplayers = state
end)

	
function getInst(name)
	for i, v in pairs(workspace:GetDescendants()) do
		if v.Name == name then
			return v
		end
	end
end
	
		--[=[local TpTab = library:CreateTab("Position Tp")
	
		local TpSpawnbutton = TpTab:AddButton("Spawn",function()
			game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = getInst("SpawnLocation").CFrame * CFrame.new(0,5,0)
		end)
	
		local fTps = {
			[548878321] = "Giant's Lair", -- f1
			[542351431] = "Kobold Quarter", -- f2
			--[548231754] = ""
		}
	
		local TpBossbutton = TpTab:AddButton("Boss",function()
			if fTps[game.PlaceId] then
				game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = game.ReplicatedStorage.MapRegions[fTps[game.PlaceId]]
			else
				game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = getInst("FloorUnlock").Parent.Parent:FindFirstChildOfClass("Part").CFrame
			end
		end)
		]=]--
	
local MiscT = library:CreateTab("Misc")
	
local DismCommon = MiscT:AddButton("Auto dismantle all Common", function()
	for i, v in pairs(game.ReplicatedStorage.Profiles[game:GetService("Players").LocalPlayer.Name].Inventory:children'') do
		if game.ReplicatedStorage.Database.Items[v.Name].Rarity.Value == "Common" then
			game.ReplicatedStorage.Event:FireServer("Equipment", {
				"Dismantle",
				v
			})
		end
	end
end)
	
local DismUncommon = MiscT:AddButton("Auto dismantle all Uncommon", function()
	for i, v in pairs(game.ReplicatedStorage.Profiles[game:GetService("Players").LocalPlayer.Name].Inventory:children'') do
		if game.ReplicatedStorage.Database.Items[v.Name].Rarity.Value == "Uncommon" then
			game.ReplicatedStorage.Event:FireServer("Equipment", {
				"Dismantle",
				v
			})
		end
	end
end)
	
local DismRare = MiscT:AddButton("Auto dismantle all Rare", function()
	for i, v in pairs(game.ReplicatedStorage.Profiles[game:GetService("Players").LocalPlayer.Name].Inventory:children'') do
		if game.ReplicatedStorage.Database.Items[v.Name].Rarity.Value == "Rare" then
			game.ReplicatedStorage.Event:FireServer("Equipment", {
				"Dismantle",
				v
			})
		end
	end
end)
	
--[[local DismLegendary = MiscT:AddButton("Auto dismantle all Legendary", function()
	for i, v in pairs(game.ReplicatedStorage.Profiles[game:GetService("Players").LocalPlayer.Name].Inventory:children'') do
		if game.ReplicatedStorage.Database.Items[v.Name].Rarity.Value == "Legendary" then
			game.ReplicatedStorage.Event:FireServer("Equipment", {
				"Dismantle",
				v
			})
		end
	end
end)]]
	
local EquipAnims = MiscT:AddButton("Equip All Animation Packs", function()
	local prof = game.ReplicatedStorage.Profiles[game:GetService("Players").LocalPlayer.Name]
	local animS = prof.AnimSettings
	local animP = prof.AnimPacks
	
	animS["2HSword"].Value = "Berserker"
	animS["Katana"].Value = "Ninja"
	animS["DualWield"].Value = "Vigilante"
	animS["SingleSword"].Value = "Noble"
	
	local vig = animP:FindFirstChild("Vigilante") or Instance.new("StringValue", animP)
	vig.Name = "Vigilante"
	vig.Value = "DualWield"
	local vig = animP:FindFirstChild("Ninja") or Instance.new("StringValue", animP)
	vig.Name = "Ninja"
	vig.Value = "Katana"
	local vig = animP:FindFirstChild("Berserker") or Instance.new("StringValue", animP)
	vig.Name = "Berserker"
	vig.Value = "2HSword"
	local vig = animP:FindFirstChild("Noble") or Instance.new("StringValue", animP)
	vig.Name = "Noble"
	vig.Value = "SingleSword"
end)

local plr = game.Players.LocalPlayer
local mouse = plr:GetMouse()
local Camera = workspace.CurrentCamera
local flying = false
local deb = true
local ctrl = {f = 0, b = 0, l = 0, r = 0}
local lastctrl = {f = 0, b = 0, l = 0, r = 0}
local maxspeed = 50
local speed = 0

function Fly()
	local UpperTorso = plr.Character.UpperTorso
    local bg = Instance.new("BodyGyro", UpperTorso)
    bg.P = 9e4
    bg.maxTorque = Vector3.new(9e9, 9e9, 9e9)
    bg.cframe = UpperTorso.CFrame
    local bv = Instance.new("BodyVelocity", UpperTorso)
    bv.velocity = Vector3.new(0, 0.1, 0)
    bv.maxForce = Vector3.new(9e9, 9e9, 9e9)
    repeat
		wait()
		if flying then
			plr.Character.Humanoid.PlatformStand = true
			if ctrl.l + ctrl.r ~= 0 or ctrl.f + ctrl.b ~= 0 then
				speed = speed + .5 + (speed / maxspeed)
				if speed > maxspeed then
					speed = maxspeed
				end
			elseif not (ctrl.l + ctrl.r ~= 0 or ctrl.f + ctrl.b ~= 0) and speed ~= 0 then
				speed = speed - 1
				if speed < 0 then
					speed = 0
				end
			end
			if (ctrl.l + ctrl.r) ~= 0 or (ctrl.f + ctrl.b) ~= 0 then
				bv.velocity =
					((Camera.CoordinateFrame.lookVector * (ctrl.f + ctrl.b)) +
					((Camera.CoordinateFrame *
						CFrame.new(ctrl.l + ctrl.r, (ctrl.f + ctrl.b) * .2, 0).p) -
						Camera.CoordinateFrame.p)) *
					speed
				lastctrl = {f = ctrl.f, b = ctrl.b, l = ctrl.l, r = ctrl.r}
			elseif (ctrl.l + ctrl.r) == 0 and (ctrl.f + ctrl.b) == 0 and speed ~= 0 then
				bv.velocity =
					((Camera.CoordinateFrame.lookVector * (lastctrl.f + lastctrl.b)) +
					((Camera.CoordinateFrame *
						CFrame.new(lastctrl.l + lastctrl.r, (lastctrl.f + lastctrl.b) * .2, 0).p) -
						Camera.CoordinateFrame.p)) *
					speed
			else
				bv.velocity = Vector3.new(0, 0.1, 0)
			end
			bg.cframe =
				Camera.CoordinateFrame *
				CFrame.Angles(-math.rad((ctrl.f + ctrl.b) * 50 * speed / maxspeed), 0, 0)
		end
    until not flying
    ctrl = {f = 0, b = 0, l = 0, r = 0}
    lastctrl = {f = 0, b = 0, l = 0, r = 0}
    speed = 0
    bg:Destroy()
    bv:Destroy()
    plr.Character.Humanoid.PlatformStand = false
end

mouse.KeyDown:connect(function(key)
	if key:lower() == "w" then
		ctrl.f = 1
	elseif key:lower() == "s" then
		ctrl.b = -1
	elseif key:lower() == "a" then
		ctrl.l = -1
	elseif key:lower() == "d" then
		ctrl.r = 1
	end
end)
mouse.KeyUp:connect(function(key)
	if key:lower() == "w" then
		ctrl.f = 0
	elseif key:lower() == "s" then
		ctrl.b = 0
	elseif key:lower() == "a" then
		ctrl.l = 0
	elseif key:lower() == "d" then
		ctrl.r = 0
	end
end)

spawn(function()
	local client = game:GetService("Players").LocalPlayer
	while wait() do
		if client.Character and infStamina then
			client.Character:WaitForChild("Entity").Stamina.Value = 100
		end
	end
end)

local flyToggl = MiscT:AddSwitch("Fly", function(state)
	flying = state
	if flying then
		Fly()
	end
end)

infStam = MiscT:AddSwitch("Infinite Stamina", function(state)
	infStamina = state
end)
infStam:Set(infStamina)

elseif CaseClicker then

	function SetAnim(state)
		local reg = getreg()
		for i,v in next, reg do
			if type(v) == 'function' and islclosure(v) and (not is_protected_closure(v)) then
				if getfenv(v).script and getfenv(v).script.Name == "Client Controller" then 
					if tostring(getupvalues(v)[1]) == "PlayerData" and tostring(getupvalues(v)[6]) == game:GetService("Players").LocalPlayer.Name then
						for i,c in pairs(getupvalues(v)) do
							if c == true or c == false then
								setupvalue(v, i, state)
							end
						end
					end
				end
			end
		end
	end

	local CasesTab = library:CreateTab("Cases")

	local ToggleSkipAnimation = CasesTab:AddSwitch("Toggle Skip Animation", function(state)
		SetAnim(state)
	end)
	ToggleSkipAnimation:Set(DefaultSettings["CaseClicker"]["ToggleSkipAnimation"])

elseif Parkour then

	local tpBypass = DefaultSettings["Parkour"]["ToggleAntiTp"]--false
	local autofarm = DefaultSettings["Parkour"]["Toggle Autofarm"]--false
	local comboMult = DefaultSettings["Parkour"]["Toggle Combo Multiplier"]--false
	local legitAutofarm = DefaultSettings["Parkour"]["Toggle Legit Autofarm"]--false'

	spawn(function()
		while wait(40) do -- Autosave settings every 40 secs
			DefaultSettings["Parkour"]["ToggleAntiTp"] = tpBypass
			DefaultSettings["Parkour"]["Toggle Autofarm"] = autofarm
			DefaultSettings["Parkour"]["Toggle Combo Multiplier"] = comboMult
			DefaultSettings["Parkour"]["Toggle Legit Autofarm"] = legitAutofarm
	
			DefaultSettings["UIColorSettings"]["GradientTwoEnabled"] = GradientTwoEnabled
			DefaultSettings["UIColorSettings"]["ColorGradient1"] = {ColorGradient1.r, ColorGradient1.g, ColorGradient1.b}
			DefaultSettings["UIColorSettings"]["ColorGradient2"] = {ColorGradient2.r, ColorGradient2.g, ColorGradient2.b}
	
			Save()
		end
	end)
	
	local HighCombo = game:GetService("ReplicatedStorage"):FindFirstChild('HighCombo')
	local FireToDie = game:GetService("ReplicatedStorage"):FindFirstChild('FireToDieInstantly')
	local Teleport = game:GetService("ReplicatedStorage"):FindFirstChild('AttemptTeleport')
	local Force = game:GetService("ReplicatedStorage"):FindFirstChild("LandWithForceField")
	local bypassed = false
	local messagemodule = require(game:GetService("Players").LocalPlayer:WaitForChild("Backpack"):WaitForChild("MessageScript"))

	if pebc_execute then
		messagemodule.createMessage({
			text = "Protosmasher is unavailable for Parkour.", 
			colour = Color3.new(1, 0, 0),
			font = Enum.Font.Code
		});

		error()
		return
	end
	
	local popup = messagemodule.createPopup("By clicking Yes, you accept the fact that the current autofarm and combo multiplier is not legit and will almost certainly get you banned. Do you understand?", 24)
	popup.Close.Visible = false;
	popup.Yes.Visible = true;
	popup.No.Visible = true;
	popup.Yes.MouseButton1Click:connect(function()
		popup:Destroy()
	
		if HighCombo and FireToDie and Teleport and Force then
			HighCombo.Name = ""
			HighCombo:Destroy()
			FireToDie.Name = ""
			FireToDie:Destroy()
			Teleport.Name = ""
			Teleport:Destroy()
			Force.Name = ""
			Force:Destroy()
			bypassed = true
	
			messagemodule.createMessage({
				text = "Local Anticheat Bypassed", 
				colour = Color3.new(1, 0, 0),
				font = Enum.Font.Code
			});
		else
			game.StarterGui:SetCore("SendNotification", {
				Title = "Error";
				Text = "Anticheat not found, please report this in the Hattori Discord server";
				Duration = 2;
			})
		end
	
		if bypassed then
			local humanoid = game:GetService("Players").LocalPlayer.Character.Humanoid
			_G.VelCheck = true
			local function bypass()
				local old
				old = hookfunction(getrawmetatable(game).__index, newcclosure(function(t, k)
					if getrenv()._G.VelCheck and k == "Velocity" and tostring(t) == "HumanoidRootPart" and not checkcaller() then
						return Vector3.new(0, -12000000, 0)
					end
					return old(t, k)
				end))
			end
	
			bypass()
	
			local Fc = Instance.new("ForceField")
			Fc.Name = "TForceField"
			Fc.Parent = game:service'Players'.LocalPlayer.Character
			Fc.Visible = false
	
			game:GetService('Players').LocalPlayer.CharacterAdded:Connect(function()
				repeat
					wait()
				until game:GetService('Players').LocalPlayer.Character ~= nil
				local Fc = Instance.new("ForceField")
				Fc.Name = "TForceField"
				Fc.Parent = game:GetService('Players').LocalPlayer.Character
				Fc.Visible = false
			end)
	
			for i, v in next, getreg()  do
				if type(v) == 'function' and islclosure(v) and (not is_protected_closure(v)) then 
					if getfenv(v).script and getfenv(v).script.Name == "Main" then 
						if tostring(getupvalues(v)[1]) == "Instance" and type(getupvalues(v)[2]) == 'table' and getupvalues(v)[5] then
							spawn(function()
								local asd = 0
								while wait() do
								--getupvalues(v)[5].adminLevel = 13
									spawn(function()
										if comboMult then
											getupvalues(v)[5].comboTime = math.huge
											getupvalues(v)[5].comboLevel = 5
											getupvalues(v)[5].comboHealth = math.huge
										--getupvalues(v)[5].adminLevel = 13
											getupvalues(v)[5].comboXp = math.huge
											if tpBypass or getrenv()._G.VelCheck then
												getupvalues(v)[5].lastCF = CFrame.new(0, 10000, 0)
												wait(0.1)
											end
										else
											asd = 0
										end
									end)
								end
							end)
						end
					end
				end
			end
	
			for i, v in pairs(getreg()) do 
				if typeof(v) == "function" and not is_synapse_function(v)  and islclosure(v) and (not is_protected_closure(v))then
					for a, c in pairs(getupvalues(v)) do
						if typeof(c) == "table" then
							if c.adminLevel then 
								c.adminLevel = 13
							end
						end
					end
				end
			end
	
	
			local BypassTab = library:CreateTab("Bypass")
			local TrollTab = library:CreateTab("Troll")
	
			local ToggleAntiTp = BypassTab:AddSwitch("Anti-TP / Anti-Fly Bypass", function(state)
				tpBypass = state
			end)
			ToggleAntiTp:Set(tpBypass)

			local ToggleAutofarm = BypassTab:AddSwitch("Toggle Autofarm", function(state)
        		autofarm = state
				if state then
					ToggleAntiTp:Set(true)
					tpBypass = true
					game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.Anchored = true
				else
					game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.Anchored = false
				end
			end)
			ToggleAutofarm:Set(autofarm)

			local ToggleLegitAutofarm = BypassTab:AddSwitch("Toggle Legit Autofarm", function(state)
				legitAutofarm = state
			end)
			ToggleLegitAutofarm:Set(legitAutofarm)

			local ToggleMult = BypassTab:AddSwitch("Toggle Combo Multiplier", function(state)
				comboMult = state
				if comboMult then
					game.ReplicatedStorage.UpdateCombo:FireServer(5)
				else
					getsenv(game:GetService("Players").LocalPlayer.Backpack.Main).breakCombo()
				end
			end)
			ToggleMult:Set(comboMult)

			local sounds = false
			local spamsounds = TrollTab:AddSwitch("Spam Sounds", function(state)
				sounds = state
			end)
	
			local annoyServer = false
			local serverAnnoy = TrollTab:AddSwitch("Annoy Server", function(state)
				annoyServer = state
			end)
			local bypassLoud = TrollTab:AddButton("Bypass Loudness Check", function()
				local gmt = getrawmetatable(game)
				setreadonly(gmt, false) 
				local oldindex = gmt.__index
					gmt.__index = function(a,b)
						if tostring(b) == "PlaybackLoudness" and getfenv(2).script.Name == "RadioScript" then
							return 0
						else
							return oldindex(a,b)
						end
					end
				messagemodule.createMessage({
					text = "Successfully Bypassed Loudness Check", 
					colour = Color3.new(1, 0, 0),
					font = Enum.Font.Code
				});
			end)
	
			spawn(function()
				while true do
					if autofarm then
						getfenv().script = game:GetService("Players").LocalPlayer.Backpack.Main
				--local rand = Random.new():NextInteger(5,25)
						getsenv(game:GetService("Players").LocalPlayer.Backpack.Main).pointsAdd(400, "walljump", {
							walljumpDelta = 25
						})
						wait(1)
					end
					if sounds then
						getsenv(game:GetService("Players").LocalPlayer.Backpack.Main).playCharacterSound("Grapple", "leftarm")
						getsenv(game:GetService("Players").LocalPlayer.Backpack.Main).playCharacterSound("GrapplePull", "leftarm")
					end
					if annoyServer then
						for i, v in next, game:GetService("Players"):GetPlayers() do
							if v.Character and v.Character:FindFirstChild("HumanoidRootPart") and annoyServer then
								game.ReplicatedStorage.GrappleSoundEffect:FireServer(v.Character:FindFirstChild("HumanoidRootPart").Position)
							end
						end
					end
					wait()
				end
			end)
	
			local movesTable = {
				[1] = {400, "walljump", { walljumpDelta = 25 } },
				[2] = {20, "dropdown" },
				[3] = {10, "ledgegrab" },
				[4] = {12, "edgejump" },
				[5] = {24, "longjump" },
				[6] = {12, "vault" },
				[7] = {12, "springboard" }
			}
			local mainA = game:service'Players'.LocalPlayer.Backpack.Main
			local sEnv = getsenv(mainA);
			getfenv().script = mainA

			spawn(function()
				while true do
					if legitAutofarm then
						getfenv().script = game:GetService("Players").LocalPlayer.Backpack.Main
						local env = getsenv(game:GetService("Players").LocalPlayer.Backpack.Main)
						math.randomseed(tick())
						env.pointsAdd(unpack(movesTable[math.random(#movesTable)]))
					end
					wait(1)
				end
			end)

			spawn(function()
				while true do
					if legitAutofarm then
						sEnv.statAdd("DistanceTravelled", 1)
					end
					wait(0.1)
				end
			end)

		end
	end)
	
	popup.No.MouseButton1Click:connect(function()
		popup:Destroy()
	end)

elseif vesteria then

	local Tab = library:CreateTab("Vesteria")
	local Grab = {}
	local player = game:GetService("Players").LocalPlayer

	local AutoSell = true
	local AutoPickup = false
	local KillAuraM = false
	local GodMode = false
	local NoFog = false

	local mobs = workspace.placeFolders.entityManifestCollection

	local function attack(v)
		if v then       
			spawn(function()

				game:GetService("ReplicatedStorage").modules.network.playerRequest_damageEntity:FireServer(v, Vector3.new(0, 0, 0), "equipment")
			end)
		end
	end

	local function getClosestItem()
		local closestMag = math.huge
		local closestItem
		for i, v in next, workspace.placeFolders.items:GetChildren() do
			if v:FindFirstChild("owners") and v.owners:FindFirstChild(player.UserId) and (v.Position - player.Character.PrimaryPart.Position).magnitude < closestMag then
				closestMag = (v.Position - player.Character.PrimaryPart.Position).magnitude
				closestItem = v
			end
		end
		return closestItem
	end

	local function getClosestMob()
		local closestMob = nil;
		local closestMag = math.huge;
		
		for i,v in pairs(mobs:GetChildren()) do
			if v ~= nil and v:IsA("BasePart") and v:FindFirstChild("entityType") and v.entityType.Value == "monster" then
				local baseMag = (v.Position - game:service'Players'.LocalPlayer.Character.PrimaryPart.Position).magnitude
				if baseMag <= 50 and baseMag < closestMag then
					closestMag = baseMag
					closestMob = v
				end
			end
		end
		
		return closestMob
	end

	local killauramob = function(state)
		KillAuraM = state
		while KillAuraM do
			wait()
			attack(getClosestMob())
		end
	end

	local function openShop()
		game:GetService("ReplicatedStorage").modules.network.openShop:Invoke(game)
	end
	

	local function autoPickup(state)
		AutoPickup = state
		while AutoPickup do
			wait(0.2)
			local Item = getClosestItem()
			game:GetService("ReplicatedStorage").modules.network.pickUpItemRequest:InvokeServer(Item)

			if AutoSell then
				for i, v in next, game.ReplicatedStorage.itemData:GetChildren() do
					local item = require(v)
					--warn(item.category)
					if item.name == Item.Name and item.category == "miscellaneous" then
						game.ReplicatedStorage.modules.network["playerRequest_sellItemToShop"]:InvokeServer({
							["id"] = item.id,
							["position"] = 99
						}, 1)
					end
				end
			end
		end
	end

	game.Lighting.Changed:Connect(function()
		if NoFog then
			game.Lighting.FogEnd = 999999995904
		else
			game.Lighting.FogEnd = 1504
		end
	end)



	local function getAvailableTeleports()
		local teleportBricks = {}

		for i,v in pairs(workspace:GetChildren()) do
			if v.Name == "TeleportBrick" and v:FindFirstChild("teleportDestination") then
				teleportBricks[v] = game.MarketplaceService:GetProductInfo(v.teleportDestination.Value, Enum.InfoType.Asset)
			end
		end
		--print'------------------------'
		return teleportBricks
	end

	local function teleport(brick, DestinationValues)
		local network = game.ReplicatedStorage.modules.network
		network = require(network)
		network:invokeServer("playerRequest_useTeleporter", brick)
	end

	local godmode = function(state)
		GodMode = state
		getrenv()._G.GodMode = GodMode
	end

	local DamageRemote, old = game:GetService("ReplicatedStorage").modules.network.playerRequest_damageEntity
	old = hookfunction(DamageRemote.FireServer, function(self, ...)
		local Args = {
			...
		}
		local Method = Args[#Args]
		if self == DamageRemote and Args[3] == 'monster' and getrenv()._G.GodMode then
			return true
		end
		return old(self, ...)
	end)

	local AnimRemote, old = game:GetService("ReplicatedStorage").modules.network.replicatePlayerAnimationSequence
	old = hookfunction(AnimRemote.FireServer, function(self, ...)
		if self == AnimRemote then
			return true
		end
		return old(self, ...)
	end)


	local god_mode = Tab:AddSwitch("Godmode", godmode)
	local kill_aura_mob = Tab:AddSwitch("Mob Kill Aura", killauramob)
	local auto_pick = Tab:AddSwitch("Auto Pickup", autoPickup)
	local auto_sell = Tab:AddSwitch("  ^ Auto Sell", function(state) AutoSell = state end)
	local no_fog = Tab:AddSwitch("No Fog", function(state) NoFog = state end)
	local open_shop = Tab:AddButton("Open Shop", openShop)

	local Teleports = library:CreateTab("Teleports")
	for i,v in pairs(getAvailableTeleports()) do

		local Button = Teleports:AddButton(v.Name, function()
			teleport(i, v)
		end)

	end

	_G.AntiAfk = false
	local VirtualUser=game:service'VirtualUser'
	game:service'Players'.LocalPlayer.Idled:connect(function()
		if _G.AntiAfk then
			VirtualUser:CaptureController()
			VirtualUser:ClickButton2(Vector2.new())
		end
	end)

	_G.AntiAfkTab = Tab:AddSwitch("Anti AFK",function(state)
		_G.AntiAfk = state
	end)
elseif WildWest then

	local Tab = library:CreateTab("Wild West")
	
	local canTp = false
	local oreEspFont = 20
	local bp = nil
	local moddedGuns = false
	local canBreak = DefaultSettings["WildWest"]["BreakFree"]
	local alwyDay = DefaultSettings["WildWest"]["Always Day"]
	local noCooldown = DefaultSettings["WildWest"]["No Jump Cooldown"]
	local ModDemHorses = DefaultSettings["WildWest"]["Modded Horse"]
	local bypass = false
	local noSpread = DefaultSettings["WildWest"]["No Spread"]
	local noRecoil = DefaultSettings["WildWest"]["No Recoil"]
	local InstBullet = DefaultSettings["WildWest"]["Increased Fire Rate"]
	local InstReload = DefaultSettings["WildWest"]["Instant Reload"]
	local SilentAim = DefaultSettings["WildWest"]["Silent Aim"]
	local teamcheck = DefaultSettings["WildWest"]["Team Check"]
	local visible_check = DefaultSettings["WildWest"]["Visible Check"]
	local instRespawn = DefaultSettings["WildWest"]["Instant Respawn"]
	local instLasso = false
	local nofall = DefaultSettings["WildWest"]["Remove fall damage"]
	local norag = DefaultSettings["WildWest"]["Anti Ragdoll"]
	local nostam = DefaultSettings["WildWest"]["Inf Stamina"]

	spawn(function()
		while wait(40) do -- Autosave settings every 40 secs
			DefaultSettings["WildWest"]["BreakFree"] = canBreak
			DefaultSettings["WildWest"]["Always Day"] = alwyDay
			DefaultSettings["WildWest"]["No Jump Cooldown"] = noCooldown
			DefaultSettings["WildWest"]["Modded Horse"] = ModDemHorses
			DefaultSettings["WildWest"]["No Spread"] = noSpread
			DefaultSettings["WildWest"]["No Recoil"] = noRecoil
			DefaultSettings["WildWest"]["Increased Fire Rate"] = InstBullet
			DefaultSettings["WildWest"]["Instant Reload"] = InstReload
			DefaultSettings["WildWest"]["Silent Aim"] = SilentAim
			DefaultSettings["WildWest"]["Team Check"] = teamcheck
			DefaultSettings["WildWest"]["Visible Check"] = visible_check
			DefaultSettings["WildWest"]["Instant Respawn"] = instRespawn
			DefaultSettings["WildWest"]["Remove fall damage"] = nofall
			DefaultSettings["WildWest"]["Anti Ragdoll"] = norag
			DefaultSettings["WildWest"]["Inf Stamina"] = nostam
	
			DefaultSettings["UIColorSettings"]["GradientTwoEnabled"] = GradientTwoEnabled
			DefaultSettings["UIColorSettings"]["ColorGradient1"] = {ColorGradient1.r, ColorGradient1.g, ColorGradient1.b}
			DefaultSettings["UIColorSettings"]["ColorGradient2"] = {ColorGradient2.r, ColorGradient2.g, ColorGradient2.b}
	
			Save()
		end
	end)
	
	local Network = require(game:GetService("ReplicatedStorage").SharedModules.Global.Network)
	local UIHandler = require(game:GetService("ReplicatedStorage").Modules.UI.UIHandler)
	local SpawnUI = require(game:GetService("ReplicatedStorage").Modules.UI.SpawnUI)
	local SharedUtils = require(game:GetService("ReplicatedStorage").SharedModules.Utils.SharedUtils)
	local PlayerCharacter = require(game:GetService("ReplicatedStorage").Modules.Character.PlayerCharacter)
	local Utils = require(game:GetService("ReplicatedStorage").Modules.Utils.Utils)
	local WildLife = require(game:GetService("ReplicatedStorage").Modules.World["_WildLife"].WildLife)
	local GunItem = require(game:GetService("ReplicatedStorage").Modules.Character.Items.Types.GunItem)
	local LassoItem = require(game:GetService("ReplicatedStorage").Modules.Character.Items.Special.LassoItem)
	local InputHandler = require(game:GetService("ReplicatedStorage").Modules.System.Input.InputHandler)
	
	local Players = game:GetService('Players')
	local lplr = Players.LocalPlayer
	local Camera = workspace.CurrentCamera
	local IgnoreList = {}
	
	function SameTeam(P1, P2)
		if P1 == P2 then
			return false
		end
		pcall(function()
			if P1.TeamColor == P2.TeamColor and teamcheck then
				return true
			end
		end)
		return false
	end
	
	local function FireServer(...)
		return Network:FireServer(...)
	end
	local function IsAlive(char)
		if char and char:FindFirstChild("Head") and char.Head:FindFirstChild("PlayerInfo") then
			local health = char.Head.PlayerInfo.Screen.HealthContainer.HealthBar.HealthProgressFrame.Size.X.Scale
			if health == 0 then
				return false
			else
				return true
			end
		end
	end
	
	local function getclosestplayer()
		local closestThing = nil
		local shortestDistance = math.huge
		for i, v in pairs(game:GetService("Players"):GetPlayers()) do 
			if v ~= lplr and v.Character and v.Character:FindFirstChild("Head") and IsAlive(v.Character) then 
				local aimpart, seen = game:GetService("Workspace").CurrentCamera:WorldToScreenPoint(v.Character.Head.Position)
				if seen then
					local ignorelist = {lplr.Character}
					local castPoints = {v.Character.Head.Position}
					local hit = Camera:GetPartsObscuringTarget(castPoints, ignorelist)
					local isHit = false
					for i2,v2 in pairs(hit) do
						if not v2:IsDescendantOf(v.Character) then
							isHit = true
						end
					end
					if isHit == false then
						local magnitudee = (Vector2.new(aimpart.X, aimpart.Y) - Vector2.new(mouse.X, mouse.Y)).magnitude
						if magnitudee < shortestDistance then
							shortestDistance = magnitudee
							closestThing = v
						end
					end
				end
			end
		end
		return closestThing
	end
	
	local oldUtilsMouseHit = Utils.GetMouseHit
	Utils.GetMouseHit = function(...) 
		if SilentAim then
			local nearest = getclosestplayer()
			wait()
			if nearest and nearest.Character then
				if nearest.Character:FindFirstChild("Head") then
					return nearest.Character.Head.Position
				end
			end
		end
	
		return oldUtilsMouseHit(...)
	end
	
	local old
	old = UIHandler.SetActionBindActive
	UIHandler.SetActionBindActive = function(a,b,c)
		if tostring(b) == "Respawn" and c == true and instRespawn then
			spawn(function()
				wait(0.5)
				SpawnUI:Open(true)
			end)
		--[[elseif tostring(b) == "BreakFree" and c == true and canBreak then
			wait(0.1)
			FireServer('AttemptBreakFree')--]]
		end
		return old(a,b,c)
	end
	
	local old = LassoItem.Update
	LassoItem.Update = function(a)
		a.SwingPower = 1
		a.ChargeTime = 0
		return old(a)
	end
	
	local Stamina = PlayerCharacter.LowerStamina
	PlayerCharacter.LowerStamina = function(a,b)
		if b == 20 then
			if nostam then
				return wait(9e9)
			end
			if noCooldown then
				return wait(9e9)
			end
		elseif nostam or noCooldown then
			return wait(9e9)
		else
			return Stamina(a,b)
		end
	end
	
	local togSelf = PlayerCharacter.ToggleSelfRagdoll
	local oldRag = PlayerCharacter.Ragdoll
	
	--// tp bypass
	--[[local gamememe = getrawmetatable(game)
	local Closure,Caller = hide_me or newcclosure,checkcaller or is_protosmasher_caller or Cer.isCerus
	local writeable = setreadonly or make_writeable
	local name,index,nindex = gamememe.__namecall,gamememe.__index,gamememe.__newindex
	writeable(gamememe,false)
	
	gamememe.__newindex = Closure(function(self,Property,b)
		if not Caller() then
			if bypass then
				if self:IsA'Humanoid' then 
					if Property == "Health" or Property == "JumpPower" or Property == "HipHeight"  then 
						return 
					end
				end
				if Property == "CFrame" and self.Name == "HumanoidRootPart" and self:IsDescendantOf(game.Players.LocalPlayer.Character) then
					return 
				end
			end
		end
		return nindex(self,Property,b)
	end)
	
	local TpBypass = Tab:AddSwitch("Anti-Tp Bypass",function(state)
		bypass = state
	end)]]
	
	--// end of tp bypass
	
	lastPos = nil
	local mineHook = Network.FireServer
	Network.FireServer = function(...)
		local args = {...}
		if nofall and args[2] == 'DamageSelf' then
			return;
		end
		return mineHook(unpack(args))
	end
	
	local old = WildLife.GetControllingAnimals
	WildLife.GetControllingAnimals = function(a)
		local result = old(a)
		if typeof(result[1]) == "table" and ModDemHorses then
			if bypass then
				result[1].MaxSpeed = 400
				result[1].StaminaValue = 100
				result[1].MaxBoosts = 100
				result[1].SprintingSpeed = 400
				result[1].TrottingSpeed = 400
				result[1].Boosts = 100
				result[1].WalkSpeed = 0
				result[1].WalkingSpeed = 20
			else
				result[1].MaxSpeed = 50
				result[1].StaminaValue = 100
				result[1].MaxBoosts = 100
				result[1].SprintingSpeed = 50
				result[1].TrottingSpeed = 20
				result[1].Boosts = 100
				result[1].WalkSpeed = 0
				result[1].WalkingSpeed = 20			
			end
		end
		return result
	end
	
	--[[local ClickTp = Tab:AddSwitch("Click-TP [Q]",function(state)
		canTp = state
	end)]]
	canTp = false

	local old2 = GunItem.GetShootAnim
	GunItem.GetShootAnim = function(a,b)
		if instBullet then
			a.SharedData.FireSpeed = a.SharedData.FireSpeed + 10
		end
		return old2(a,b)
	end
	local old3 = GunItem.Shoot
	GunItem.Shoot = function(table)
		if noSpread then
			table.SharedData.ProjectileAccuracy = 30000
		end
		if noRecoil then
		table.SharedData.BaseRecoil = 0
		end
		return old3(table)
	end
	local old = GunItem.Load
	GunItem.Load = function(table)
		if InstReload then
			table.SharedData.LoadSpeed = 20
			table.SharedData.LoadEndSpeed = 300
		end
		return old(table)
	end
	
	local BreakFree = Tab:AddSwitch("BreakFree *Keybind* [G]",function(state)
		canBreak = state
	end)
	BreakFree:Set(canBreak)

	mouse.KeyDown:Connect(function(k)
		if k:lower() == 'q' and canTp then
			local char = lplr.Character
			hum = char:FindFirstChild("HumanoidRootPart")
	
			if mouse.Hit.p ~= nil then
				hum.CFrame = CFrame.new(mouse.Hit.p)
			end
		elseif k:lower() == 'g' and canBreak then
			FireServer('AttemptBreakFree')
		end
	end)
	
	local alwDay = Tab:AddSwitch("Always Day",function(state)
		alwyDay = state
	end)
	alwDay:Set(alwyDay)

	local nf = Tab:AddSwitch("Remove fall damage",function(state)
		nofall = state
	end)
	nf:Set(nofall)

	local nr = Tab:AddSwitch("Anti Ragdoll",function(state)
		norag = state
		if state then
			PlayerCharacter.ToggleSelfRagdoll = function() end
			PlayerCharacter.Ragdoll = function() end
		else
			PlayerCharacter.ToggleSelfRagdoll = togSelf
			PlayerCharacter.Ragdoll = oldRag
		end
	end)
	nr:Set(norag)
	
	local ns = Tab:AddSwitch("Inf Stamina",function(state)
		nostam = state
	end)
	ns:Set(nostam)

	local ns = Tab:AddSwitch("No Jump Cooldown",function(state)
		noCooldown = state
	end)
	ns:Set(noCooldown)
	
	local mh = Tab:AddSwitch("Modded Horse",function(state)
		ModDemHorses = state
	end)
	mh:Set(ModDemHorses)
	
	local lmao = Tab:AddSwitch("Instant Respawn",function(state)
		instRespawn = state
	end)
	lmao:Set(instRespawn)

	
	--[[local lmao = Tab:AddSwitch("No Lasso Charge",function(state)
		instLasso = state
	end)]]
	
	local gTab = library:CreateTab("Gun Mods")
	
	local nsprd = gTab:AddSwitch("No Spread",function(state)
		noSpread = state
	end)
	nsprd:Set(noSpread)
	
	local nrcl = gTab:AddSwitch("No Recoil",function(state)
		noRecoil = state
	end)
	nrcl:Set(noRecoil)
	local nsprd = gTab:AddSwitch("Instant Reload",function(state)
		InstReload = state
	end)
	nsprd:Set(InstReload)
	
	local increase = gTab:AddSwitch("Increased Fire Rate",function(state)
		InstBullet = state
	end)
	increase:Set(InstBullet)
	
	local sTab = library:CreateTab("Silent Aim Settings")
	
	local sAim = sTab:AddSwitch("Silent Aim",function(state)
		SilentAim = state
	end)
	sAim:Set(SilentAim)
	
	local tCheck = sTab:AddSwitch("Team Check",function(state)
		teamcheck = state
	end)
	tCheck:Set(teamcheck)
	
	local vCheck = sTab:AddSwitch("Visible Check",function(state)
		visible_check = state
	end)
	vCheck:Set(visible_check)
	
	game.Lighting.Changed:connect(function()
		if alwyDay then
			game.Lighting.ClockTime = 12
		end
	end)
	
	local ores = workspace["WORKSPACE_Interactables"].Mining.OreDeposits
	
	local canEsp = {
		["Gold"] = false,
		["Zinc"] = false,
		["Iron"] = false,
		["Copper"] = false,
		["Coal"] = false,
		["Silver"] = false,
	}
	
	local eTab = library:CreateTab("Ore Esp")
	
	local gld = eTab:AddSwitch("Gold",function(state)
		canEsp["Gold"] = state
	end)
	local gld = eTab:AddSwitch("Zinc",function(state)
		canEsp["Zinc"] = state
	end)
	local gld = eTab:AddSwitch("Iron",function(state)
		canEsp["Iron"] = state
	end)
	local gld = eTab:AddSwitch("Copper",function(state)
		canEsp["Copper"] = state
	end)
	local gld = eTab:AddSwitch("Coal",function(state)
		canEsp["Coal"] = state
	end)
	local gld = eTab:AddSwitch("Silver",function(state)
		canEsp["Silver"] = state
	end)
	local sld = eTab:AddSlider("ESP Font Size", 20, 35, function(x)
		oreEspFont = x
	end)
	
	spawn(function()
		while true do
			for i,v in pairs(ores:GetDescendants()) do
				if v.Name == "DepositInfo" and v.OreRemaining.Value > 0 then
					local v = v.Parent.PrimaryPart
					local name = v.Parent.Parent.Name
					if canEsp[name] == true then
						local lol = v:FindFirstChild("BillboardGui") or Instance.new("BillboardGui", v)
						local txt = lol:FindFirstChild("TextLabel") or Instance.new("TextLabel", lol)
						
						lol.AlwaysOnTop = true
						lol.Enabled = true
						lol.MaxDistance = math.huge
						lol.Size = UDim2.new(0, 100, 0, 20)
				
						txt.Text = name
						txt.BackgroundTransparency = 1
						txt.Position = UDim2.new(0, 0, -0.9, 0)
						txt.Size = UDim2.new(1, 0, 0, oreEspFont)
						txt.Font = Enum.Font.SourceSansLight
						txt.TextScaled = true
						txt.TextStrokeTransparency = 0.6
				
						lol.Parent = v
					
					if name == "Gold" then
						txt.TextColor3 = Color3.fromRGB(255, 255, 0)
					elseif name == "Zinc" then
						txt.TextColor3 = Color3.fromRGB(0, 150, 200)
					elseif name == "Copper" then
						txt.TextColor3 = Color3.fromRGB(255, 100, 0)
					elseif name == "Coal" then
						txt.TextColor3 = Color3.fromRGB(34, 34, 34)
					elseif name == "Silver" then
						txt.TextColor3 = Color3.fromRGB(255, 255, 255)
					elseif name == "Iron" then
						txt.TextColor3 = Color3.fromRGB(255, 100, 100)
					end
				elseif canEsp[name] == false then
					if v:FindFirstChild("BillboardGui") then
						v:FindFirstChild("BillboardGui"):Destroy()
					end
				end
			elseif v.Name == "DepositInfo" and v.OreRemaining.Value <= 0 then
				local v = v.Parent.PrimaryPart
				if v:FindFirstChild("BillboardGui") then
					v:FindFirstChild("BillboardGui"):Destroy()
				end
			end
		end
		wait(.1)
		end
	end)
	
	
	-- ESP --
	
	
	--[[local plr = game:GetService("Players")
	local ws = game:GetService("Workspace")
	local lplr = plr.LocalPlayer
	local esp = {}
	local name = false
	local dist = false
	local health = false
	local team = false
	
	local function pos2d(obj)
		return game:GetService("Workspace").CurrentCamera:WorldToViewportPoint(obj)
	end
	
	local function newsquare()
		local square = Drawing.new('Square');
		square.Visible = true
		square.Thickness = 2;
		square.Filled = false
		square.Transparency = 0.5
		square.Color = Color3.new(1, 0, 0)
		return square
	end
	
	local function newtext()
		local text = Drawing.new('Text')
		text.Visible = true
		text.Center = true
		text.Size = 18
		text.Color = Color3.new(255,255,255)
		text.Outline = true
		return text
	end
	
	local function add(chr)
		local waity = ws["WORKSPACE_Entities"].Players:WaitForChild(chr.Name)
		local waits = chr:WaitForChild("HumanoidRootPart")
		if waits and esp[chr] == nil then
			if team then
				if lplayer and v.Parent.TeamColor ~= lplr.LocalPlayer.TeamColor then
					esp[chr] = {newsquare(), newtext(), newtext(), newtext()}
				end
			else
				esp[chr] = {newsquare(), newtext(), newtext(), newtext()}
			end
		end
	end
	
	local function remove(chr)
		if esp[chr] ~= nil then
			esp[chr][1]:Remove()
			esp[chr][2]:Remove()
			esp[chr][3]:Remove()
			esp[chr][4]:Remove()
			esp[chr] = nil
		end
	end
	
	local function update()
		for i, v in pairs(esp) do
			if i and i:FindFirstChild("HumanoidRootPart") and i.Parent ~= nil then
				local current, see = pos2d(i.HumanoidRootPart.Position)
				local current2 = pos2d(i.Head.Position)
				local current3 = pos2d(i.RightFoot.Position)
				v[1].Size = Vector2.new(2350/current.Z, current2.Y - current3.Y)
				v[1].Position = Vector2.new(current.X - v[1].Size.X / 2, current.Y - v[1].Size.Y / 2)
				v[1].Visible = see
				if name then
					v[2].Position = Vector2.new(current.X, current2.Y-30)
					v[2].Text = i.Name
					v[2].Visible = see
				else
					v[2].Visible = false
				end
				if health then
					v[3].Position = Vector2.new(current.X-20, current2.Y+25)
					v[3].Visible = see
					v[3].Text = "[" .. math.floor(i:FindFirstChild("Humanoid").Health.Value + 0.5) .. "/" ..  i:FindFirstChild("Humanoid").MaxHealth.Value .. "]"
				else
					v[3].Visible = false
				end
				if dist then
					v[4].Position = Vector2.new(current.X+20, current2.Y+25)
					v[4].Visible = see
					v[4].Text = "[" .. math.floor((i.HumanoidRootPart.Position - ws.CurrentCamera.CFrame.Position).magnitude) .. "]"
				else
					v[4].Visible = false
				end
			end
		end
	end
	local con
	local con2
	local con3
	
	local espT = library:CreateTab("ESP")
	
	local shdsts1 = espT:AddSwitch("Enabled",function(state)
		if state then
			for i, v in pairs(ws["WORKSPACE_Entities"].Players:GetChildren()) do
				if v ~= lplr.Character then
					add(v)
				end
			end
			con = ws["WORKSPACE_Entities"].Players.ChildAdded:Connect(add)
			con2 = ws["WORKSPACE_Entities"].Players.ChildRemoved:Connect(remove)
			con3 = game:GetService('RunService').RenderStepped:Connect(update)
		else
			for i, v in pairs(esp) do
				remove(i)
			end
			con:Disconnect()
			con2:Disconnect()
			con3:Disconnect()
			con = nil
			con2 = nil
			con3 = nil
		end
	end)
	
	local shdsts2 = espT:AddSwitch("Show Name",function(state)
		name = state
	end)
	
	local shdsts3 = espT:AddSwitch("Team Check",function(state)
		team = state
	end)
	
	local trcrs = espT:AddSwitch("Show Distance",function(state)
		dist = state
	end)
	
	local bxout = espT:AddSwitch("Show Health",function(state)
		health = state
	end)--]]
elseif Wzero then

	local plr = game:GetService("Players").LocalPlayer
    local killAura = DefaultSettings["Wzero"]["Kill Aura"]
	local autoFarm = DefaultSettings["Wzero"]["Autofarm"]
	local antiDeath = DefaultSettings["Wzero"]["anti-death"]

	spawn(function()
		while wait(40) do -- Autosave settings every 40 secs
			DefaultSettings["Wzero"]["Kill Aura"] = killAura
			DefaultSettings["Wzero"]["Autofarm"] = autoFarm
			DefaultSettings["Wzero"]["anti-death"] = antiDeath
	
			DefaultSettings["UIColorSettings"]["GradientTwoEnabled"] = GradientTwoEnabled
			DefaultSettings["UIColorSettings"]["ColorGradient1"] = {ColorGradient1.r, ColorGradient1.g, ColorGradient1.b}
			DefaultSettings["UIColorSettings"]["ColorGradient2"] = {ColorGradient2.r, ColorGradient2.g, ColorGradient2.b}
	
			Save()
		end
	end)

    local skills = {}
    local mobs = workspace.Mobs
    local class = game.ReplicatedStorage.Profiles[plr.Name].Class.Value
    local remote = require(game.ReplicatedStorage.Shared.Combat)
    if class == "Swordmaster" then
		for i=1,6 do
			table.insert(skills, "Swordmaster" .. i)
		end
		for i=1,3 do
			table.insert(skills, "CrescentStrike" .. i)
		end
		table.insert(skills, "Leap")
	elseif class == "Mage" then
		table.insert(skills, "Mage1")
		table.insert(skills, "ArcaneBlastAOE")
		table.insert(skills, "ArcaneBlast")
		for i=1,9 do
			table.insert(skills, "ArcaneWave" .. i)
		end
	elseif class == "Defender" then
		for i=1,5 do
			table.insert(skills, "Defender" .. i)
		end
		table.insert(skills, "Groundbreaker")
		for i=1,5 do
			table.insert(skills, "Spin" .. i)
		end
	elseif class == "DualWielder" then
		for i=1,10 do
			table.insert(skills, "DualWield" .. i)
		end
		table.insert(skills, "DashStrike")
		for i=1,4 do
			table.insert(skills, "CrossSlash" .. i)
		end
	elseif class == "IcefireMage" then
		table.insert(skills, "IcefireMage1")
		for i=1,4 do
			table.insert(skills, "IcySpikes" .. i)
		end
		table.insert(skills, "IcefireMageFireballBlast")
		table.insert(skills, "IcefireMageFireball")
		for i=1,5 do
			table.insert(skills, "LightningStrike" .. i)
		end
		table.insert(skills, "IcefireMageUltimateFrost")
		table.insert(skills, "IcefireMageUltimateMeteor1")
	elseif class == "MageOfLight" then
		table.insert(skills, "MageOfLight")
		table.insert(skills, "MageOfLightBlast")
	elseif class == 'Guardian' then
		for i = 1, 13 do
			table.insert(skills, 'SlashFury' .. i)
		end
		for i = 1, 3 do
			table.insert(skills, 'RockSpikes' .. i)
		end
		for i = 1, 4 do
			table.insert(skills, 'Guardian' .. i)
		end
	elseif class == 'Berserker' then
		for i = 1, 6 do
			table.insert(skills, 'Berserker' .. i)
		end
		table.insert(skills, 'AggroSlam')
		for i = 1, 8 do
			table.insert(skills, 'GigaSpin' .. i)
		end
		for i = 1, 2 do
			table.insert(skills, 'Fissure' .. i)
		end
		for i = 1, 5 do
			table.insert(skills, 'FissureErupt' .. i)
		end
	elseif class == 'Paladin' then
		for i = 1, 4 do
			table.insert(skills, 'Paladin' .. i)
		end
		for i = 1, 2 do
			table.insert(skills, 'LightThrust' .. i)
			table.insert(skills, 'LightPaladin' .. i)
		end
	elseif class == 'Demon' then
		for i = 1, 6 do
			table.insert(skills, 'DemonDPS' .. i)
		end
	end
    local isBoss = false
    local waitCD = false
    mobs.ChildRemoved:Connect(function(v)
        if v.Name:lower():find("boss") then
            for i = 1,10 do wait()
                isBoss = false
            end
        end
    end)

    local function getClosestMobs(autoF)
		local Mobs = {}
		local lastMag = 9e999

        for i,v in pairs(mobs:GetChildren()) do
            local mobbos = mobs:GetChildren()
            if #mobbos > 1 and v.Name:lower():find("boss") and isBoss == false then
                isBoss = true
            elseif #mobbos == 1 and v.Name:lower():find("boss") then
                isBoss = false
            elseif #mobbos <= 0 then
                isBoss = false
            end

            local function dokill()
                local prime = v.PrimaryPart
                local root = plr.Character.PrimaryPart
                local mag = (prime.Position - root.Position).magnitude
				if autoF then
					if mag < lastMag and v.HealthProperties.Health.Value > 0 then
						Mobs[1] = v
						lastMag = mag
					end
				else
					if mag < 60 and v.HealthProperties.Health.Value > 0 then
						table.insert(Mobs, v)
					end
				end
            end

            if isBoss then
                if not v.Name:lower():find("boss") then
                    dokill()
                end
            else
                dokill()
            end
		end
		
		for i,v in pairs(workspace:GetChildren()) do
			if v:FindFirstChild("HealthProperties") and v.HealthProperties.Health.Value > 0 and not autoF then
				table.insert(Mobs, v)
			end
		end
        return Mobs
    end
    local skill = ""
    local last = skill
    local cMob = nil

    local Tab = library:CreateTab("World // Zero")

    local killa = Tab:AddSwitch("Kill Aura",function(state)
        killAura = state
	end)
	killa:Set(killAura)

    local autof = Tab:AddSwitch("Autofarm",function(state)
        autoFarm = state
        if autoFarm then
            for i,v in pairs(workspace:GetDescendants()) do
                if v:FindFirstChildOfClass("TouchTransmitter") and v.Parent.Parent.Name ~= "Darts" and v.Parent.Parent.Name ~= "Hammer" then
                    wait()
					if v.Parent:IsA("BasePart") then
						v.Parent.CanCollide = false
						v.Parent.Anchored = true
						v.Parent.Transparency = 1
						v.Parent.CFrame = plr.Character.LowerTorso.CFrame
						
					elseif v.Parent:IsA("Model") then
						if v.Parent.PrimaryPart then
							v.Parent.PrimaryPart.CanCollide = false
							v.Parent.PrimaryPart.Anchored = true
							v.Parent.PrimaryPart.Transparency = 1
							v.Parent.PrimaryPart.CFrame = plr.Character.LowerTorso.CFrame
						end
					end

                end
            end
        end
	end)
	autof:Set(autoFarm)

	--[[local antid = Tab:AddSwitch("anti-death",function(state)
        antiDeath = state
	end)
	antid:Set(antiDeath)]]

	--[[local gdmod = Tab:AddSwitch("Godmode (buggy)",function(state)
		pcall(function()
			game.Players.LocalPlayer.Character.HealthProperties.LastAttacker.Parent = nil
		end)
	end)]]

	local lowHP = nil
    if workspace:FindFirstChild("MissionObjects") then
        workspace.DescendantAdded:Connect(function(v)
			if autoFarm and v:IsA("TouchTransmitter") and v.Parent.Parent.Name ~= "Darts" and v.Parent.Parent.Name ~= "Hammer" then
				--warn(v.Parent.Parent.Name)
				if v.Parent:IsA("BasePart") then
					v.Parent.CanCollide = false
					v.Parent.Anchored = true
					v.Parent.Transparency = 1
					v.Parent.CFrame = plr.Character.LowerTorso.CFrame

				elseif v.Parent:IsA("Model") then
					if v.Parent.PrimaryPart then
						v.Parent.PrimaryPart.CanCollide = false
						v.Parent.PrimaryPart.Anchored = true
						v.Parent.PrimaryPart.Transparency = 1
						v.Parent.PrimaryPart.CFrame = plr.Character.LowerTorso.CFrame
					end
				end

            end
        end)

        repeat wait() until workspace.MissionObjects:FindFirstChild("MissionStart") == nil
	end

    local last = 1
    game:GetService'RunService'.RenderStepped:Connect(function()
		if autoFarm then
			if plr.Character and plr.Character:FindFirstChild("HealthProperties") and plr.Character.HealthProperties:FindFirstChild("Health") and plr.Character.HealthProperties:findFirstChild("MaxHealth") then
				if plr.Character.HealthProperties.Health.Value <= plr.Character.HealthProperties.MaxHealth.Value * 0.50 and lowHP == nil then
					lowHP = true
				elseif lowHP == true and plr.Character.HealthProperties.Health.Value >= plr.Character.HealthProperties.MaxHealth.Value * 0.80 then
					lowHP = nil
				end
			end
			if antiDeath and lowHP then
				if plr.Character.Collider:FindFirstChild("BodyVelocity") then
					local SpawnPart = workspace.MissionObjects.Spawn
					plr.Character.Collider.BodyVelocity.MaxForce = Vector3.new(math.huge, math.huge, math.huge)
					plr.Character.Collider.CFrame = SpawnPart.CFrame
					plr.Character.LowerTorso.CFrame = SpawnPart.CFrame
				end
			else
				if not antiDeath then lowHP = nil end
				if #mobs:GetChildren() <= 0 then
					isBoss = false
				end
				if cMob == nil or (cMob:FindFirstChild("HealthProperties") and cMob:FindFirstChild("HealthProperties"):FindFirstChild("Health") and cMob.HealthProperties.Health.Value <= 0) then
					if #mobs:GetChildren() ~= 0 and isBoss == false then
						cMob = getClosestMobs(true)[1]
						if cMob ~= nil and cMob.PrimaryPart ~= nil then
							if cMob.HealthProperties.Health.Value <= 0 then
								cMob = nil
							end
						else
							cMob = nil
						end
					elseif #mobs:GetChildren() > 1 and isBoss then
						cMob = getClosestMobs(true)[1]
						if cMob ~= nil and cMob.PrimaryPart ~= nil then
							if not cMob.Name:lower():find("boss") then
								if cMob.HealthProperties.Health.Value <= 0 then
									cMob = nil
								end
							else
								cMob = nil
							end
						else
							cMob = nil
						end
					end
				elseif cMob ~= nil and cMob.PrimaryPart ~= nil then
					if plr.Character.Collider:FindFirstChild("BodyVelocity") then
						plr.Character.Collider.BodyVelocity.MaxForce = Vector3.new(math.huge, math.huge, math.huge)
						plr.Character.Collider.CFrame = cMob.PrimaryPart.CFrame * CFrame.new(0,15,0)
						plr.Character.LowerTorso.CFrame = cMob.PrimaryPart.CFrame * CFrame.new(0,15,0)
						if cMob == nil or cMob.Parent ~= mobs then
							cMob = nil
							plr.Character.Collider.BodyVelocity.MaxForce = Vector3.new(math.huge, 0, math.huge)
						end
					end
				end
			end
        end
	end)
	
	spawn(function()
		while wait(.01) do
			if killAura or autoFarm then
				local mobs = getClosestMobs()
				if type(mobs) == 'table' and #mobs > 0 and mobs[1] ~= nil and mobs[1].PrimaryPart ~= nil then
					skill = skills[last]
					last = last + 1
					if last == #skills+1 then
						last = 1
					end
					remote:AttackTargets(mobs, {mobs[1].PrimaryPart.Position}, skill)
				end
			elseif not autoFarm then
				pcall(function()
					plr.Character.Collider.BodyVelocity.MaxForce = Vector3.new(25000, 0, 25000)
					plr.Character.Collider.BodyVelocity.P = 2500
				end)
			end
		end
	end)

elseif advup then
	repeat wait() until workspace.CurrentCamera:FindFirstChild("LoadingBlur")
	repeat wait() until workspace.CurrentCamera:FindFirstChild("LoadingBlur").Size == 0
	wait(2)
	local Tab = library:CreateTab("Adventure Up")

	local gc = getgc()
	local sc
	local trees
	local ores
	local gtype = "Dungeon"

	for i,v in pairs(gc) do
		if type(v) == 'function' and islclosure(v) and (not is_protected_closure(v)) and sc == nil then
			if getfenv(v).script and getfenv(v).script.Name == "Woodcutting" and getfenv(v).script.ClassName == "ModuleScript" then
				sc = getfenv(v).script
			end
		end
	end

	local ap = getupvalues(require(sc))[1]
	local invoke = ap.Send
	local old

	function sellItem(name)
		local sellt = game:GetService("Players").LocalPlayer.PlayerGui.Menu.Inventory.Container.Items
		for i,v in pairs(sellt:children'') do
			if v:IsA("Frame") and v.Visible then
				if v.ItemViewport:FindFirstChild("ItemModelLast") then
					if v.ItemViewport.ItemModelLast.Value == name then
						warn(ap:Invoke("Shops/GeneralShop/Sell", {v.Name}))
					end
				end
			end
		end
	end

	---sellItem("Basic Wand")
	
	--// Hook the Remotes
	--[[old = hookfunction(ap.Send, function(self, ...)
		local args = {...}
		wait()
		if args[1] ~= "Network/Ping" and args[1] ~= "Character/Headtracking" then
			for i,v in pairs(args) do
				print(i.."  "..tostring(v))
			end
			print'----------'
		end
		return old(self, ...)
	end)]]

	if workspace:FindFirstChild("Booster") then
		gtype = "Explore"
	elseif workspace:FindFirstChild("Daily Reward") then
		gtype = "Hub"
	elseif workspace:FindFirstChild("Chests") then
		gtype = "Dungeon"
	end

	if gtype == "Explore" then
		local autoWood = false
		local autoMine = false
		local hide = false
		
		for i,v in pairs(workspace:children'') do
			if not trees and v:findFirstChildOfClass("Model") then
				if v:findFirstChildOfClass("Model"):findFirstChild("Stump") then
					trees = v
				end
			end
		end
		for i,v in pairs(workspace:children'') do
			if not ores and v:findFirstChildOfClass("Model") then
				if v:findFirstChildOfClass("Model"):findFirstChild("Ore") then
					ores = v
				end
			end
		end
		local lastT
		function getTree()
			local tree
			for i,v in pairs(trees:GetChildren()) do
				if not tree and v.Tree:FindFirstChildOfClass("MeshPart").Transparency == 0 then
					if v.Tree:FindFirstChildOfClass("MeshPart") then
						local tr = v.Tree:FindFirstChildOfClass("MeshPart")
						if (tr.Position - game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.Position).magnitude < 100 then
							if lastT == nil or (tr.Position - game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.Position).magnitude < (lastT.Tree:FindFirstChildOfClass("MeshPart").Position - game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.Position).magnitude then
								tree = v
								lastT = tree
							elseif tree == nil then
								tree = v
							end
						end
					end
				end
			end
			return tree
		end
		function getOre()
			local ore
			for i,v in pairs(ores:GetChildren()) do
				if not ore and v.Ore.localTransparencyModifier == 0 then
					local tr = v.Ore
					if (tr.Position - game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.Position).magnitude < 100 then
						ore = v
					end
				end
			end
			return ore
		end

		if _G.part2 == nil then
			local part = Instance.new("Part", workspace)
			part.Anchored = true
			part.CanCollide = true
			part.Size = Vector3.new(50,1,50)
			part.CFrame = CFrame.new(500,500,0)
			_G.part2 = part
		end

		local mod = require(game.ReplicatedFirst.ClientModules.Interactions)
		function chop()
			spawn(function()
				--ap:Send("Professions/Woodcutting/Start", getTree())
				mod:Interact()
			end)
		end
		function mine(ore)
			warn'mining'
			spawn(function()
				mod:Interact()
			end)
		end
		local player = game:GetService("Players").LocalPlayer
		local tpbypass = function()
			local p = 1100
			local d = 500
			local a = Instance.new("Part", player.Character)
			a.CanCollide = false
			a.CFrame = player.Character.HumanoidRootPart.CFrame
			player.Character.HumanoidRootPart.CFrame = player.Character.HumanoidRootPart.CFrame
			player.Character.HumanoidRootPart.CanCollide = false
			a.Name = "Floatation :flushed:"
			a.Transparency = 1
			local weld = Instance.new("Weld", a)
			weld.Part0 = a
			weld.Part1 = player.Character.HumanoidRootPart
			BP = Instance.new("BodyPosition", a)
			BP.MaxForce = Vector3.new(math.huge, math.huge, math.huge)
			BP.P = p
			BP.D = d
		end

		local Clip = true
		local function NoclipLoop()
			spawn(function()
				if autoWood then
					chop()
				end
				if workspace.CurrentCamera:FindFirstChild("EffectBlur") then
					if workspace.CurrentCamera:FindFirstChild("EffectBlur").Size ~= 0 then
						--game:GetService("Players").LocalPlayer:Kick("Anti cheat triggered, please report to #bugs.")
					end
				end
			end)
			if Clip == false and game:GetService("Players").LocalPlayer.Character ~= nil then
				for _, child in pairs(game:GetService("Players").LocalPlayer.Character:GetDescendants()) do
					if child:IsA("BasePart") and child.CanCollide == true then
						child.CanCollide = false
					end
				end
			end
		end
		Noclipping = game:GetService('RunService').Stepped:connect(NoclipLoop)
		local dcd = false
		local function tpItem(pos)
			if not dcd then
				dcd = true
				ap:Send("Abilities/Use", "Dash")
				spawn(function()
					wait(5.5)
					dcd = false
				end)
			end
		end
		spawn(function()
			while wait() do
				if autoMine then
					local ore = getOre()
					if ore ~= nil and ore:FindFirstChild("Ore") then
						if ore.Ore.localTransparencyModifier == 0 then
							spawn(function()
								repeat wait() until (player.Character.HumanoidRootPart.Position - ore.PrimaryPart.Position).magnitude < 10 or hide == false
								mine(ore)
							end)
							repeat 
								wait() 
								if hide then
									if not player.Character:FindFirstChild("Floatation :flushed:") then
										tpbypass()
									elseif player.Character:FindFirstChild("Floatation :flushed:") then
										if player.Character.UpperTorso.CanCollide == true then
											Clip = false
										end
										workspace.CurrentCamera.CameraSubject = ore.PrimaryPart
										BP = player.Character:FindFirstChild("Floatation :flushed:").BodyPosition
										player.Character.HumanoidRootPart.CFrame = CFrame.new(player.Character.HumanoidRootPart.Position) * CFrame.Angles(math.rad(90),0,0)
										if not dcd then
											tpItem(ore.PrimaryPart.Position + Vector3.new(0,-9,0))
											wait(.5)
											BP.Position = ore.PrimaryPart.Position + Vector3.new(0,-9,0)
										end
									--game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = ore.PrimaryPart.CFrame * CFrame.new(0,-5,0)
									end
								else
									workspace.CurrentCamera.CameraSubject = player.Character.Humanoid
								end
							until 
								ore.Ore.localTransparencyModifier == 1 or autoMine == false or ore == nil
						end
					end
				end
				if autoWood then
					local tree = getTree()
					if tree ~= nil and tree:WaitForChild("Tree",40) and tree.Tree:FindFirstChildOfClass("MeshPart").Transparency == 0 and tree.Stump:FindFirstChildOfClass("MeshPart") then
						warn'GotTree'
						spawn(function()
							if hide then
								repeat wait() until (player.Character.HumanoidRootPart.Position - tree.Stump:FindFirstChildOfClass("MeshPart").Position).magnitude < 10 or hide == false
								chop(tree)
							else
								chop(tree)
							end
						end)
						repeat 
							wait() 
							if hide then
								if not player.Character:FindFirstChild("Floatation :flushed:") then
									tpbypass()
								elseif player.Character:FindFirstChild("Floatation :flushed:") then
									if player.Character.UpperTorso.CanCollide == true then
										Clip = false
									end
									--workspace.CurrentCamera.CameraSubject = tree.Stump:FindFirstChildOfClass("MeshPart")
									player.Character.HumanoidRootPart.CFrame = CFrame.new(player.Character.HumanoidRootPart.Position) * CFrame.Angles(math.rad(90),0,0)
									BP = player.Character:FindFirstChild("Floatation :flushed:").BodyPosition
									if not dcd then
										tpItem(tree.Stump:FindFirstChildOfClass("MeshPart").Position + Vector3.new(0,-9,0))
										wait(.5)
										BP.Position = tree.Stump:FindFirstChildOfClass("MeshPart").Position + Vector3.new(0,-9,0)
									end
								--game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = ore.PrimaryPart.CFrame * CFrame.new(0,-5,0)
								end
							else
								workspace.CurrentCamera.CameraSubject = player.Character.Humanoid
							end
						until 
						tree:WaitForChild("Tree",40):FindFirstChildOfClass("MeshPart").Transparency == 1 or autoWood == false or tree == nil
					end
				end
			end
		end)

		local autom = Tab:AddSwitch("Auto Mine",function(state)
			if state and hide then
				--game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame * CFrame.new(0,-6,0)
			end
			wait(.4)
			autoMine = state
		end)
		local autow = Tab:AddSwitch("Auto WoodCut",function(state)
			if state and hide then
				--game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame * CFrame.new(0,-6,0)
			end
			wait(.4)
			autoWood = state
		end)
		local hide = Tab:AddSwitch("Hide (PATCHED)",function(state)
			--[[hide = state
			if not hide then
				local BP = player.Character:FindFirstChild("Floatation :flushed:")
				if BP then
					BP:Destroy()
					Clip = true
				end
			end]]
			if state then
				hide:Set(state)
			end
		end)

		_G.AntiAfk = false
		local VirtualUser=game:service'VirtualUser'
		game:service'Players'.LocalPlayer.Idled:connect(function()
			if _G.AntiAfk then
				VirtualUser:CaptureController()
				VirtualUser:ClickButton2(Vector2.new())
			end
		end)

		_G.AntiAfkTab = Tab:AddSwitch("Anti AFK",function(state)
			_G.AntiAfk = state
		end)
	elseif gtype == "Dungeon" then
		local killAura = false
		local autoFarm = false
		local useAbils = false
		local fromTp = false
		
		ap:Send("Timer/Start")

		game:GetService("Players").LocalPlayer.OnTeleport:Connect(function(State)
			if State == Enum.TeleportState.Started then
				syn.queue_on_teleport("_G.FromTeleport = true")
			end
		end)

		local abs = game.ReplicatedStorage.Resources.Abilities
		local abils = {}
		for i,c in pairs(abs:children'') do
			if c.Name == "Physical" or c.Name == "Magical" then
				for i,v in pairs(c:children'') do
					local name = require(v).Name
					if name ~= "Dash" then
						table.insert(abils, name)
					end
				end
			end
		end

		spawn(function()
			while wait() do
				if killAura or autoFarm then
					--if canAttack then
						spawn(function() ap:Send("Abilities/Use", "BasicAttack") end)
						if useAbils then
							for i,v in pairs(abils) do wait()
								spawn(function()
									ap:Send("Abilities/Use", v)
								end)
							end
						end
					--end
				end
			end
		end)

		local Clip = false
		local function NoclipLoop()
			if Clip == false and autoFarm and game:GetService("Players").LocalPlayer.Character ~= nil then
				for _, child in pairs(game:GetService("Players").LocalPlayer.Character:GetDescendants()) do
					if child:IsA("BasePart") and child.CanCollide == true then
						child.CanCollide = false
					end
				end
			end
		end
		Noclipping = game:GetService('RunService').Stepped:connect(NoclipLoop)

		local canAttack = false
		function tp(cf)
			pcall(function()
				if (game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.Position - cf.p).magnitude > 5 then
					--game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.Anchored = true
					local asd = CFrame.new(game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.Position, cf.p)
					game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = asd * CFrame.new(0,0,-.35)
				else
					game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.Anchored = false
				end
			end)
		end
		local cents = workspace.CurrentCamera.Entities
		local ents = workspace.CurrentCamera.Entities
		for i,v in pairs(workspace:children'') do
			if v:FindFirstChild("1 - Start") then
				ents = v
			end
		end
		local canLeave = true
		local close


		spawn(function()
			while wait() do
				if #cents:GetChildren() == 0 and canLeave then
					canLeave = false
					warn'Attempting Rejoin'
					ap:Send("Explores/Join", 0)
					updatesave("AdvUp_Autofarm", true)
				end
				if autoFarm then
					--for a,b in ipairs(ents:children'') do
						for i,v in ipairs(workspace.CurrentCamera.Entities:children'') do
							if autoFarm then
								pcall(function()
									if close == nil then
										close = v
									elseif close:FindFirstChild("HumanoidRootPart") ~= nil and (close.PrimaryPart.Position - game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.Position).magnitude > (v.PrimaryPart.Position - game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.Position).magnitude then
										close = v
									end
								end)
							end
						end
						repeat pcall(function() tp(close.PrimaryPart.CFrame * CFrame.new(0,2,0)) end) wait()
						until
						close == nil or close.Parent == nil or autoFarm == false

						close = nil
					--end
				end
			end
		end)
		local bv
		function newBV()
			if autoFarm then
				repeat wait() until game:GetService("Players").LocalPlayer.Character:FindFirstChild("HumanoidRootPart") ~= nil
				bv = Instance.new("BodyVelocity")
				bv.Velocity = Vector3.new(0,0,0)
				bv.MaxForce = Vector3.new(math.huge,math.huge,math.huge)--Play around with this
				bv.P = 9000--Play around with this
				bv.Parent = game:GetService("Players").LocalPlayer.Character.HumanoidRootPart
			end
		end
		game:GetService("Players").LocalPlayer.CharacterAdded:Connect(newBV)

		local autof = Tab:AddSwitch("Autofarm",function(state)
			autoFarm = state
			if state then
				bv = Instance.new("BodyVelocity")
				bv.Velocity = Vector3.new(0,0,0)
				bv.MaxForce = Vector3.new(math.huge,math.huge,math.huge)--Play around with this
				bv.P = 9000--Play around with this
				bv.Parent = game:GetService("Players").LocalPlayer.Character.HumanoidRootPart
				--game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.Anchored = true
			else
				--game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.Anchored = false
				if bv then
					bv:Destroy()
					bv = nil
				end
			end
		end)
		local kaura = Tab:AddSwitch("Kill Aura",function(state)
			killAura = state
		end)
		
		local uabls = Tab:AddSwitch("Use Abilities",function(state)
			useAbils = state
		end)

		_G.AntiAfk = false
		local VirtualUser=game:service'VirtualUser'
		game:service'Players'.LocalPlayer.Idled:connect(function()
			if _G.AntiAfk then
				VirtualUser:CaptureController()
				VirtualUser:ClickButton2(Vector2.new())
			end
		end)

		_G.AntiAfkTab = Tab:AddSwitch("Anti AFK",function(state)
			_G.AntiAfk = state
		end)

		local tFarm = saves("AdvUp_Autofarm")
		if tFarm then
			_G.AntiAfkTab:Set(tFarm)
			autof:Set(tFarm)
		end
		local ubs = saves("AdvUp_UseAbilities")
		if ubs then
			uabls:Set(ubs)
		end

		local savet = Tab:AddButton("Save Settings",function(state)
			updatesave("AdvUp_Autofarm", autoFarm)
			updatesave("AdvUp_UseAbilities", useAbils)
		end)

		-- updatesave(name, value)
	else
		local msg = Tab:NewHeader("Please go into a Dungeon or Explore!")
		local selDung = saves("AdvUp_Dungeon")
		local selDiff = saves("AdvUp_Difficulty")

		local dat = {
			["Crystal Caverns"] = 1,
			["Skylands"] = 2,
			["Royal Hall"] = 3
		}
		local difs = {
			["Normal"] = 1,
			["Heroic"] = 2,
			["Mythic"] = 3,
			["Maxed"] = 4
		}

		local dngDrpDwn = Tab:AddDrop("Select Dungeon", "Selected Dungeon: ", {"Crystal Caverns", "Skylands", "Royal Hall"}, function(selectedASD)
			selDung = selectedASD
		end)

		local diffDrpDwn = Tab:AddDrop("Select Difficulty", "Selected Difficulty: ", {"Normal", "Heroic", "Mythic", "Maxed"}, function(selectedASD)
			selDiff = selectedASD
		end)

		local setDungeon = Tab:AddButton("Join Dungeon! (Solo)", function()
			updatesave("AdvUp_Dungeon", selDung)
			updatesave("AdvUp_Difficulty", selDiff)
			wait(1)
			ap:Send("Parties/Create", dat[selDung], difs[selDiff], 4)
		end)
		local tFarm = saves("AdvUp_Autofarm")
		if tFarm and _G.FromTeleport then
			wait(1)
			ap:Send("Parties/Create", dat[selDung], difs[selDiff], 4)
		end
	end

elseif ar2 then
	local Tab = library:CreateTab("Misc. Mods")
	local Tab2 = library:CreateTab("Gun Mods")
	local dat = require(game:GetService("ReplicatedFirst").Framework)
	dat = getupvalues(dat)
	local share = dat[1]["Shared"]
	local lib = dat[1]["Libraries"]
	local class = dat[1]["Classes"]
	local network = lib.Network

	local oldSend = network.Send
	local oldFetch = network.Fetch

	local alwDay = false
	local superSpeed = false
	local AntiZombie = false

	network.Send = function(self, ...)
		local args = {...}
		if tostring(args[1]):lower():find("ammo sync") then
			return
		end
		return oldSend(self, ...)
	end

	network.Fetch = function(self, ...)
		local args = {...}
		if tostring(args[1]):lower():find("character stat get") then
			return
		end
		return oldFetch(self, ...)
	end

	game:service'Lighting'.Changed:Connect(function()
		if alwDay then
			game:service'Lighting'.TimeOfDay = 12 
		end
	end)

	local modCars = Tab:AddButton("Modded Vehicles", function()
		local spawns = workspace.Vehicles.Spawned

		for i,v in pairs(spawns:GetChildren()) do 
			require(v.Config).Physics.ThrottleResponce = 50000
			require(v.Config).Physics.DriveSpeed = 5000
			require(v.Config).Physics.NoSteeringAfter = 300
			require(v.Config).Physics.SteerResponce = 100
			for a,c in pairs(require(v.Config).Physics.Wheels) do
				c.DriveMotorTorque = 99779200
				c.Friction = 1
				c.DoesDrive = true
				c.Elasticity = 0
			end
		end
	end)

	local plr = game.Players.LocalPlayer
	spawn(function()
		while wait() do
			if AntiZombie then
				local meleeTable
				for i,v in pairs(getreg()) do
					if type(v) == 'function' and (not is_protected_closure(v)) and getfenv(v).script.Name == "Item" then  
						for a,c in pairs(getupvalues(v)) do
							if type(c) == "table" and getfenv(v).script.Name == "Item" then
								if c["Id"] and c["Name"] then
									if not meleeTable and c.Parent and c.Parent.Equipment and c.Parent.Equipment.Melee then
										meleeTable = getupvalues(v)[a]
									end
								end
							end
						end
					end 
				end
				if meleeTable and meleeTable.Parent.Equipment.Melee.Id then
					spawn(function()
						if plr.Character and plr.Character:FindFirstChild("HumanoidRootPart") then
							for i,v in pairs(workspace.Zombies.Mobs:GetChildren()) do
								if v:FindFirstChild("HumanoidRootPart") and v:FindFirstChild("Humanoid") then
									local mag = (v.HumanoidRootPart.Position - plr.Character.HumanoidRootPart.Position).magnitude
									if v.Humanoid.Health > 0 and mag < 20 then
										network:Send("Melee Hit Register", meleeTable.Parent.Equipment.Melee.Id, 1, v.HumanoidRootPart)
									end
								end
							end
						end
					end)
				else
					spawn(function()
						if plr.Character and plr.Character:FindFirstChild("HumanoidRootPart") then
							for i,v in pairs(workspace.Zombies.Mobs:GetChildren()) do
								if v:FindFirstChild("HumanoidRootPart") and v:FindFirstChild("Humanoid") then
									local mag = (v:FindFirstChild("HumanoidRootPart").Position - plr.Character.HumanoidRootPart.Position).magnitude
									if v.Humanoid.Health > 0 and mag < 20 then
										network:Send("Character Boxing Set", true)
										network:Send("Melee Boxing Hit", v.HumanoidRootPart)
									end
								end
							end
						end
					end)    
				end
			end
		end
	end) 

	function set(str)
		for a,gun in pairs(share["ItemData"]) do
			pcall(function()
				--// Instant Bullet Velocity
				if str == "FireRate" then
					gun.FireRate = 2e9
				end

				if str == "Fire Modes" then
					gun["FireModes"] = {
						[1] = "Semiautomatic",
						[2] = "Burst",
						[3] = "Automatic"
					}
				end
				--// Instant Bullet Velocity
				--gun.ReloadTime = 0.2

				gun.MuzzleVelocity = 2e9
		
				--// No Recoil
				if str == "Recoil" then
					for i,v in pairs(gun["RecoilData"]) do
						if type(v) == 'number' and not tostring(i):lower():find("spread") then
							gun["RecoilData"][i] = 0
						end
					end
				end
		
				--// No Spread
				if str == "Spread" then
					for i,v in pairs(gun["RecoilData"]) do
						if type(v) == 'number' and tostring(i):lower():find("spread") then
							gun["RecoilData"][i] = 0
						end
					end
				end

			end)
		end
	end

	local gamememe = getrawmetatable(game)
local Closure,Caller = hide_me or newcclosure,checkcaller or is_protosmasher_caller or Cer.isCerus
local writeable = setreadonly or make_writeable
local name,index,nindex = gamememe.__namecall,gamememe.__index,gamememe.__newindex
writeable(gamememe,false)

gamememe.__newindex = Closure(function(self,Property,b)
    if Caller() then return nindex(self,Property,b) end 
    if not Caller() then
        if superSpeed then
            if self:IsA'Humanoid' then 
                game:GetService'StarterGui':SetCore('ResetButtonCallback',true)
                if Property == "WalkSpeed" then
                    if WalkShoot then 
                        return
                    end
                end
                if Property == "Health" or Property == "JumpPower" or Property == "HipHeight"  then 
                    return 
                end
            end
            if Property == "CFrame" and self.Name == "HumanoidRootPart" or self.Name == "Torso" then
                return 
            end
        end
        return nindex(self,Property,b)
	end
end)

gamememe.__namecall = Closure(function(self,...)
    if Caller() then return name(self,...) end 
    if not Caller() then
        local Arguments = {...}
       	if superSpeed and getnamecallmethod() == "Destroy" and tostring(self) == "BodyGyro" or getnamecallmethod() == "Destroy" and tostring(self) == "BodyVelocity" then
            return invalidfunctiongang(self,...)
        end
        if superSpeed and getnamecallmethod() == "BreakJoints" and tostring(self) == game:GetService'Players'.LocalPlayer.Character.Name then
            return invalidfunctiongang(self,...)
        end
        if superSpeed and getnamecallmethod() == "FireServer" then 
            if self.Name == "lIII" or tostring(self.Parent) == "ReplicatedStorage" then 
                return wait(9e9)
            end
            if Arguments[1] == "hey" then 
                return wait(9e9)
            end
            if Arguments[1] == "play" then
                local TempTable = {}
                tostring(Arguments[2]):gsub('.',function(Char)
                        if UrlEncoder[Char] then 
                            table.insert(TempTable,UrlEncoder[Char])
                        else 
                        table.insert(TempTable,Char)
                    end
                end)
                Arguments[2] = table.concat(TempTable,"")
                PlayOnDeath = Arguments[2]
                return name(self,unpack(Arguments))
            end
            if Arguments[1] == "stop" then 
                PlayOnDeath = nil 
            end
            if tostring(self.Name) == "Fire" and AimlockTarget and AimLock then
                return name(self,AimlockTarget.Head.CFrame + AimlockTarget.Torso.Velocity / 5)
            end
        end
        return name(self,...)
    end
end)
wait(.5)
IsFirstPerson = false
ShiftHeld = false
WHeld = false
SHeld = false
AHeld = false
DHeld = false -- LMFAO
local gcheck = true
urspeed = 4 -- The lower it is the faster. So don't worry about it being minus 1


function ChangeFaster(inputObject, gameProcessedEvent)
    if inputObject.KeyCode == Enum.KeyCode.Minus and gameProcessedEvent == false then        
        urspeed = urspeed - 0.1
    end
end
 


function ChangeSlower(inputObject, gameProcessedEvent)
    if inputObject.KeyCode == Enum.KeyCode.Equals and gameProcessedEvent == false then        
        urspeed = urspeed + 0.1
    end
end
 


function GChecker(inputObject, gameProcessedEvent)
    if inputObject.KeyCode == Enum.KeyCode.K and gameProcessedEvent == false then        
        if gcheck == false then
            gcheck = true
        elseif gcheck == true then
            gcheck = false
        end
    end
end
 
game:GetService("UserInputService").InputBegan:connect(GChecker)



function PressShift(inputObject,gameProcessedEvent)
    if inputObject.KeyCode == Enum.KeyCode.LeftShift and gameProcessedEvent == false and gcheck == true then
        ShiftHeld = true
    end
end

function ReleaseShift(inputObject,gameProcessed)
    if inputObject.KeyCode == Enum.KeyCode.LeftShift then
        ShiftHeld = false
    end
end


function PressW(inputObject,gameProcessedEvent)
    if inputObject.KeyCode == Enum.KeyCode.W and gameProcessedEvent == false and gcheck == true then
        WHeld = true
    end
end

function ReleaseW(inputObject,gameProcessed)
    if inputObject.KeyCode == Enum.KeyCode.W then
        WHeld = false
    end
end

function PressS(inputObject,gameProcessedEvent)
    if inputObject.KeyCode == Enum.KeyCode.S and gameProcessedEvent == false and gcheck == true then
        SHeld = true
    end
end

function ReleaseS(inputObject,gameProcessed)
    if inputObject.KeyCode == Enum.KeyCode.S then
        SHeld = false
    end
end


function PressA(inputObject,gameProcessedEvent)
    if inputObject.KeyCode == Enum.KeyCode.A and gameProcessedEvent == false and gcheck == true then
        AHeld = true
    end
end

function ReleaseA(inputObject,gameProcessed)
    if inputObject.KeyCode == Enum.KeyCode.A then
        AHeld = false
    end
end


function PressD(inputObject,gameProcessedEvent)
    if inputObject.KeyCode == Enum.KeyCode.D and gameProcessedEvent == false and gcheck == true then
        DHeld = true
    end
end

function ReleaseD(inputObject,gameProcessed)
    if inputObject.KeyCode == Enum.KeyCode.D then
        DHeld = false
    end
end

function CheckFirst(inputObject,gameProcessed)
    if inputObject.KeyCode == Enum.UserInputType.MouseWheel then
        if (player.Character.Head.CFrame.p - workspace.CurrentCamera.CFrame.p).magnitude < 0.6 then
            IsFirstPerson = true
	elseif (player.Character.Head.CFrame.p - workspace.CurrentCamera.CFrame.p).magnitude > 0.6 then
	    IsFirstPerson = false
        end
    end
end

game:GetService("UserInputService").InputBegan:connect(PressShift)
game:GetService("UserInputService").InputEnded:connect(ReleaseShift)

game:GetService("UserInputService").InputBegan:connect(PressW)
game:GetService("UserInputService").InputEnded:connect(ReleaseW)

game:GetService("UserInputService").InputBegan:connect(PressS)
game:GetService("UserInputService").InputEnded:connect(ReleaseS)

game:GetService("UserInputService").InputBegan:connect(PressA)
game:GetService("UserInputService").InputEnded:connect(ReleaseA)

game:GetService("UserInputService").InputBegan:connect(PressD)
game:GetService("UserInputService").InputEnded:connect(ReleaseD)

game:GetService("UserInputService").InputChanged:connect(CheckFirst)

game:GetService("UserInputService").InputBegan:connect(ChangeFaster)
game:GetService("UserInputService").InputBegan:connect(ChangeSlower)


game:GetService('RunService').Stepped:connect(function()
    if ShiftHeld == true and superSpeed == true then

        if WHeld == true then
            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame * CFrame.new(0,0,-urspeed)
        end

        if SHeld == true then
            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame * CFrame.new(0,0,urspeed)
        end

        if DHeld == true then
            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame * CFrame.new(urspeed,0,0)
        end

        if AHeld == true then
            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame * CFrame.new(-urspeed,0,0)
        end


    end
end)

	local cam = workspace.CurrentCamera
	local plr = game:GetService("Players").LocalPlayer

	game:GetService("RunService").RenderStepped:connect(function()
		if plr.Character and superSpeed then
			local root = plr.Character:FindFirstChild("HumanoidRootPart")
			if root then
				root.CFrame = CFrame.new(root.CFrame.p,root.CFrame.p+Vector3.new(cam.CFrame.lookVector.X,0,cam.CFrame.lookVector.Z))
			end
		end
	end)

	local nrcoil = Tab2:AddButton("No Recoil",function(state)
		set("Recoil")
	end)

	local nsprd = Tab2:AddButton("No Spread",function(state)
		set("Spread")
	end)

	local frrate = Tab2:AddButton("High FireRate",function(state)
		set("FireRate")
	end)

	local fmods = Tab2:AddButton("All Fire Modes",function(state)
		set("Fire Modes")
	end)

	local sSpd = Tab:AddSwitch("Super Speed [Shift]", function(state)
		superSpeed = state
	end)

	local spSld = Tab:AddSlider("Speed", 1, 4, function (x)
		urspeed = x
	end)

	local alDy = Tab:AddSwitch("Always Day", function(state)
		alwDay = state
	end)

	local antz = Tab:AddSwitch("Anti-Zombie", function(state)
		AntiZombie = state
	end)

elseif cs then
	
	_G.Amount = 6

	local mt = getrawmetatable(game)
	local oldNamecall = mt.__namecall
	if setreadonly then setreadonly(mt, false) else make_writeable(mt, true) end
	local namecallMethod = getnamecallmethod or get_namecall_method
	local newClose = newcclosure or function(f) return f end

	mt.__namecall = newClose(function(...)
		local method = namecallMethod()
		local args = {...}

		if tostring(method) == "InvokeServer" then
			if tostring(args[1]) == "Damage" and _G.Toggle4 and tostring(args[5]) ~= "Void" then
				args[5] = _G.Amount
				return oldNamecall(unpack(args))
			elseif tostring(args[1]) == "Damage" and _G.Toggle5 and tostring(args[5]) == "Void" then
				args[5] = "fuck your anticheat"
				return oldNamecall(unpack(args))
			end
		end
		return oldNamecall(...)
	end)

	game:GetService("UserInputService").InputBegan:connect(function(input,gameprocesed)
		if input.KeyCode == Enum.KeyCode.LeftShift and _G.Toggle3 then
			game:GetService("Players").LocalPlayer.Character:WaitForChild("Humanoid").WalkSpeed = 100
		end
	end)
	
	game:GetService("UserInputService").InputEnded:connect(function(input,gameprocesed)
		if input.KeyCode == Enum.KeyCode.LeftShift then
			game:GetService("Players").LocalPlayer.Character:WaitForChild("Humanoid").WalkSpeed = 35
		end
	end)

	local Example = library:CreateTab("Player")
	local Example2 = library:CreateTab("Kill Aura")
	local Example3 = library:CreateTab("Troll")
	local Example4 = library:CreateTab("Misc")

	local Player = game:GetService("Players").LocalPlayer

	local ClassMainScript, Upvalues, GetKey

	local function VibeCheck(char)
		if char then
			local stats = char:FindFirstChild("Stats")
			local playing = char:FindFirstChild("Playing")
			
			if (stats) then
				local currentHP = stats:FindFirstChild("CurrentHP")
				if (currentHP) and (currentHP.Value > 0) and (playing) then
					return true
				end
			end

			return false
		end
	end

	local function RefreshValues()
		if Player.PlayerGui:FindFirstChild("ClassGui") and Player.PlayerGui:FindFirstChild("ClassGui"):FindFirstChild("Main") then
			ClassMainScript = Player.PlayerGui:WaitForChild("ClassGui"):WaitForChild("Main")
			Upvalues = { }
			wait(1)
			for i,v in pairs(getreg()) do
				if (type(v) == "function") and islclosure(v) and (not is_protected_closure(v)) and (getfenv(v).script == ClassMainScript) then
					for idx,upval in pairs(debug.getupvalues(v)) do
						table.insert(
							Upvalues, 
							{
								["Func"] = v,
								["Upval"] = idx
							}
						)
					end
				end
			end
		end
	end

	local function GetRemoteKey()
		if Player.PlayerGui:FindFirstChild("ClassGui") and Player.PlayerGui:FindFirstChild("ClassGui"):FindFirstChild("Main") then
			ClassMainScript = Player.PlayerGui:WaitForChild("ClassGui"):WaitForChild("Main")
			wait(1)
			for i,v in pairs(getgc()) do
				if (type(v) == "function") and islclosure(v) and (not is_protected_closure(v)) and (getfenv(v).script == ClassMainScript) then
					for a,c in pairs(getupvalues(v)) do
						if tostring(c) == "remotesFired" then
							GetKey = v
						end
					end
				end
			end
		end
	end

	RefreshValues()
	GetRemoteKey()
	Player.CharacterAdded:Connect(RefreshValues)
	Player.CharacterAdded:Connect(GetRemoteKey)
	local setthatshit = coroutine.wrap(function()
	while true do
		rs.RenderStepped:Wait()
		repeat wait() until Upvalues ~= nil and type(Upvalues) == 'table'
		if _G.Toggle == true then
			for i,v in pairs(Upvalues) do
				if (v.Func) and (v.Upval) then
					local upval = debug.getupvalue(v.Func, v.Upval)
					if (type(upval) == "number") and (upval ~= 0) and (upval > 0.1) then
						if (v.Upval == 2) or (v.Upval == 3) then
							debug.setupvalue(v.Func, v.Upval, 0.01)
						end
					end
				end
			end
		end
	end
	end)
	_G.Amount3 = 666
	--[[local healall = coroutine.wrap(function()
		GetRemoteKey()
	while true do
		rs.RenderStepped:Wait()

		if _G.Toggle6 then
			for i,v in pairs(game:GetService("Players"):GetPlayers()) do
				if VibeCheck(v.Character) and (GetKey) then
					warn(GetKey())
					--game:GetService("ReplicatedStorage").Remotes.Heal:InvokeServer(GetKey(), v.Character, _G.Amount3, "True")
				end
			end
		end
	end
	end)]]

	--[[local godmode = coroutine.wrap(function()
		GetRemoteKey()
		while true do
			rs.RenderStepped:Wait()
		
			if _G.Toggle8 then
				if Player.Character then
					if VibeCheck(Player.Character) and (GetKey) then
						game:GetService("ReplicatedStorage").Remotes.Heal:InvokeServer(GetKey(), Player.Character, _G.Amount3, "True")
					end
				end
			end
		end
	end)]]

	_G.Amount2 = 666
	_G.Amount5 = 1000
	local killaura = coroutine.wrap(function()
		GetRemoteKey()
		while true do
			rs.RenderStepped:Wait()
		
			if _G.Toggle7 then
				for i,v in pairs(game:GetService("Players"):GetPlayers()) do
					if v.Character then
						if v.Name ~= Player.Name and VibeCheck(v.Character) and (GetKey) then
							if (v.Character.HumanoidRootPart.Position - Player.Character.HumanoidRootPart.Position).Magnitude < tonumber(_G.Amount5) then
								game:GetService("ReplicatedStorage").Remotes.Damage:InvokeServer(GetKey(), workspace.RealTime.Value, v.Character, _G.Amount2)
								wait()
							end
						end
					end
				end
			end
		end
	end)
		

	setthatshit()
	--healall()
	killaura()
	--godmode()

	_G.Toggle = DefaultSettings["cs"]["No Cooldown"]
	_G.Toggle2 = DefaultSettings["cs"]["Autoclicker"]
	_G.Toggle3 = DefaultSettings["cs"]["Speed Boost"]
	_G.Toggle4 = DefaultSettings["cs"]["Modify Attack Damage"]
	_G.Amount = DefaultSettings["cs"]["Attack Damage Amount"]
	_G.Toggle5 = DefaultSettings["cs"]["No Void Damage"]
	_G.Toggle8 = DefaultSettings["cs"]["Godmode"]

	spawn(function()
		while wait(40) do -- Autosave settings every 40 secs

			DefaultSettings["cs"]["No Cooldown"] = _G.Toggle
			DefaultSettings["cs"]["Autoclicker"] = _G.Toggle2
			DefaultSettings["cs"]["Speed Boost"] = _G.Toggle3
			DefaultSettings["cs"]["Modify Attack Damage"] = _G.Toggle4
			DefaultSettings["cs"]["Attack Damage Amount"] = _G.Amount
			DefaultSettings["cs"]["No Void Damage"] = _G.Toggle5
			DefaultSettings["cs"]["Godmode"] = _G.Toggle8
	
			DefaultSettings["UIColorSettings"]["GradientTwoEnabled"] = GradientTwoEnabled
			DefaultSettings["UIColorSettings"]["ColorGradient1"] = {ColorGradient1.r, ColorGradient1.g, ColorGradient1.b}
			DefaultSettings["UIColorSettings"]["ColorGradient2"] = {ColorGradient2.r, ColorGradient2.g, ColorGradient2.b}
	
			Save()
		end
	end)



	local Switch = Example:AddSwitch("No Cooldown", function (state)
		_G.Toggle = state
	end)
	Switch:Set(_G.Toggle) 

	local Switch2 = Example:AddSwitch("Autoclicker", function (state)
		_G.Toggle2 = state
		while _G.Toggle2 do
			ClassMainScript = Player.PlayerGui:WaitForChild("ClassGui"):WaitForChild("Main")
			getsenv(ClassMainScript).usingattack()
			game:GetService("RunService").Stepped:wait()
		end
	end)
	Switch2:Set(_G.Toggle2)

	local Switch3 = Example:AddSwitch("Speed Boost", function (state)
		_G.Toggle3 = state
	end)
	Switch3:Set(_G.Toggle3)

	local Switch5 = Example4:AddSwitch("Modify Attack Damage", function(state)
		_G.Toggle4 = state
	end)
	--Switch5:Set(_G.Toggle4)

	local Box = Example4:AddBox("Attack Damage Amount", function(TextReturned)
		if typeof(tonumber(TextReturned)) == "number" then
			_G.Amount = TextReturned
			--print(_G.Amount)		
		end
	end)
	--Box:Set(_G.Amount)

	local Switch5 = Example4:AddSwitch("No Void Damage", function(state)
		_G.Toggle5 = state
	end)
	Switch5:Set(_G.Toggle5)

	--[[local Switch6 = Example3:AddSwitch("Heal All", function(state)
		_G.Toggle6 = state
	end)

	local Box = Example3:AddBox("Heal Amount", function(TextReturned)
		if typeof(tonumber(TextReturned)) == "number" then
			_G.Amount3 = TextReturned		
		end
	end)

	local Switch7 = Example2:AddSwitch("Enabled", function(state)
		_G.Toggle7 = state
	end)

	local Box2 = Example2:AddBox("Kill Aura Damage", function(TextReturned)
		if typeof(tonumber(TextReturned)) == "number" then
			_G.Amount2 = TextReturned		
		end
	end)

	local Box3 = Example2:AddBox("Kill Aura Range", function(TextReturned)
		if typeof(tonumber(TextReturned)) == "number" then
			_G.Amount5 = TextReturned		
		end
	end)

	local Button2 = Example4:AddSwitch("Godmode", function (state)
		_G.Toggle8 = state
	end)
	Button2:Set(_G.Toggle8)]]

	local Button = Example4:AddButton("Anti-Report", function()
		if game:GetService("Players").LocalPlayer.Character.Head:FindFirstChild("PlayerDisplay") then game:GetService("Players").LocalPlayer.Character.Head.PlayerDisplay.CharacterName:Destroy() end
			for _,v in pairs(game:GetService("Players").LocalPlayer.Character:GetChildren()) do
				if (v:IsA("Accessory")) then
					v.Handle:Destroy();
				else if v:IsA("Clothing") then
					v:Destroy();
				end;
			end;
		end
	end)

elseif soundsp then
	local speed = 0.2 -- legit mode, .9 = instant

    local autoPlayer = DefaultSettings["soundsp"]["autoPlayer"]
    local cursorTrail = DefaultSettings["soundsp"]["cursorTrail"]
    local rainbowCursor = DefaultSettings["soundsp"]["rainbowCursor"]
    local legit = DefaultSettings["soundsp"]["legit"]
	local cursor 


	spawn(function()
		while wait(40) do -- Autosave settings every 40 secs

			DefaultSettings["soundsp"]["autoPlayer"] = autoPlayer
			DefaultSettings["soundsp"]["cursorTrail"] = cursorTrail
			DefaultSettings["soundsp"]["rainbowCursor"] = rainbowCursor
			DefaultSettings["soundsp"]["legit"] = legit
	
			DefaultSettings["UIColorSettings"]["GradientTwoEnabled"] = GradientTwoEnabled
			DefaultSettings["UIColorSettings"]["ColorGradient1"] = {ColorGradient1.r, ColorGradient1.g, ColorGradient1.b}
			DefaultSettings["UIColorSettings"]["ColorGradient2"] = {ColorGradient2.r, ColorGradient2.g, ColorGradient2.b}
	
			Save()
		end
	end)


    for i,v in pairs(workspace.Client:GetChildren()) do
        if v.Name == "Cursor" and v:FindFirstChild("SurfaceGui") then
            cursor = v
        end
    end

    workspace.Client.ChildAdded:Connect(function(v)
        if v.Name == "Cursor" and v:FindFirstChild("SurfaceGui") then
            cursor = v
        end
    end)

    function rainb(hue)
        local section = hue % 1 * 3
        local secondary = 0.5 * math.pi * (section % 1)
        if section < 1 then
            return Color3.new(1, 1 - math.cos(secondary), 1 - math.sin(secondary))
        elseif section < 2 then
            return Color3.new(1 - math.sin(secondary), 1, 1 - math.cos(secondary))
        else
            return Color3.new(1 - math.cos(secondary), 1 - math.sin(secondary), 1)
        end
    end

    local plrTab = library:CreateTab("Sound Space")
    local autop = plrTab:AddSwitch("Auto Player", function (state)
        autoPlayer = state
    end)
	autop:Set(autoPlayer)

    local cTrail = plrTab:AddSwitch("Cursor Trail", function (state)
        cursorTrail = state
    end)
	cTrail:Set(cursorTrail)

    local rCurs = plrTab:AddSwitch("Rainbow Trail", function (state)
        rainbowCursor = state
    end)
	rCurs:Set(rainbowCursor)

    local rCurs = plrTab:AddSwitch("Legit Mode", function (state)
        legit = state
    end)
	rCurs:Set(legit)

    local unlMeshes = plrTab:AddButton("Show Hidden Meshes (Shop)", function()
        for i,v in pairs(getrenv()._G.Content.BlockMeshes) do
            pcall(function()
                v.Listed = true
                v.Paid = false
            end)
        end
    end)

    local cubes = { }
    local closest = {nil, math.huge}
    game:GetService("Workspace").DescendantAdded:Connect(function(descendant)
        if descendant:IsDescendantOf(game:GetService("Workspace")) then
            if descendant:IsA("SelectionBox") or descendant:IsA("SpecialMesh") then
                table.insert(cubes, descendant.Parent)
            end
        end
    end)

    workspace.DescendantRemoving:Connect(function(descendant)
        if descendant:IsDescendantOf(game:GetService("Workspace")) then
            if descendant:IsDescendantOf(game:GetService("Workspace").Client) then
                for i, v in next, cubes do 
                    if v.Name == descendant.Name then
                        table.remove(cubes, i)
                    end
                end
            end
        end
    end)

    while wait() do
        getrenv()._G.PlayerData.Settings.CursorTrail = cursorTrail
        local Clr = rainb(tick()/20)
        local cursor2 = game:GetService("Players").LocalPlayer.PlayerGui:FindFirstChild("CursorGui")
        if rainbowCursor then
            if cursor2 then
                cursor2.ImageLabel.ImageColor3 = Clr
            end
        end
        if autoPlayer then
            if #cubes ~= 0 then
                local last
                for i,v in pairs(cubes) do
                    if v ~= nil and v.Parent ~= nil and v:IsDescendantOf(workspace) then
                        if last == nil then 
                            last = v
                        elseif (workspace.CurrentCamera.CFrame.p - last.CFrame.p).magnitude > (workspace.CurrentCamera.CFrame.p - v.CFrame.p).magnitude then
                            last = v
                        end
                    end
                end
                if last ~= nil and last.Parent ~= nil and last:IsDescendantOf(workspace) then
                    if legit then
                        workspace.CurrentCamera.CFrame = workspace.CurrentCamera.CFrame:lerp(CFrame.new(workspace.CurrentCamera.CFrame.p, last.CFrame.p), speed)
                    else
                        workspace.CurrentCamera.CFrame = CFrame.new(workspace.CurrentCamera.CFrame.p, last.CFrame.p)
                    end
                end
            end
        end
    end

elseif arcane then
	local plrTab = library:CreateTab("Arcane Reborn")
	local a,s = pcall(function()
		local info = library:CreateTab("Information")
		info:NewHeader("• You have to have dagger equipped\nfor the dagger farm")
		--info:NewHeader("• You can turn on both farms,\ndagger must be equipped.")
		info:NewHeader("• Godmode V1 is inf forcefield, turn it\non then reset for it to be enabled.")
		--info:NewHeader("[==] • WARNINGS • [==]")
		info:NewHeader("  =------=  ")
		info:NewHeader("\n• once unlock animations is pressed,")
		info:NewHeader("goto Menu > Animation Packs\nthey will be equip-able.")

	end)

	local canFarm = false
	local godModeV1 = false
	local AntAdm = false
	local canFarmD = false

	--[[local cFarm = plrTab:AddSwitch("Combat Autofarm\n   (Str+Exp)", function (state)
		canFarm = state
		local comb = game:GetService("Players").LocalPlayer.Character:FindFirstChild("Combat")
		if comb == nil then
			comb = game:GetService("Players").LocalPlayer.Backpack:FindFirstChild("Combat")
		end
		if comb ~= nil then
			local sc = comb.LocalScript
			local cCode = ""

			for i,v in pairs(getreg()) do
				if type(v) == 'function' and islclosure(v) and (not is_protected_closure(v)) then
					if getfenv(v).script == sc then
						for i2, v2 in pairs(getupvalues(v)) do
							if type(v2) == 'string' then
								cCode = v2
							end
						end
					end
				end
			end

			if cCode then
				while canFarm do
					game:GetService('RunService').RenderStepped:Wait()
					local comb = game:GetService("Players").LocalPlayer.Character:FindFirstChild("Combat")
					if comb == nil then
						comb = game:GetService("Players").LocalPlayer.Backpack:FindFirstChild("Combat")
					end
					if comb ~= nil then
						comb.LocalScript.Combat:FireServer('Punch', Vector3.new(), cCode)
						comb.LocalScript.Combat:FireServer('Kick', Vector3.new(), cCode)
					end
				end
			end
		end
	end)]]

	local mFarm = plrTab:AddSwitch("MagicDagger Autofarm\n   (Mgk+Exp+Str)", function (state)
		spawn(function()
			pcall(function()
				if game:GetService("Players").LocalPlayer.Character:FindFirstChildOfClass("Tool") and game:GetService("Players").LocalPlayer.Character:FindFirstChildOfClass("Tool").Name == "Magic Dagger" then
					canFarmD = state
					local comb = game:GetService("Players").LocalPlayer.Character:FindFirstChildOfClass("Tool")
					if comb == nil then
						comb = game:GetService("Players").LocalPlayer.Backpack:FindFirstChild("Magic Dagger")
						if comb ~= nil then
							comb.Parent = game:GetService("Players").LocalPlayer.Character
						end
					end
					if comb ~= nil and comb.Parent == game:GetService("Players").LocalPlayer.Character then

						while canFarmD and comb ~= nil and comb.Parent == game:GetService("Players").LocalPlayer.Character do
							game:GetService('RunService').RenderStepped:Wait()
							local comb = game:GetService("Players").LocalPlayer.Character:FindFirstChild("Magic Dagger")
							if comb == nil then
								comb = game:GetService("Players").LocalPlayer.Backpack:FindFirstChild("Magic Dagger")
								if comb ~= nil then
									comb.Parent = game:GetService("Players").LocalPlayer.Character
								end
							end
							if comb ~= nil and comb.Parent == game:GetService("Players").LocalPlayer.Character then
								comb.LocalScript["Magic Dagger"]:FireServer('Slash', Vector3.new())
							end
							pcall(function()
								local mcE = game:GetService("Players").LocalPlayer.bin.MagicEnergy.Value

								if mcE >= 20 then
									game.ReplicatedStorage.Remotes.Charge:FireServer("ChargeEnd")
								end

								if mcE <= 28 then
									game.ReplicatedStorage.Remotes.Charge:FireServer("Charge")
								else
									game.ReplicatedStorage.Remotes.Charge:FireServer("ChargeEnd")
								end
							end)
						end
					end
				end
			end)
		end)
	end)

	local godmv1 = plrTab:AddSwitch("Godmode v1\n   (requires respawn)", function(state)
		godModeV1 = state
		if state then
			pcall(function()
				--game:GetService("Players").LocalPlayer.Character:BreakJoints()
			end)
		end
	end)

	local antiadmin = plrTab:AddSwitch("Anti-Admin", function(state)
		AntAdm = state
		
		while AntAdm do
			wait()
			for l, v in next, game:GetService("Players"):GetPlayers() do
				if string.match(v.Name, "SpaceDagger") or string.match(v.Name, "Ultil") or string.match(v.Name, "The_Evil") or string.match(v.Name, "waldi") then
					game:GetService("Players").LocalPlayer:Kick('Uh oh, an admin joined.')
				end
			end
		end
	end)

	local godmv2 = plrTab:AddButton("Godmode v2  (Breaks Charge)", function()
		game:GetService("ReplicatedStorage").Remotes.ServerEffects:FireServer("1e37jshysfz7492p", -(0/0))
	end)

	--[[local gochest = plrTab:AddButton("Goto Chest", function()
		for l, m in pairs(workspace:GetDescendants()) do
			if m.Name == "Chest" then
				game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = m.CFrame
			end
		end
	end)]]

	local hasRanHide = false
	local hName = plrTab:AddButton("Hide name", function()
		if not hasRanHide then
			hasRanHide = true
			pcall(function()
				game:GetService("Players").LocalPlayer.Character.Head.Overhead.Player:Destroy()
			end)

			game:GetService("Players").LocalPlayer.CharacterAdded:Connect(function()
				pcall(function()
					game:GetService("Players").LocalPlayer.Character:WaitForChild("Head",200):WaitForChild("Overhead",200):WaitForChild("Player",200):Destroy()
				end)
			end)
		end
	end)

	local unlPcks = plrTab:AddButton("Unlock Animation Packs", function()
		local bin = game:GetService("Players").LocalPlayer:WaitForChild("bin")
		local animNames = {
			["HasCowardPack"] = true,
			["HasBossPack"] = true,
			["HasSorcererPack"] = true,
			["HasMoonwalkPack"] = true,
		}
		if bin then
			for i,v in pairs(bin:children'') do
				if animNames[v.Name] then
					v.Value = true
				end
			end
		end
	end)

	local mt = getrawmetatable(game)
	local namecall = mt.__namecall
	local setreadonly = setreadonly or make_writable

	setreadonly(mt, false)

	mt.__namecall = newcclosure(function(self, ...)
		local args = {...}
		local arguments = args
		local a = {}
		for i = 1, #arguments - 1 do
			a[i] = arguments[i]
		end
		local method = getnamecallmethod()

		if method == 'FireServer' then
			if self.Name == "ServerEffects" then
				if tostring(args[1]) == "192731" and godModeV1 == true then
					return;
				end
			end
			if self.Name == "QuestHandler" then
				if args[1] == "DialogueEnded" and godModeV1 == true then
					return
				end
			end
		end
		
		return namecall(self, ...)    
	end)

    setreadonly(mt, true)

elseif pf then

	local char; -- v82
	local camera; --v83
	local network; --v70
	local roundsystem;
	local loadgun;
	local updatewalkspeed;
	local statechanged;
	local gunbob;
	local gunsway;
	local loadmodules;
	local loadcharacter;
	local gunrequire;
	local what;
	local settings = {
		["CameraRecoil"] = DefaultSettings["pf"]["CameraRecoil"],
		["NoSway"] = DefaultSettings["pf"]["NoSway"],
		["NoRecoil"] = DefaultSettings["pf"]["NoRecoil"],
		["InstReload"] = DefaultSettings["pf"]["InstReload"],
		["NoRecoil"] = DefaultSettings["pf"]["NoRecoil"],
		["NoFall"] = DefaultSettings["pf"]["NoFall"],
		["NoSuppress"] = DefaultSettings["pf"]["NoSuppress"],
		["AntiFreeze"] = DefaultSettings["pf"]["AntiFreeze"],
		["RapidFire"] = DefaultSettings["pf"]["RapidFire"],
		["InstAim"] = DefaultSettings["pf"]["InstAim"],
		["InstEquip"] = DefaultSettings["pf"]["InstEquip"],
		["KillAura"] = DefaultSettings["pf"]["KillAura"],
		["Bhop"] = DefaultSettings["pf"]["Bhop"],
		["AntiAim"] = DefaultSettings["pf"]["AntiAim"]
	}

	spawn(function()
		while wait(40) do -- Autosave settings every 40 secs

			for i,v in pairs(settings) do
				DefaultSettings["pf"][i] = v
			end
	
			DefaultSettings["UIColorSettings"]["GradientTwoEnabled"] = GradientTwoEnabled
			DefaultSettings["UIColorSettings"]["ColorGradient1"] = {ColorGradient1.r, ColorGradient1.g, ColorGradient1.b}
			DefaultSettings["UIColorSettings"]["ColorGradient2"] = {ColorGradient2.r, ColorGradient2.g, ColorGradient2.b}
	
			Save()
		end
	end)
	
	-- random epic chatting function
	local msger = game:GetService("ReplicatedStorage").Misc.Msger
	local globalchat = game:GetService("Players").LocalPlayer.PlayerGui.ChatGame.GlobalChat
	
	local function talk(message)
		local mes = msger:Clone()
		local mtag = msger:WaitForChild("Tag")
		local offset = 5
		mes.Parent = globalchat
		mes.Text = "[nihilism]: "
		mes.TextColor3 = Color3.new(0.9803921568627451, 0.6509803921568628, 0.10196078431372549)
		mes.Msg.Text = tostring(message)
		mes.Msg.Position = UDim2.new(0, mes.TextBounds.x, 0, 0)
	end
	-------------------------------
	
	talk("Loading functions...")
	wait(0.1)
	-- searching for tables carrying important functions
	for i, v in pairs(getgc()) do
		if typeof(v) == "function" and not is_synapse_function(v) then
			for a, c in pairs(debug.getupvalues(v)) do
				if typeof(c) == "table" then
					if rawget(c, "setmovementmode") then
						char = c
					elseif rawget(c, "shake") or rawget(c, "setsway") then
						camera = c
					elseif rawget(c, "send") then
						network = c
					elseif rawget(c, "checkkillzone") then
						roundsystem = c
					elseif rawget(c, "getplayerhit") then
						what = c
					end
				end
			end
		end
	end
	--------------------
	
	-- searching for specific functions that cant be found in tables
	if debug.getinfo then -- fuck you protosmasher
		for i, v in pairs(getgc()) do 
			if typeof(v) == "function" and not is_synapse_function(v) and islclosure(v) then
				--[[if debug.getinfo(v).name == "gunbob" then 
					gunbob = v
				elseif debug.getinfo(v).name == "gunsway" then 
					gunsway = v
				else--]]if debug.getinfo(v).name == "loadgun" then
					loadgun = v
				elseif debug.getinfo(v).name == "gunrequire" then
					gunrequire = v
				elseif debug.getinfo(v).name == "updatewalkspeed" then
					updatewalkspeed = v
				elseif debug.getinfo(v).name == "loadmodules" then
					loadmodules = v
				elseif debug.getinfo(v).name == "loadcharacter" then
					loadcharacter = v
				elseif debug.getinfo(v).name == "getbodyparts" then
					getbodyparts = v
				end
			end
		end
	else
		for i, v in pairs(getgc()) do 
			if typeof(v) == "function" and not is_synapse_function(v) and islclosure(v) then
				local constant = debug.getconstants(v)
				--[[if tostring(constant[2]) == "slidespring" then 
					gunbob = v
				elseif tonumber(constant[1]) == 6 and tonumber(constant[2]) == 1.1 then
					gunsway = v
				else--]]if tostring(constant[1]) == "burst" and tostring(constant[2]) == "auto" then
					loadgun = v
				elseif tonumber(constant[1]) == 1.4 and tostring(constant[2]) == "t" then
					updatewalkspeed = v
				elseif tostring(constant[1]) == "death" and tostring(constant[2]) == "destroy" then
					loadmodules = v
				elseif tostring(constant[1]) == "Character" and tostring(constant[2]) == "character" then
					loadcharacter = v
				end
			end
		end
	end
	-----------------------
	
	talk("Hooking functions...")
	wait(0.1)
	
	--[[messy shit for the antiaim
	local headheightspring = getupvalue(char.setmovementmode, 4)
	local pronespring = getupvalue(char.setmovementmode, 5)--]]
	
	---------------
	
	-- hookfunctions
	
	local oldcf
	local oldcf2
	local cf = function(...)
		if settings["NoSway"] then
			return CFrame.new()
		else
			return oldcf(...)
		end
	end
	
	local cf2 = function(...)
		if settings["NoSway"] then
			return CFrame.new()
		else
			return oldcf2(...)
		end
	end
	
	oldcf = getupvalue(loadgun, 64)
	setupvalue(loadgun, 64, cf)
	oldcf2 = getupvalue(loadgun, 65)
	setupvalue(loadgun, 65, cf2)
	
	local V3 = Vector3.new(0,0,0) 
	for i, v in pairs(getnilinstances()) do
		if v:IsA("ModuleScript") and v.Name == "" then
			local result = require(v)
			if typeof(result) == "table" and rawget(result, "getGunModule") then
				local old = require(v).getGunModule
				require(v).getGunModule = function(...)
					local returned = old(...)
					local cloned = returned:Clone()
					cloned.Parent = nil
					local wepdata = require(cloned)
					if settings["NoRecoil"] then
						wepdata.camkickmin = V3
						wepdata.camkickmax = V3
						wepdata.aimcamkickmin = V3
						wepdata.aimcamkickmax = V3
						wepdata.aimtranskickmin = V3
						wepdata.aimtranskickmax = V3
						wepdata.transkickmin = V3
						wepdata.transkickmax = V3
						wepdata.rotkickmin = V3
						wepdata.rotkickmax = V3
						wepdata.aimrotkickmin = V3
						wepdata.aimrotkickmax = V3
						wepdata.hipfirespreadrecover = 100
						wepdata.hipfirespread = 0
						wepdata.hipchoke = 0
						wepdata.aimchoke = 0
						if wepdata.spreadpattern then
							for i, v in pairs(wepdata.spreadpattern) do
								wepdata.spreadpattern[i] = V3
							end
						end
					end
					if settings["InstReload"] then
						for i, v in pairs(wepdata.animations) do
							if typeof(v) == "table" and rawget(v, "timescale") then
								v.timescale = 0
							end
						end
					end
					if settings["RapidFire"] then
						wepdata.requirechamber = false
						wepdata.firemodes = {true}
						wepdata.firerate = 1000
						wepdata.variablefirerate = false
					end
					if settings["NoReload"] then
						if wepdata.sparerounds then
							wepdata.magsize = wepdata.magsize + wepdata.sparerounds
							wepdata.sparerounds = 0
						end
					end
					return cloned
				end
			end
		end
	end
	
	--[[
	local oldmovementmode
	local newmovementmode = function(...)
		local args = {...}
		local movement = tostring(args[2])
		if settings["AntiAim"] then
			char.movementmode = movement
			setupvalue(oldmovementmode, 2, movement)
			updatewalkspeed()
			if movement == "prone" then
				headheightspring.t = -1.5
				pronespring.t = 1
			elseif movement == "crouch" then
				headheightspring.t = 0
				pronespring.t = 0
			elseif movement == "stand" then
				headheightspring.t = 1.5
				pronespring.t = 0
			else
				warn("wtf is goin on")
				return
			end
		else
			return oldmovementmode(unpack(args))
		end
	end
	
	oldmovementmode = char.setmovementmode
	char.setmovementmode = newmovementmode
	setupvalue(char.jump, 6, newmovementmode)
	setupvalue(char.setsprint, 3, newmovementmode)--]]
	
	local jump = nil
	local lol = char.jump
	char.jump = function(...)
		local args = {...}
		if jump then
			args[2] = jump
		end
		return lol(unpack(args))
	end
	
	local bhop = false
	game:GetService("UserInputService").InputBegan:Connect(function(input, gameProcessed)
		if input.UserInputType == Enum.UserInputType.Keyboard and input.KeyCode == Enum.KeyCode.Space then
			bhop = true
		end
	end)
	
	game:GetService("UserInputService").InputEnded:Connect(function(input, gameProcessed)
		if input.UserInputType == Enum.UserInputType.Keyboard and input.KeyCode == Enum.KeyCode.Space then
			bhop = false
		end
	end)
	
	local speed = nil
	local mt = getrawmetatable(game)
	local oldNewIndex = mt.__newindex
	
	setreadonly(mt, false)
	
	mt.__newindex = function(t, idx, val)
		if (idx == "WalkSpeed" and not checkcaller()) and speed ~= nil then 
			return oldNewIndex(t, idx, speed)
		end
		return oldNewIndex(t, idx, val)
	end
	
	setreadonly(mt, true)
	
	local a = camera.shake
	camera.shake = function(...)
		if settings["CameraRecoil"] then
			return
		else
			return a(...)
		end
	end
	
	local z = network.send
	network.send = function(...)
		local args = {...}
		if settings["NoFall"] and args[2] == "changehealthx" then
			return nil
		elseif args[2] == "debug" or args[2] == "logmessage" or args[2] == "closeconnection" then
			return nil
		else
			return z(unpack(args))
		end
	end
	local h = camera.setsway
	camera.setsway = function(...)
		if settings["NoSway"] then
			return nil
		else
			return h(...)
		end
	end
	local u = camera.setswayspeed
	camera.setswayspeed = function(...)
		local args = {...}
		if settings["NoSway"] then
			return u(0)
		else
			return u(...)
		end
	end
	
	local y = camera.suppress
	camera.suppress = function(...)
		if settings["NoSuppress"] then
			return nil
		else
			return y(...)
		end
	end
	
	local i = camera.hit
	camera.hit = function(...)
		if settings["NoSuppress"] then
			return nil
		else
			return i(...)
		end
	end
	
	hookfunction(game:GetService("Players").LocalPlayer.Kick, function() end)
	--------------------------------
	
	talk("Loading UI...")
	wait(0.1)
	
	--start of ui library
	local GunMod = library:CreateTab("Local Cheats")
	
	local cam = GunMod:AddSwitch("Remove Camera Recoil", function(state)
		settings.CameraRecoil = state
	end)
	cam:Set(settings.CameraRecoil)

	local sway = GunMod:AddSwitch("No Weapon Sway", function(state)
		settings.NoSway = state
	end)
	sway:Set(settings.NoSway)
	
	local recoil = GunMod:AddSwitch("No Recoil", function(state)
		settings.NoRecoil = state
	end)
	recoil:Set(settings.NoRecoil)
	
	local instreload = GunMod:AddSwitch("Instant Reload", function(state)
		settings["InstReload"] = state
	end)
	instreload:Set(settings.InstReload)
	
	local nonereload = GunMod:AddSwitch("No Reload", function(state)
		settings["NoReload"] = state
	end)
	nonereload:Set(settings.NoReload)
	
	--[[local rapid = GunMod:AddSwitch("Rapid Fire", function(state)
		settings["RapidFire"] = state
	end)]]
	
	local antisupress = GunMod:AddSwitch("Anti-Suppressed", function(state)
		settings["NoSuppress"] = state
	end)
	antisupress:Set(settings.NoSuppress)
	
	local charcheats = library:CreateTab("Character Cheats")
	
	local walkspeed = charcheats:AddSlider("WalkSpeed", 16, 100, function (x)
		speed = tonumber(x)
		game:GetService("Players").LocalPlayer.Character.Humanoid.WalkSpeed = 100
	end)
	
	local jumppower = charcheats:AddSlider("Jump Height", 4, 100, function (x)
		jump = tonumber(x)
	end)
	
	local nofalldamage = charcheats:AddSwitch("No Fall Damage", function(state)
		settings["NoFall"] = state
	end)
	nofalldamage:Set(settings.NoFall)
	
	local bunnyhop = charcheats:AddSwitch("No Jump Cooldown", function(state)
		settings["Bhop"] = state
	end)
	bunnyhop:Set(settings.Bhop)
	
	--[[
	local antiaim = charcheats:AddSwitch("Antiaim", function(state)
		if state then
			char.setmovementmode(nil, "prone")
			char.movementmode = "stand"
			headheightspring.t = 1.5
			pronespring.t = 0
			setupvalue(oldmovementmode, 2, "stand")
			updatewalkspeed()
			settings["AntiAim"] = state
		else
			settings["AntiAim"] = state
			char.setmovementmode(nil, char.movementmode)
		end
	end)--]]
	
	local antifreeze = charcheats:AddSwitch("Anti-Freeze", function(state)
		settings["AntiFreeze"] = state
	end)
	antifreeze:Set(settings.AntiFreeze)
	
	local knifekill = charcheats:AddSwitch("Kill Aura", function(state)
		settings["KillAura"] = state
	end)
	knifekill:Set(settings.KillAura)
	
	---------------------
	
	--[[local function getclosest()
		local mob = nil
		local lol = nil
		local close = 25
		local lplayer = game:GetService("Players").LocalPlayer
		local char = lplayer.Character
		for i, v in pairs(plrtable) do
			if i ~= lplayer and i.Team and i.Team.Name ~= lplayer.Team.Name and v.head and v.char and v.rootpart and v.head.Parent.Parent and char and char:FindFirstChild("HumanoidRootPart") then
				local mag = (v.head.Position-char:FindFirstChild("HumanoidRootPart").Position).magnitude
				if mag < close then
					mob = i
					lol = v
					close = mag
				end
			end
		end
		return mob, lol
	end--]]
	
	local function getclosest()
		local close = 25
		local mob;
		local lol;
		local lplayer = game:GetService("Players").LocalPlayer
		local team;
		if lplayer.Team and lplayer.Team.Name == "Phantoms" then
			team = game:GetService("Workspace").Players.Ghosts
		else
			team = game:GetService("Workspace").Players.Phantoms
		end
		for i, v in pairs(team:GetChildren()) do
			if lplayer and lplayer.Character and v and v:FindFirstChild("HumanoidRootPart") and v:FindFirstChild("Head") and v:FindFirstChild("Torso") and what.getplayerhit(v.Head) and what.getplayerhit(v.Head) ~= lplayer then
				local mag = (v.Head.Position-lplayer.Character:FindFirstChild("HumanoidRootPart").Position).magnitude
				if mag < close then
					mob = what.getplayerhit(v.Head)
					lol = v
					close = mag
				end
			end
		end
		return mob, lol
	end
	
	--- shitty loop
	game:GetService('RunService').RenderStepped:Connect(function()
		if settings["AntiFreeze"] and roundsystem.lock == true then
			roundsystem.lock = false
		end
		if settings["KillAura"] then
			local plr, char = getclosest()
			if plr and char:FindFirstChild("HumanoidRootPart") and char:FindFirstChild("Head") and char:FindFirstChild("Torso") then
				network:send("knifehit", plr, tick(), char:FindFirstChild("Head"))
				print("stabbed")
			end
		end
		if settings["Bhop"] and bhop then
			char:jump(4)
		end
		wait()
	end)
	
	talk("Successfully loaded Hattori Hub. Enjoy!")
	
	local UIS = game:GetService('UserInputService')
	local RS = game:GetService('RunService')
	local Players = game:GetService('Players')
	local StarterGui = game:GetService('StarterGui')
	local Player = Players.LocalPlayer
	local Studio = RS:IsStudio()
	local PlayerGui = RS:IsStudio() and Player:WaitForChild('PlayerGui') or game.CoreGui
	local Mouse = Player:GetMouse()
	local old_icon = Mouse.Icon
	local Camera = workspace.CurrentCamera
	
	targetpart = 'Head'
	
	local target
	local target_old
	local alert = false
	local lockedon = false
	local settingkey = false
	local upvals = nil
	local val = 1
	local windows = {}
	local TSize = {};
	
	local version = "v0.25"
	Mouse.TargetFilter = Camera
	
	-- hotkey
	toggle_aim = Enum.UserInputType.MouseButton2
	toggle_aimbot = Enum.KeyCode.F1
	toggle_trigger = Enum.KeyCode.RightAlt
	toggle_esp = Enum.KeyCode.End
	toggle_gui = Enum.KeyCode.F6
	toggle_bottompos = Enum.KeyCode.F7
	toggle_performance = Enum.KeyCode.F8
	toggle_bones = Enum.KeyCode.Delete
	toggle_chams = Enum.KeyCode.F3
	toggle_tracers = Enum.KeyCode.F2
	toggle_boxes = Enum.KeyCode.F4
	ffatoggle = Enum.KeyCode.Home
	targetpart_change = Enum.KeyCode.BackSlash
	priority_toggle = Enum.KeyCode.Insert
	sethotkey = Enum.KeyCode.RightControl
	-- aim fov
	fov_increase = Enum.KeyCode.KeypadPlus
	fov_decrease = Enum.KeyCode.KeypadMinus
	-- aim sens (how smooth your crosshair will move)
	sens_increase = Enum.KeyCode.RightBracket
	sens_decrease = Enum.KeyCode.LeftBracket
	
	local ZeroVector = Vector3.new();
	local Dot = Vector3.new().Dot
	local IgnoreList		= {}
	
	-- parts
	parts = {
		'Head';
		'Torso'
	}
	-- settings
	
	textSet = true
	currentfont = 1
	ffa = false
	teamcheck = false
	hidden = false
	performancemode = false
	esp_chams = false
	esp_tracers = false
	
	-- aim
	fov = 10
	sens = .1
	drop = .45
	aim_toggled = false
	fov_toggled = false
	visible_check = false
	bottompos = true
	aim_priority = 2
	-- [2] FOV or [1] Distance
	aimingcolor = Color3.fromRGB(0, 165, 255)
	aimbot_toggled = false
	aim_line = false
	--mouseiconid =  18671553
	
	-- esp
	esp_toggled = true
	-- item_esp (coming soon)
	linesize = 1
	showdists = false
	textsize = 14
	textoffset = 20
	visiblecolor = Color3.fromRGB(38, 255, 99)
	hiddencolor = Color3.fromRGB(255, 37, 40)
	headboxsize = 4
	headboxaimsize = 6
	headboxshape = 'rectangle'
	local LocalPlayer = game:GetService("Players").LocalPlayer
	-- rectangle or diamond
	
	bounding_box = false
	box_line_size = 1
	
	local GUI = Instance.new('ScreenGui', PlayerGui)
	GUI.ResetOnSpawn = false
	
	ESP = Instance.new('Folder', GUI)
	ESP.Name = 'ESP'
	local Bottom = Instance.new('Frame', ESP)
	Bottom.Name = 'Bottom'
	Bottom.BackgroundTransparency = 1
	Bottom.Size = UDim2.new(0, 1, 0, 1)
	Bottom.Position = UDim2.new(.5, 0, 1, 1)
	
	shared.iDrawings = shared.iDrawings or {};
	local rad = 50
	local FovGui = shared.iDrawings.FOV_Circle or Drawing.new'Circle';
	FovGui.Radius = 50;
	FovGui.Visible = false;
	FovGui.Color = Color3.new(1, 1, 0);
	FovGui.Transparency = .25;
	FovGui.Filled = false;
	FovGui.Thickness = 2;
	FovGui.NumSides = 75;
	FovGui.Position = Vector2.new(Mouse.X, Mouse.Y-2)--Vector2.new(Camera.ViewportSize.X / 2, Camera.ViewportSize.Y / 2);
	shared.iDrawings.FOV_Circle = FovGui
	
	local Tween	= loadstring(game:HttpGet'https://raw.githubusercontent.com/kikito/tween.lua/master/tween.lua')();
	assert(Tween, 'Tween Library unavailable');
	
	function CreateCircleTween()
		shared.iDrawings.FOV_Circle.Radius = rad
	end
	
	local n = 0
	
	--Mouse.Icon = 'rbxassetid://'..mouseiconid
	
	function SameTeam(P1, P2)
		if P1 == P2 then
			return false
		end
		pcall(function()
			if P1.TeamColor == P2.TeamColor and teamcheck then
				return true
			end
		end)
		return false
	end
	
	function GetNearest()
		local Highest = 2e9;
		local char
	
		local function search(v)
			local Player = what.getplayerhit(v.Head);
			local Character = v;
			if Player ~= LocalPlayer and Character then
				local Head = Character:FindFirstChild("Head");
				if Head and Head.Position.X ~= 0 and Head.Position.Z ~= 0 then
					local DP = (Head.Position - Camera.CFrame.p).magnitude
	
					if DP < Highest then
						local pos, withinScreenBounds = Camera:WorldToScreenPoint(Head.Position)
	
						if withinScreenBounds then
							if visible_check then
								local ignorelist = {LocalPlayer.Character}
	
								local castPoints = {Head.Position}
								local hit = Camera:GetPartsObscuringTarget(castPoints, ignorelist)
	
								local isHit = false
								for i,v in pairs(hit) do
									if not v:IsDescendantOf(Player.Character) then
										isHit = true
									end
								end
								if isHit == false then
									Highest = DP;
									char = Character
								end
							else
								Highest = DP;
								char = Character
							end
						end
	
	
					end
				end
			end
		end
	
		if game:GetService("Players").LocalPlayer and game:GetService("Players").LocalPlayer.Team then
			local team;
	
			if game:GetService("Players").LocalPlayer.Team.Name == "Phantoms" then
				team = game:GetService("Workspace").Players.Ghosts
			else
				team = game:GetService("Workspace").Players.Phantoms
			end
	
			for i, v in pairs(team:GetChildren()) do
				search(v)
			end
	
		end
	
		return char;
	end
		
	Mouse.Move:Connect(function()
		cursor = ESP:FindFirstChild('Cursor') or Instance.new('Frame', ESP)
		cursor.Name = 'Cursor'
		cursor.BackgroundTransparency = 1
		cursor.Size = UDim2.new(0, 1, 0, 1)
		cursor.Position = UDim2.new(0, Mouse.X, 0, Mouse.Y)
	end)
	
	function GetMagnitude(Vector)
		return math.sqrt(Vector.x * Vector.x + Vector.y * Vector.y + Vector.z * Vector.z);
	end
	
	function Normalize(Vector)
		return Vector / GetMagnitude(Vector);
	end
	
	function Round(Num, DecimalPlaces)
		local Multiplier = 10 ^ (DecimalPlaces or 0);
		return math.floor(Num * Multiplier + 0.5) / Multiplier;
	end
	
	function GetAngle(Point, Direction, From)
		local Normal = Normalize(Point - From);
		local Cross = Normal:Cross(Direction);
		local Magnitude = GetMagnitude(Cross);
		local DP = Normal:Dot(Direction);
		local Angle = math.atan2(Magnitude, DP) * (180 / math.pi);
		return Angle;
	end
	
	function GetDifference(Num, SNum)
		return math.abs(Num - SNum);
	end
	
	local CachedRadius = setmetatable({}, {
		__index = function(t, i)
			return rawget(t, i) or {
				Radius = 0;
				Angle = 0;
				Difference = 1e9;
			};
		end
	});
	local CI = 0;
	local LT = tick();
	local lastAngle = 0;
	
	UIS.InputBegan:Connect(function(Input)
		if Input.KeyCode == toggle_aim or Input.UserInputType == toggle_aim then
			aim_toggled = true
			alert = true
			
			while aim_toggled and aimbot_toggled do
				target = GetNearest()
				--warn(target)
				local Center = Vector2.new(Camera.ViewportSize.X / 2, Camera.ViewportSize.Y / 2);
				local FOV = fov
	
				local AimPosition = ZeroVector;
				local ScreenPosition, V = ZeroVector, false;
	
				if target == nil or target:FindFirstChild("Head") == nil then
					target = nil
				end
				
				if target then
					local Char = game:service'Players'.LocalPlayer.Character
	
					AimPosition = target.Head.Position;
					ScreenPosition, V = Camera:WorldToViewportPoint(AimPosition);
	
					Angle = Round(GetAngle(AimPosition, Camera.CFrame.lookVector.unit, Camera.CFrame.p), 2);
	
					--warn(target, Angle, FOV)
					local no = true
					if fov_toggled and Angle > FOV then
						no = false
					end
					if no then
						local dist = (Char.Head.Position - target[targetpart].Position).magnitude
	
						local headpos = Camera:WorldToScreenPoint(target[targetpart].Position + Vector3.new(0, dist / (100 / drop), 0))
						local moveto = Vector2.new((headpos.X - Mouse.X) * sens, (headpos.Y - Mouse.Y) * sens)
						aimpos = GUI:FindFirstChild('AimPos') or Instance.new('Frame', GUI)
						if not GUI:FindFirstChild('AimPos') then
							aimpos.Name = 'AimPos'
							aimpos.BorderSizePixel = 1
							aimpos.BorderColor3 = Color3.new(0, 0, 0)
							aimpos.BackgroundTransparency = 0
							aimpos.BackgroundColor3 = Color3.new(1, 1, 1)
							aimpos.Rotation = 45
							aimpos.ZIndex = 4
							aimpos.Size = UDim2.new(0, 3, 0, 3)
						end
						aimpos.Position = UDim2.new(0, headpos.X - aimpos.AbsoluteSize.X / 2, 0, headpos.Y - aimpos.AbsoluteSize.Y / 2)
						aimpos.Visible = true
						mousemoverel(moveto.X, moveto.Y)
						if alert or target ~= target_old then
							lockedon = true
							alert = false
						end
					end
				end
				RS.Heartbeat:wait()
				target_old = target
				if aimpos then
					aimpos.Visible = false
				end
			end
			lockedon = false
		end
	end)
	
	UIS.InputEnded:Connect(function(Input)
		if Input.KeyCode == toggle_aim or Input.UserInputType == toggle_aim then
			aim_toggled = false
		end
	end)
	
	Player.CharacterAdded:Connect(function(c)
		for _, v in next, ESP:GetDescendants() do
			if v:IsA('Frame') and v.Name:match('-') then
				v:Destroy()
			end
		end
	end)
	
	RS:UnbindFromRenderStep'UVAI-SL';
	
	RS:BindToRenderStep('UVAI-SL', 1, function()
		local DT = tick() - LT;
		LT = tick();
		local Color = Color3.fromHSV(tick() * 48 % 255/255, 1, 1);
		FovGui.Color = Color;
	
		local Center = Vector2.new(Camera.ViewportSize.X / 2, Camera.ViewportSize.Y / 2);
		local CF = Camera.CFrame * CFrame.Angles(0, math.rad(CI), 0) * CFrame.new(0, 0, -100);
		CF = CF.p;
		local Angle = Round(GetAngle(CF, Camera.CFrame.lookVector.unit, Camera.CFrame.p), 2);
		local CAng = Round(Angle, 1);
	
		CI = CI + 0.25;
		if (CI > 90) then CI = -90 end
	
		local TempPos, X = Camera:WorldToViewportPoint(CF);
	
		local Point	= TempPos; -- Center + Vector2.new(FOV, FOV);
		local Radius = math.sqrt((Point.X - Center.X)^2 + (Point.Y - Center.Y)^2);
		
		local CS = CachedRadius[CAng];
		local Difference = GetDifference(Angle, CS.Angle);
	
		if CAng % 1 == 0 and (Difference < CS.Difference or Difference < 0.15) then
			CachedRadius[CAng] = {
				Radius = Radius;
				Angle = Angle;
				Difference = GetDifference(Angle, CachedRadius[FOV].Angle);
			};
		end
	
		FovGui.Position = Center;
		local FOV = fov
		------///////
	
		local BestRadius = 0;
	
		local AimPosition = ZeroVector;
		local ScreenPosition, V = ZeroVector, false;
	
		if CachedRadius[FOV].Radius == 0 then
			BestRadius = Radius;
		else
			BestRadius = CachedRadius[FOV].Radius;
		end
		shared.iDrawings.FOV_Circle.Radius = BestRadius
		--[[TSize.Circle.target = {Radius = BestRadius};
		TSize.Circle:update(DT);
		shared.iDrawings.FOV_Circle.Radius = TSize.Circle.subject.Radius]]
	end)
	
	---- ///// Universal_ESP
	
	local plr = game:GetService("Players")
	local ws = game:GetService("Workspace")
	local lplr = plr.LocalPlayer
	local esp = {}
	local name = false
	local dist = false
	local team = false
	local espFontSize = 18
	
	local function pos2d(obj)
		return game:GetService("Workspace").CurrentCamera:WorldToViewportPoint(obj)
	end
	
	local function newsquare()
		local square = Drawing.new('Square');
		square.Visible = true
		square.Thickness = 2;
		square.Filled = false
		square.Transparency = 0.5
		square.Color = Color3.new(1, 0, 0)
		return square
	end
	
	local function newtext()
		local text = Drawing.new('Text')
		text.Visible = true
		text.Center = true
		text.Size = espFontSize
		text.Color = Color3.new(255,255,255)
		text.Outline = true
		return text
	end
	
	local function add(chr)
		local waits = chr:WaitForChild("Head")
		if waits and esp[chr] == nil and what.getplayerhit(chr.Head) and lplr ~= what.getplayerhit(chr.Head) then
			if team then
				if lplr and chr:FindFirstChild("Head") and lplr.Team.Name ~= what.getplayerhit(chr.Head).Team.Name then
					esp[chr] = {newsquare(), newtext(), newtext()}
				end
			else
				esp[chr] = {newsquare(), newtext(), newtext()}
			end
		end
	end
	
	local function remove(chr)
		if esp[chr] ~= nil then
			esp[chr][1]:Remove()
			esp[chr][2]:Remove()
			esp[chr][3]:Remove()
			esp[chr] = nil
		end
	end
	
	local function update()
		for i, v in pairs(esp) do
			if team then
				if what.getplayerhit(i.Head) and lplr.Team.Name == what.getplayerhit(i.Head).Team.Name then
					remove(i)
				end
			end
			if i and i:FindFirstChild("Head") and i.Parent ~= nil and i:FindFirstChild("Torso") and i:FindFirstChild("Right Leg") then
				local current, see = pos2d(i.Torso.Position)
				local current2 = pos2d(i.Head.Position)
				local current3 = pos2d(i["Right Leg"].Position)
				v[1].Size = Vector2.new(2350/current.Z, current2.Y - current3.Y)
				v[1].Position = Vector2.new(current.X - v[1].Size.X / 2, current.Y - v[1].Size.Y / 2)
				v[1].Visible = see
				if name and what.getplayerhit(i.Head) then
					v[2].Position = Vector2.new(current.X, current.Y + v[1].Size.Y)
					v[2].Text = what.getplayerhit(i.Head).Name
					v[2].Size = espFontSize
					v[2].Visible = see
				else
					v[2].Visible = false
				end
				if dist then
					v[3].Position = Vector2.new(current.X, v[1].Position.Y)
					v[3].Visible = see
					v[3].Text = "[" .. math.floor((i.Torso.Position - ws.CurrentCamera.CFrame.Position).magnitude) .. "]"
				else
					v[3].Visible = false
				end
			end
		end
	end
	
	
	local Tab = library:CreateTab("Aimbot")
	
	local autof = Tab:AddSwitch("Enable",function(state)
		aimbot_toggled = state
	end)
	
	local visf = Tab:AddSwitch("Visibility Check",function(state)
		visible_check = state
	end)
	
	--//fov_toggled
	local tfov = Tab:AddSwitch("Toggle FOV",function(state)
		fov_toggled = state
		if fov_toggled then
			FovGui.Visible = true
		else
			FovGui.Visible = false
		end
	end)
	
	local fovvv = Tab:AddSlider("FOV", 1, 50, function (x)
		fov = tonumber(x) > 0 and tonumber(x) or fov
		--CreateCircleTween()
	end)
	fovvv:Set(fov)
	
	local senssss = Tab:AddSlider("Sensitivity", 1, 5, function (x)
		x = x / 10
		sens = tonumber(x) > 0 and tonumber(x) or sens
	end)
	
	local espT = library:CreateTab("ESP")
	
	con = nil;
	con2 = nil;
	con3 = nil;
	con4 = nil;
	con5 = nil;
	shdsts1 = espT:AddSwitch("Enable", function(state)
		if state then
			for i, v in pairs(ws.Players.Ghosts:GetChildren()) do
				if v:FindFirstChild("Head") and what.getplayerhit(v.Head) ~= lplr then
					add(v)
				end
			end
			for i, v in pairs(ws.Players.Phantoms:GetChildren()) do
				if v:FindFirstChild("Head") and what.getplayerhit(v.Head) ~= lplr then
					add(v)
				end
			end
			con = ws.Players.Phantoms.ChildAdded:Connect(add)
			con2 = ws.Players.Ghosts.ChildAdded:Connect(add)
			con3 = ws.Players.Ghosts.ChildRemoved:Connect(remove)
			con4 = ws.Players.Phantoms.ChildRemoved:Connect(remove)
			con5 = game:GetService('RunService').RenderStepped:Connect(update)		
		else
			for i, v in pairs(esp) do
				remove(i)
			end
			con:Disconnect()
			con2:Disconnect()
			con3:Disconnect()
			con4:Disconnect()
			con5:Disconnect()
			con = nil
			con2 = nil
			con3 = nil
			con4 = nil
			con5 = nil
		end
	end)
	
	shdsts2 = espT:AddSwitch("Team Check",function(state)
		team = state
	end)
	
	hdsts3 = espT:AddSwitch("Show Name",function(state)
		name = state
	end)

	efs = espT:AddSlider("Name Font Size", 12, 30, function (x)
		espFontSize = tonumber(x) or espFontSize
	end)
	efs:Set(18)
	
	trcrs = espT:AddSwitch("Show Distance",function(state)
		dist = state
	end)
	
	--[[
		silent aim:
	
		for i, v in pairs(getgc()) do
			if typeof(v) == "function" and debug.getinfo(v).name == "loadcharacter" then
				getproto(v, 30) -- the fireround function
			end
		end
	--]]
	
	--[[
	for i, v in pairs(getgc(true)) do
		if typeof(v) == "table" and rawget(v, "isspotted") then
		   hookfunction(v.isspotted, function() return true end)
		end
	end
	]]--
elseif rghoul then

	local index_list = {7}
	local tweenservice = game:GetService("TweenService")
	local workspace = game:GetService("Workspace")
	local Players = game:GetService("Players")
	local client = Players.LocalPlayer
	local plrrem = client.Character:FindFirstChild("Remotes")
	local npcs = workspace.NPCSpawns:GetChildren()
	local selected_key = 5
	local pressrem = plrrem.KeyEvent
	local tp_offset = Vector3.new(1, 0, 0)
	local remotepw
	local mouse = client:GetMouse()
	local teleporting = false
	local team = client:WaitForChild("PlayerFolder").Customization.Team.Value
	_G.AntiAfk = false

	local VirtualUser = game:service'VirtualUser'
	game:service'Players'.LocalPlayer.Idled:connect(function()
		if _G.AntiAfk then
			VirtualUser:CaptureController()
			VirtualUser:ClickButton2(Vector2.new())
		end
	end)

	client.CharacterAdded:Connect(function()
		for i = 1,10 do wait()
			pcall(function()
				plrrem = client.Character:WaitForChild("Remotes", 9e9)
				pressrem = plrrem.KeyEvent
			end)
		end
	end)


	local npc_table = {
		[1] = "Low Rank Aogiri Member",
		[2] = "Mid Rank Aogiri Member",
		[3] = "High Rank Aogiri Member",
		[4] = "Rank 1 Investigator",
		[5] = "Rank 2 Investigator",
		[6] = "First Class Investigator",
		[7] = "Human",
		[8] = "Athlete",
	}

	local key_list = {
		[1] = "C",
		[2] = "E",
		[3] = "F",
		[4] = "R",
		[5] = "Mouse1",
	}


	local toggles = {
		["autofarm"] = false,
		["q_autofarm"] = false,
	}


	function grabKey()
		local key
		for i,v in next,(getreg()) do 
			if type(v) == "function" and islclosure(v) and (not is_protected_closure(v)) and getfenv(v).script and getfenv(v).script.Name == "ClientControl" then 
				if getconstants(v)[35] == "Up" then
					key = getconstants(v)[34]
				end
			end
		end
		return key
	end

	remotepw = grabKey()

	if remotepw == nil then
		error("remote key is nil! report this to hattori devs.")
	end


	function checkOff(remotes)
		if remotes:FindFirstChild("GetPos") and remotes:FindFirstChild("StatUpdate") and remotes:FindFirstChild("UpdateAll") then
			remotes:FindFirstChild("StatUpdate").RobloxLocked = true
		else
			--warn("checks are off")
		end
	end

	function pressKey(key)
		pressrem:FireServer(remotepw, key_list[key], "Down", mouse.Hit) 
	end


	function getNPC(indexes)
		local npc_grab = {}
		local index = indexes
		if type(indexes) == 'table' then
			for x,c in next, (indexes) do
				index = c
			end
		end

		for i,v in next, (npcs) do
			if index == "All Aogiri" or index == "All Investigator" then
				for i,c in pairs(v:GetChildren()) do
					if c.Name:lower():find("aogiri") and index == "All Aogiri" then
						table.insert(npc_grab, c)
					elseif c.Name:lower():find("investigator") and index == "All Investigator" then
						table.insert(npc_grab, c)
					end
				end
			elseif v:FindFirstChild(npc_table[index]) then
				table.insert(npc_grab, v:FindFirstChild(npc_table[index]))
			end
		end
		return npc_grab
	end

	function eatCorpse(model)
		for i, corpse in pairs(model:GetChildren()) do
			if corpse.Name:lower():find("corpse") and corpse:FindFirstChild("ClickPart") then
					wait(0.5)
					for i = 1, 5 do wait()
						if corpse:FindFirstChild("ClickPart") and corpse:FindFirstChild("ClickPart"):FindFirstChildOfClass("ClickDetector") then
							fireclickdetector(corpse:FindFirstChild("ClickPart"):FindFirstChildOfClass("ClickDetector"))
						end
					end
					wait(0.5)
			end
		end
	end

	function tweenMove(model, target, isCFrame)
		spawn(function()
				if model and model.PrimaryPart then
					local CFrameValue = Instance.new("CFrameValue")
					CFrameValue.Value = model:GetPrimaryPartCFrame()

					CFrameValue:GetPropertyChangedSignal("Value"):connect(function()
						if model and model.PrimaryPart then
							model:SetPrimaryPartCFrame(CFrameValue.Value)
						end
					end)

					local Info = TweenInfo.new(
						((model:GetPrimaryPartCFrame().Position - target.Position).magnitude)/ 250, -- Length
						Enum.EasingStyle.Linear, -- Easing Style
						Enum.EasingDirection.Out, -- Easing Direction
						0, -- Times repeated
						false, -- Reverse
						0 -- Delay
					)

					local tween
					if not isCFrame then
						tween = tweenservice:Create(CFrameValue, Info, {Value = (target.CFrame) * CFrame.new(0,0,5)})
					else
						tween = tweenservice:Create(CFrameValue, Info, {Value = (target) * CFrame.new(0,0,5)})
					end
					if tween then
						tween:Play()
						--warn(teleporting)
						if teleporting then
							--warn'Teleporting'
							tween.Completed:Connect(function()
								--print'Tween Ended'
								teleporting = false
							end)
						end
					end
				end
		end)
	end
	function removeName()
		local char = client.Character
		if char then
			local sks = char.Head:FindFirstChild("PlayerStatus")
			if sks then
				sks:ClearAllChildren()
			end
		end
	end

	--// MAIN LOOP 

	local char = client.Character
	char.PrimaryPart = char.HumanoidRootPart

	checkOff(plrrem)
	wait()

	spawn(function()
		while true do
			repeat wait() until client.Character:FindFirstChild("Remotes")
			plrrem = client.Character:FindFirstChild("Remotes")
			repeat wait() until plrrem:FindFirstChild("KeyEvent")
			local char = client.Character
			pressrem = plrrem.KeyEvent
			if toggles["autofarm"] then
				for i,o in next, getNPC(index_list) do
					if toggles["autofarm"] and client.Character then
						while toggles["autofarm"] and o:FindFirstChild("HumanoidRootPart") do
							removeName()
							if client.Character and client.Character:FindFirstChild("HumanoidRootPart") then
								pcall(function()
									if client.Character and not client.Character:FindFirstChild("Kagune") and not client.Character:FindFirstChild("Quinque")  then
										pressrem:FireServer(remotepw, "One", "Down", mouse.Hit)
									end
								end)
								tweenMove(client.Character, o:FindFirstChild("HumanoidRootPart"))
								if (client.Character.HumanoidRootPart.Position - o:FindFirstChild("HumanoidRootPart").Position).magnitude < 10 then
									pressKey(selected_key)
								end
							end
							wait()
						end
						eatCorpse(o)
					end
				end
			end
			wait()
		end
	end)

	local Tab = library:CreateTab("Ro-Ghoul")

	local mobDrpDwn = Tab:AddDrop("Select Mob", {"All Aogiri", "Low Rank Aogiri Member", "Mid Rank Aogiri Member", "High Rank Aogiri Member", "All Investigator", "Rank 1 Investigator", "Rank 2 Investigator", "First Class Investigator", "Human", "Athlete",}, function(selectedASD)
		local found = false
		for i,v in pairs(npc_table) do
			if v == selectedASD then
				found = true
				index_list = {i}
			end
		end
		if not found then
			index_list = selectedASD
		end
	end)

	local RmvName = Tab:AddButton("Remove Nametag", function()
		removeName()
	end)

	local TglAutfrm = Tab:AddSwitch("Autofarm", function(set)
		toggles["autofarm"] = set
	end)

	--[[local TglAutfrm = Tab:AddSwitch("Quest Autofarm", function(set)
		toggles["autofarm"] = false
		toggles["q_autofarm"] = true
	end)]]

	local TglAutfrm = Tab:AddButton("Cash in Rep (Disable Autofarm)", function(set)
		if toggles["autofarm"] == false and teleporting == false then
			teleporting = true
			if team == "Ghoul" then
				tweenMove(client.Character, CFrame.new(-1512.79797, 78.1655884, -671.987), true)
			elseif team == "CCG" then
				tweenMove(client.Character, CFrame.new(-2007.1969, 70.1731567, 319.341797), true)
			end
			repeat wait() until teleporting == false
			local s =game.ReplicatedStorage.Remotes.ReputationCashOut:InvokeServer()
			game:GetService("StarterGui"):SetCore("SendNotification", {
				Title = "Hattori Hub";
				Text = s;
				Duration = 10;
			}); 
		end
	end)

	local adfas = Tab:AddSwitch("Anti-Afk", function(set)
		_G.AntiAfk = set
	end)

	local SelectedTrainer = "ken"

	local function train()
		local TrainerVal = ""
		for i,v in pairs(game:service'Players'.LocalPlayer.PlayerFolder.Trainers:GetChildren()) do
			if v.Name:lower():find(SelectedTrainer:lower()) then
				TrainerVal = v.Name
			end
		end

		game:service'Players'.LocalPlayer.Backpack.ChildAdded:Connect(function(p)
			if p.Name == "ClientTrain" then
				spawn(function()
					local c = p:WaitForChild("TSCodeVal", 2e99)
					local a = c.Value
					shared.TSCodeVal = a
				end)

				p.ChildAdded:Connect(function(s)
					if s.Name == "TSCodeVal" then
						shared.TSCodeVal = s.Value
					end
				end)
			end
		end)

		local returned = game.ReplicatedStorage.Remotes.Trainers.RequestTraining:InvokeServer(TrainerVal)
		local asd = true
		warn(returned)
		if returned ~= "00:00:00" and returned ~= "TRAINING" then
			game:GetService("StarterGui"):SetCore("SendNotification", {
				Title = "Trainer unavailable;";
				Text = tostring(returned);
				Duration = 10;
			}); 
			asd = false
		end

		spawn(function()
			while asd do wait(1)

				local tSes = workspace.TrainingSessions:GetChildren()
				for i,v in pairs(tSes) do
					if v then
						repeat wait() until v:FindFirstChild("Player")
						if tostring(v.Player.Value) == game:service'Players'.LocalPlayer.Name then
							v.Comm:FireServer("Finished", shared.TSCodeVal, false)
							asd = false
						end
					end
				end

			end
			--print'Loop disabled?'
		end)
	end
	local t80 = Tab:NewHeader("Selected Trainer: ")

	local t21 = Tab:AddBox("Trainer name \n(supports short/lowercase)", function(ret)
		SelectedTrainer = ret
		local ssd = ""
		for i,v in pairs(game:service'Players'.LocalPlayer.PlayerFolder.Trainers:GetChildren()) do
			if v.Name:lower():find(SelectedTrainer:lower()) then
				ssd = v.Name
			end
		end
		t80:SetText("Selected Trainer: "..ssd)
	end)

	local t22 = Tab:AddButton("Complete Training Session", function()
		if toggles["autofarm"] == false and teleporting == false then
			train()
		end
	end)

	client.CharacterAdded:Connect(function()
		char = client.Character
	end)

	local tps = library:CreateTab("Teleports")
	local h1 = tps:NewHeader("- Make sure *Autofarm*\nis disabled before doing this.")
	local h1 = tps:NewHeader("- Ghoul Teleports - ")

	local t1 = tps:AddButton("Ghoul Reputation Master", function()
		if toggles["autofarm"] == false and teleporting == false then
			teleporting = true
			tweenMove(client.Character, CFrame.new(-1512.79797, 78.1655884, -671.987), true)
		end
	end)

	local t2 = tps:AddButton("Ghoul Trainer", function()
		if toggles["autofarm"] == false and teleporting == false then
			teleporting = true
			tweenMove(client.Character, CFrame.new(-1447.81958, 65.1734009, -658.415283), true)
		end
	end)

	local t3 = tps:AddButton("Mask Shop", function()
		if toggles["autofarm"] == false and teleporting == false then
			teleporting = true
			tweenMove(client.Character, CFrame.new(-804.435669, 66.1225204, -637.090881), true)
		end
	end)

	local t4 = tps:AddButton("Kakuhou Shop", function()
		if toggles["autofarm"] == false and teleporting == false then
			teleporting = true
			tweenMove(client.Character, CFrame.new(-257.273041, 66.1734161, -1285.69177), true)
		end
	end)

	local h1 = tps:NewHeader("- CCG Teleports - ")
	local t1 = tps:AddButton("CCG Reputation Master", function()
		if toggles["autofarm"] == false and teleporting == false then
			teleporting = true
			tweenMove(client.Character, CFrame.new(-2007.1969, 70.1731567, 319.341797), true)
		end
	end)

	local t2 = tps:AddButton("CCG Weapon Shop", function()
		if toggles["autofarm"] == false and teleporting == false then
			teleporting = true
			tweenMove(client.Character, CFrame.new(-1676.59338, 68.1732788, 1375.49792), true)
		end
	end)

	local t3 = tps:AddButton("CCG Quinx Machine", function()
		if toggles["autofarm"] == false and teleporting == false then
			teleporting = true
			tweenMove(client.Character, CFrame.new(-1608.62427, 169.674622, 1397.27307), true)
		end
	end)




elseif jailbreak then
	local toggles = {
		["InfNitro"] = DefaultSettings["jailbreak"]["InfNitro"],
		["Alwaysday"] = DefaultSettings["jailbreak"]["Alwaysday"],
		["LoopHeal"] = DefaultSettings["jailbreak"]["LoopHeal"],
		["noFallDamage"] = DefaultSettings["jailbreak"]["noFallDamage"],
		["FreeMobileGarage"] = DefaultSettings["jailbreak"]["FreeMobileGarage"],
		["arrestAura"] = DefaultSettings["jailbreak"]["arrestAura"],
		["antiArrest"] = DefaultSettings["jailbreak"]["antiArrest"],
		["rgbCar"] = DefaultSettings["jailbreak"]["rgbCar"],
		["sPunch"] = DefaultSettings["jailbreak"]["sPunch"],
		["infFuel"] = DefaultSettings["jailbreak"]["infFuel"]
	}

	spawn(function()
		while wait(40) do -- Autosave settings every 40 secs
			DefaultSettings["jailbreak"]["InfNitro"] = toggles["InfNitro"]
			DefaultSettings["jailbreak"]["Alwaysday"] = toggles["Alwaysday"]
			DefaultSettings["jailbreak"]["LoopHeal"] = toggles["LoopHeal"]
			DefaultSettings["jailbreak"]["noFallDamage"] = toggles["noFallDamage"]
			DefaultSettings["jailbreak"]["FreeMobileGarage"] = toggles["FreeMobileGarage"]
			DefaultSettings["jailbreak"]["arrestAura"] = toggles["arrestAura"]
			DefaultSettings["jailbreak"]["antiArrest"] = toggles["antiArrest"]
			DefaultSettings["jailbreak"]["rgbCar"] = toggles["rgbCar"]
			DefaultSettings["jailbreak"]["sPunch"] = toggles["sPunch"]
			DefaultSettings["jailbreak"]["infFuel"] = toggles["infFuel"]
	
			DefaultSettings["UIColorSettings"]["GradientTwoEnabled"] = GradientTwoEnabled
			DefaultSettings["UIColorSettings"]["ColorGradient1"] = {ColorGradient1.r, ColorGradient1.g, ColorGradient1.b}
			DefaultSettings["UIColorSettings"]["ColorGradient2"] = {ColorGradient2.r, ColorGradient2.g, ColorGradient2.b}
	
			Save()
		end
	end)
	
	
	local rkeys = {
	    ["changeteam"] = "bb0dc442", -->>
		["punch"] = "a7aaf310", -->>
		["entercar"] = "dd036850",-->> 
		["leavecar"] = "e433725b",-->>
		["grabgun"] = "e859dcd8c",-->>
		["givedonut"] = "bfec9aec",-->>
		["eatdonut"] = "c9c85425",-->>
		["ejectloser"] = "oxswoko4",-->>
		["taseguy"] = "ff350918",-->>
		["kill"] = "kjcghso6",-->>
		["disablecar"] = "c4c0f333",-->>
		["falldamage"] = "b78555ba",
		["arrest"] = "b8181bd0a",-->>
		["breakout"] = "sbrtqtc8",-->>
		["changeCarColor"] = "fe2994c3"-->>
	}
	
	local bColors = {
		"Purple",
		"Blue",
		"Cyan",
		"Green",
		"Yellow",
		"Orange",
		"Red",
		"Pink"
	}
	
	local mt = getrawmetatable(game);
	local old = mt.__namecall
	local index = mt.__index
	local OldNewindex = mt.__newindex
	local readonly = setreadonly or make_writeable
	
	local MarketplaceService = game:GetService("MarketplaceService");
	
	readonly(mt, false);
	
	mt.__namecall = function(self, ...)
		local args = {...}
		local method = getnamecallmethod()
	
		if toggles["FreeMobileGarage"] and (self == MarketplaceService and tostring(method):find("UserOwnsGamePassAsync")) then
			return true and 1
		end
	
		return old(self, ...)
	end
	mt.__index = newcclosure(function(a,b)
		if not checkcaller() then
			if b == "WalkSpeed" then return 16 end
			if b == "JumpPower" then return 50 end
		end
		return index(a,b)    
	end)
	
	local Lighting = game:GetService("Lighting") -- multiple calls of GetService are redundant and makes performance drop
	mt.__newindex = newcclosure(function(self, Index, Value)
		if (not checkcaller()) then
			if (self == Lighting) and (Index == "TimeOfDay") then
				if (toggles["Alwaysday"]) then
					Value = "12:00:00"
				end
			end
		end
	
		return OldNewindex(self, Index, Value)
	end)
	
	setreadonly(mt, true)
	
	--[[ rewritten - Nobody
	local remote = nil
	for i,v in pairs(getreg()) do 
		if type(v) == 'function' and getfenv(v).script.Name == "LocalScript" then
			for i,v in pairs(getupvalues(v)) do
				if type(v) == 'table' then
					if rawget(v, "FireServer") then
						if not remote then
							remote = v
						end
					end
				end
			end
		end
	end
	
	for i,v in pairs(getreg()) do
		if type(v) == 'function' and islclosure(v) then
			for i2,v2 in pairs(getupvalues(v)) do
				if type(v2) == "table" then
					if rawget(v2, "Nitro") then
						spawn(function()
							while wait(1) do
								if toggles["Nitro"] then
									v2["Nitro"] = 251
								end
							end
						end)
					end
				end
			end
		end
	end
	--]]
	
	local remote = nil
	for i,v in pairs(getreg()) do
		if typeof(v) == "function" and getfenv(v).script and getfenv(v).script.Name == "LocalScript" then
			if (remote == nil) then
				for i2,v2 in pairs(getupvalues(v)) do
					if (type(v2) == "table") and (rawget(v2, "FireServer")) then
						remote = v2
					end
				end
			end
	
			for i2,v2 in pairs(getupvalues(v)) do
				if (type(v2) == "table") and (rawget(v2, "Nitro")) and (rawget(v2, "NitroLastMax")) then
					coroutine.resume(coroutine.create(function()
						while true do
							wait(1)
							if (toggles.Nitro) then
								v2.Nitro = 251
							end
						end
					end))
				end
			end
		end
	end
	
	--[[
	-- moved to __newindex - Nobody
	spawn(function()
		while true do
			if toggles["Alwaysday"] then
				game:service'Lighting'.TimeOfDay = 10
			end
			rs.RenderStepped:Wait()
		end
	end)
	
	-- moved to main loop - Nobody
	spawn(function()
		while true do
			if toggles["LoopHeal"] then
				remote:FireServer(rkeys.givedonut, "Donut")
				wait()
				remote:FireServer(rkeys.eatdonut)
			end
			wait()
		end
	end)
	--]]
	
	if remote then
		local oldFireServer = remote.FireServer
	
		remote.FireServer = function(self,hash,...)
			if toggles["noFallDamage"] and hash == rkeys.falldamage then
				return
			end
			
			return oldFireServer(self,hash,...)
		end
	
	end
	
	local function modData(name, data)
		
		if name ~= "RocketLauncher" then
			data.CamShakeMagnitude = 0
			data.FireAuto = true
			data.FireFreq = 100
			data.MagSize = 2e9
			data.BulletsPerShot = 1
			data.BulletSpread = 0
			data.BulletSpeed = 1000
		else
			RocketLauncher.Radius = math.huge
			RocketLauncher.MagSize = math.huge
		end
	
		return data
	end
	
	local vehicle = workspace.Vehicles
	local players = game:GetService("Players")
	local lplayer = players.LocalPlayer
	local teleporting = false
	
	local Teleport = function(...)
		local cf = (...)
		if teleporting == false then


			for i,v in pairs(workspace.Vehicles:children'') do 
				--pcall(function()
					if v.Name == "Camaro" and v:FindFirstChild("Seat") and v:FindFirstChild("Engine") and v.Seat.Player.Value == false then
						teleporting = true
						print'teleproting'
						remote:FireServer(rkeys.entercar, v, v.Seat)
						wait(0.2)
						print'car cframe'
						v.Engine.CFrame = cf
						wait(0.2)
						print'car leave'
						remote:FireServer(rkeys.leavecar)
						wait(0.2)
						v:Destroy()
						teleporting = false
						print'teleprot aond'
						return
					end
				--end)
			end
		end
	end
	
	function playername(pname)
		for i, v in next, players:GetPlayers() do
			if tostring(v.Name):find(pname) then
				return v
			end
		end
	end
	
	local fa
	local fv
	local oa
	local ov
	
	local function update(s)
			if s.Name == "InVehicle" then
				for i, v in pairs(getgc()) do
					if typeof(v) == 'function' and not is_synapse_function(v) and (not is_protected_closure(v)) then 
						for a, c in pairs(getupvalues(v)) do
							if typeof(c) == 'table' and not fs then
								for i2, v2 in pairs(c) do
									if tostring(i2) == 'GarageEngineSpeed' then
										fa = a
										fv = v
										break -- add this for now
									end
								end
							end
						end
					end
				end
			elseif s.Name == "JetPack" then
				wait(0.75)
				for i,v in pairs(getreg()) do
					if type(v) == 'function' and (not is_protected_closure(v)) and getfenv(v).script.Name == "JetPack" then
						for a,c in pairs(getupvalues(v)) do
							if typeof(c) == 'table' then
								for i2, v2 in pairs(c) do
									if tostring(i2) == 'LocalFuel' then
										ov = v
										oa = a
										break -- add this for now
										--print("found") fuck debugging
									end
								end
							end
						end
					end
				end
			end
		--print(s.Name)
	end
	
	game.Players.LocalPlayer.Character.ChildAdded:connect(update)
	game.Players.LocalPlayer.CharacterAdded:Connect(function()
		game.Players.LocalPlayer.Character.ChildAdded:connect(update)
	end)
	
	local old = require(game:GetService("ReplicatedStorage").Game.ItemSystem.ItemSystem).Unequip
	require(game:GetService("ReplicatedStorage").Game.ItemSystem.ItemSystem).Unequip = function(...)
		if getfenv(2).script.Name == "Inventory" and toggles["LoopHeal"] then
			return nil
		else
			return old(...)
		end
	end
	
	
	----------------------------------------------------------------------------------------------------------------------
	
	local Example = library:CreateTab("Player")
	local Example2 = library:CreateTab("Troll")
	local Example4 = library:CreateTab("Car")
	local Example3 = library:CreateTab("Misc")
	local Teleports = library:CreateTab("Teleports")
	
	local Button3 = Example:AddButton("Join Police", function()
		remote:FireServer(rkeys.changeteam, "Police")
	end)
	
	local Button4 = Example:AddButton("Join Prisoners", function()
		remote:FireServer(rkeys.changeteam, "Prisoner")
	end)
	
	
	local Button5 = Example:AddButton("Anti-Ragdoll", function()
		hookfunction(require(game:GetService("ReplicatedStorage").Game.Falling).StartRagdolling, function()
			return "k"
		end)
	end)
	
	local switch = Example:AddSwitch("No fall damage", function(state)
		toggles["noFallDamage"] = state
	end)
	switch:Set(toggles["noFallDamage"])
	
	local switch = Example:AddSwitch("Loop Heal", function(state)
		toggles["LoopHeal"] = state
	end)
	switch:Set(toggles["LoopHeal"])
	
	local wsData = {
		["WalkSpeed"] = 16,
		["JumpPower"] = 50
	}
	
	local function keepSpeed()
		pcall(function()
			lplayer.Character.Humanoid.WalkSpeed = wsData["WalkSpeed"]
		end)
		pcall(function()
			lplayer.Character.Humanoid.JumpPower = wsData["JumpPower"]
		end)
	end
	
	local ws = Example:AddSlider("WalkSpeed", 16, 125, function (x) -- Name, min value, max value, callback (slider value return (number))
		wsData["WalkSpeed"] = x
		keepSpeed()
	end)
	
	local ws = Example:AddSlider("JumpPower", 50, 125, function (x) -- Name, min value, max value, callback (slider value return (number))
		wsData["JumpPower"] = x
		keepSpeed()
	end)
	
	local Box2 = Example2:AddBox("Eject Player", function(TextReturned)
		if typeof(tostring(TextReturned)) == "string" then
			if playername(tostring(TextReturned)) then
				local v = playername(tostring(TextReturned))
				for i, v2 in pairs(vehicle:GetChildren()) do
					if tostring(v2.Seat.PlayerName.Value) == v.Name or tostring(v2.Passenger.PlayerName.Value) == v.Name then
						remote:FireServer(rkeys.ejectloser, v2)
					end
				end
			end
		end
	end)
	
	local Button = Example2:AddButton("Eject All", function()
		for i, v in pairs(vehicle:GetChildren()) do
			if v.Seat.PlayerName ~= nil or v.Passenger.PlayerName ~= nil then
				remote:FireServer(rkeys.ejectloser, v)
			end
		end
	end)
	
	local Box2 = Example2:AddBox("Tase Player", function(TextReturned)
		if typeof(tostring(TextReturned)) == "string" then
			if playername(tostring(TextReturned)) then
				local v = playername(tostring(TextReturned))
				if v.Character and v.Character:FindFirstChild("HumanoidRootPart") then
					remote:FireServer(rkeys.taseguy, v.Name, v.Character:FindFirstChild("HumanoidRootPart"), v.Character:FindFirstChild("HumanoidRootPart").CFrame.p)
				end
			end
		end
	end)
	
	local Button6 = Example2:AddButton("Tase All (Police)", function()
		for i, v in pairs(players:GetPlayers()) do
			if v.Character and v.Character:FindFirstChild("HumanoidRootPart") then
				remote:FireServer(rkeys.taseguy, v.Name, v.Character:FindFirstChild("HumanoidRootPart"), v.Character:FindFirstChild("HumanoidRootPart").CFrame.p)
			end
		end
	end)
	
	--[[local Box2 = Example2:AddBox("Kill Player", function(TextReturned)
		if typeof(tostring(TextReturned)) == "string" then
			if playername(tostring(TextReturned)) then
				local v = playername(tostring(TextReturned))
				if v ~= lplayer then
					for i = 1,8 do
						remote:FireServer(rkeys.kill, "Pistol", v.Character.Head.Position, v.Character.Head.Position, v.Character.Head)
					end
				end
			end
		end
	end)
	
	local Button = Example2:AddButton("Kill All", function()
		for i,v in pairs(players:GetPlayers()) do
			if v ~= lplayer then
				for i = 1,8 do
					remote:FireServer(rkeys.kill, "Pistol", v.Character.Head.Position, v.Character.Head.Position, v.Character.Head)
				end
			end
		end
	end)--]]
	
	local Buttonbelike = Example2:AddButton("Deflate All Cars", function()
		for i, v in next, vehicle:GetChildren() do
			spawn(function()
			for i = 1,20 do wait()
				remote:FireServer(rkeys.disablecar, v, "Shotgun")
			end
			end)
		end
	end)
	
	--[[local networkOwnership = true
	local label = Example2:NewHeader("Teleport Unanchored Parts to:")
	local epichacking = Example2:AddBox("", function(TextReturned)
		if typeof(tostring(TextReturned)) == "string" then
			if playername(tostring(TextReturned)) then
				local v = playername(tostring(TextReturned))
				for index, part in pairs(workspace:GetDescendants()) do -- changed from "game:GetDescendants()" to "workspace:GetDescendants()"
					if part:IsA("BasePart" or "UnionOperation" or "Model") and part.Anchored == false and part:IsDescendantOf(game.Players.LocalPlayer.Character) == false and part.Name == "Torso" == false and part.Name == "Head" == false and part.Name == "Right Arm" == false and part.Name == "Left Arm" == false and part.Name == "Right Leg" == false and part.Name == "Left Leg" == false and part.Name == "HumanoidRootPart" == false then
						part.CFrame = CFrame.new(v.Character.Head.Position)
					end
				end
			end
		end
	end)]]
	
	local butttttt = Example2:AddButton("Fire Volcano", function()
		local lol = workspace.LavaFun:FindFirstChild("Lavatouch")
		if lol and lplayer.Character and lplayer.Character:FindFirstChild("HumanoidRootPart") then
			lol.Transparency = 1
			lol.CFrame = lplayer.Character:FindFirstChild("HumanoidRootPart").CFrame
			wait(0.2)
			lol.CFrame = CFrame.new(100,100,100)
		end
	end)
	
	local lmao = Example2:AddSwitch("Spam Punch", function(state)
		toggles["sPunch"] = state
	end)
	lmao:Set(toggles["sPunch"])
	
	local Button2 = Example3:AddButton("Rob Small Stores", function()
		for i,v in pairs(require(game:GetService('ReplicatedStorage').Module.UI).CircleAction.Specs) do
			if v.Name == "Rob" then
				v:Callback(v, true)
			end
		end
	end)
	
	local Button6 = Example3:AddButton("Get All Owned Guns", function()
		remote:FireServer(rkeys.grabgun, {["Name"] = "Pistol"})
		remote:FireServer(rkeys.grabgun, {["Name"] = "Shotgun"})
		remote:FireServer(rkeys.grabgun, {["Name"] = "Sniper"})
		remote:FireServer(rkeys.grabgun, {["Name"] = 'AK47'})
		remote:FireServer(rkeys.grabgun, {["Name"] = 'RocketLauncher'})
		remote:FireServer(rkeys.grabgun, {["Name"] = 'Uzi'})
		remote:FireServer(rkeys.grabgun, {["Name"] = 'PlasmaPistol'})
		remote:FireServer(rkeys.grabgun, {["Name"] = 'ForcefieldLauncher'})
		remote:FireServer(rkeys.grabgun, {["Name"] = 'Sword'})
	end)
	
	local Button5 = Example3:AddButton("Mod all Guns", function()
		local mod = game:GetService("ReplicatedStorage").Game.ItemConfig:GetChildren()
		for i,v in pairs(mod) do
			spawn(function()
				modData(v.Name,require(v))
			end)
		end
	end)
	
	local button7 = Example3:AddButton("Give Jetpack", function()
		if lplayer and lplayer.Character then
			remote:FireServer(rkeys.givedonut, "JetPackGiver")
		end
	end)
	
	local switch = Example3:AddSwitch("Anti-Arrest", function(state)
		toggles["antiArrest"] = state
	end)
	switch:Set(toggles["antiArrest"])
	
	local switch = Example3:AddSwitch("Always Day", function(state)
		toggles["Alwaysday"] = state
	end)
	switch:Set(toggles["Alwaysday"])
	
	local switch = Example3:AddSwitch("Arrest Aura", function(state)
		toggles["arrestAura"] = state
	end)
	switch:Set(toggles["arrestAura"])
	
	local switch = Example3:AddSwitch("Inf Fuel", function(state)
		toggles["infFuel"] = state
	end)
	switch:Set(toggles["infFuel"])
	
	local switcha = Example4:AddButton("Free Mobile Garage", function()
		toggles["FreeMobileGarage"] = true
	end)
	--switcha:Set(toggles["FreeMobileGarage"])
	
	local switch = Example4:AddSwitch("Infinite Nitro", function(state)
		toggles["Nitro"] = state
	end)
	switch:Set(toggles["Nitro"])
	
	local switch = Example4:AddSwitch("Rainbow Car", function(state)
		toggles["rgbCar"] = state
	end)
	switch:Set(toggles["rgbCar"])
	
	local lol = Example4:AddSwitch("Autopilot", function(state)
		require(game:GetService("ReplicatedStorage").Module.AlexChassis).OnAction({["Name"] = "Autopilot"}, true)
	end)
	
	local lmao = Example4:AddSwitch("Injan Horn", function(state)
		if state then
			game:GetService("Players").LocalPlayer.UserId = 77195160
		else
			game:GetService("Players").LocalPlayer.UserId = 100
		end
	end)
	
	local box = Example4:AddBox("Modify Car Speed", function(TextReturned)
		if typeof(tonumber(TextReturned)) == "number" then
			local thatTable = getupvalue(fv, fa)
			thatTable["GarageEngineSpeed"] = tonumber(TextReturned)
		end
	end)
	
	local box = Example4:AddBox("Modify Car Height", function(TextReturned)
		if typeof(tonumber(TextReturned)) == "number" then
			local thatTable = getupvalue(fv, fa)
			thatTable["GarageSuspensionHeight"] = tonumber(TextReturned)
			thatTable["Height"] = tonumber(TextReturned)
		end
	end)
	
	local box = Example4:AddBox("Modify Turn Speed", function(TextReturned)
		if typeof(tonumber(TextReturned)) == "number" then
			local thatTable = getupvalue(fv, fa)
			thatTable["TurnSpeed"] = tonumber(TextReturned)
		end
	end)
	
	--[[local Button = Teleports:AddButton("Criminal Base", function()
		Teleport(CFrame.new(-226, 18, 1590))
	end)
	
	local Button = Teleports:AddButton("Donut Shop", function()
		Teleport(CFrame.new(268, 18, -1760))
	end)
	local Button = Teleports:AddButton("Jail", function()
		Teleport(CFrame.new(-1133, 18, -1355))
	end)
	local Button = Teleports:AddButton("Jewelry Store", function()
		Teleport(CFrame.new(142, 18, 1365))
	end)
	local Button = Teleports:AddButton("Bank", function()
		Teleport(CFrame.new(10, 18, 784))
	end)
	local Button = Teleports:AddButton("Gas Station", function()
		Teleport(CFrame.new(-1583, 18, 724))
	end)
	local Button = Teleports:AddButton("Museum", function()
		Teleport(CFrame.new(1158, 102, 1272))
	end)
	local Button = Teleports:AddButton("Power Plant", function()
		Teleport(CFrame.new(697.520264, 38.0954704, 2357.7981))
	end)
	local Button = Teleports:AddButton("Collector / Volcano Base", function()
		Teleport(CFrame.new(1640.18567, 51.0655251, -1794.98999))
	end)
	
	local Box = Teleports:AddBox("Teleport to Player", function(TextReturned)
		if typeof(tostring(TextReturned)) == "string" then
			if playername(tostring(TextReturned)) then
				Teleport(playername(tostring(TextReturned)).Character.HumanoidRootPart.CFrame)
			end
		end
	end)]]
	
	-- loops and shit
	coroutine.resume(coroutine.create(function()
		while true do
			if toggles["arrestAura"] then
				for i, v in next, players:GetPlayers() do
					if v.Character and tostring(lplayer.Team) == "Police" then
						if v.Character:FindFirstChild("HumanoidRootPart") and (v.Character.HumanoidRootPart.Position - lplayer.Character.HumanoidRootPart.Position).Magnitude < 15 and tostring(v.Team) == "Criminal" then
							remote:FireServer(rkeys.arrest, v.Name)
						end
					end
				end
			end
			wait()
		end
	end))
	
	coroutine.resume(coroutine.create(function()
		while true do
			if toggles["infFuel"] then
				if ov ~= nil and oa ~= nil and lplayer.Character:FindFirstChild("JetPack") then
					local thingy = getupvalue(ov,oa)
					thingy["LocalFuel"] = math.huge
				end
			end
			wait()
		end
	end))
	
	coroutine.resume(coroutine.create(function()
		while true do
			if toggles["antiArrest"] and tostring(lplayer.Team) == "Criminal" and lplayer.Character:FindFirstChild("Handcuffs") then
				wait(0.1)
				remote:FireServer(rkeys.breakout, lplayer.Name)
				game:GetService("Players").LocalPlayer.Character.Humanoid.WalkSpeed = 16
			end
			wait()
		end
	end))
	
	coroutine.resume(coroutine.create(function()
		while true do
			if toggles["rgbCar"] and lplayer.Character:FindFirstChild("InVehicle") then
				for i, v in ipairs(bColors) do
					if toggles["rgbCar"] then
						wait(0.1)
						remote:FireServer(rkeys.changeCarColor, tostring(v), "BodyColor")
					end
				end
			end
			wait()
		end
	end))
	
	coroutine.resume(coroutine.create(function()
		while true do
			if toggles["sPunch"] then
				remote:FireServer(rkeys.punch)
				wait(0.45)
			end
			wait()
		end
	end))
	
	--[[local RunService = game:GetService("RunService")
	RunService.Heartbeat:Connect(function()
		if networkOwnership then -- honestly why is this necessary
			game.Players.LocalPlayer.MaximumSimulationRadius = math.pow(math.huge,math.huge)*math.huge
			game.Players.LocalPlayer.SimulationRadius = math.pow(math.huge,math.huge)*math.huge
		end
	end)]]
	
	coroutine.resume(coroutine.create(function()
		while true do
			if toggles["LoopHeal"] then
				remote:FireServer(rkeys.givedonut, "Donut")
				wait()
				remote:FireServer(rkeys.eatdonut)
			end
			wait()
		end
	end))

elseif dslayer then

	local tab = library:CreateTab("RoSlayer")
	
	-----------------

	local plr = game:service'Players'.LocalPlayer
	local plrData = game.ReplicatedStorage.Data_Folder[plr.Name.."_Data"]
	local team = plrData.Stats.Team.Value

	local selectedType = "weak"
	local autoFarm = true
	local hideLocalName = true

	game:service'RunService':UnbindFromRenderStep'autoFarm';

	local function hideName()
		if plr.Character then
			local task = plr.Character.Head:FindFirstChild("HeadBillGui")
			if task then task:Destroy() end
		end
	end

	spawn(function()
		while wait(1) do
			if hideLocalName then
				hideName()
			end
		end
	end)

	local function basicAttack()
		local data = game.ReplicatedStorage.Weapon.Sword:FindFirstChild(plrData.Stats.Weapon.Value);
		if data then
			game.ReplicatedStorage.Remotes.Damage:FireServer("Click")
		end
	end

	local function getQuest(name)
		game.ReplicatedStorage.Remotes.AcceptQuest:FireServer(name)
	end

	local function isEquipped()
		for i,v in pairs(plr.Character:GetChildren()) do
			if v.ClassName == "Model" and v:FindFirstChild("Handle") then
				return true
			end
		end
		return false
	end

	local function getClosestMobs(team)
		local Mob

		local function farm(v)
			local prime = v.PrimaryPart
			local root = plr.Character.PrimaryPart
			local mag = (prime.Position - root.Position).magnitude

			if Mob ~= nil and mag < 60 and v.Humanoid.Health > 0 and mag < (Mob.PrimaryPart.Position - root.Position).magnitude then
				Mob = v
			elseif Mob == nil then
				Mob = v
			end
		end

		for i,v in pairs(workspace:GetChildren()) do
			if v:FindFirstChild("Data") then
				if v.Data.Stats.Team.Value ~= team then
					if selectedType ~= "" then 
						if v.Name:lower():find(selectedType:lower()) then
							farm(v)
						end
					else 
						farm(v)
					end
				end
			end
		end

		return Mob
	end

	local function startAutofarm()
		if autoFarm then
			if not isEquipped() then
				game.ReplicatedStorage.Remotes.E:FireServer(true)
				wait(3)
			else
				local mob = getClosestMobs(team)
				if mob and plr.Character then
					plr.Character.HumanoidRootPart.CFrame = mob.PrimaryPart.CFrame * CFrame.new(0,0,3)
					spawn(function() basicAttack() end)
				end
			end
		end
	end
	game:service'RunService':BindToRenderStep("autoFarm", 1, startAutofarm)



-----

elseif badbus then
	game:GetService("ScriptContext"):SetTimeout(1)
	local module = require(game:GetService("ReplicatedStorage"):WaitForChild("Tortoiseshell"))
	local old = module.Network.Fire
	module.Network.Fire = function(self, ...)
		local args = {...}
		if not checkcaller() then
			if args[1] == "Admin" or args[2] == "Bye" then
				return wait(2e9)    
			end
		end
		return old(self, unpack(args))
	end

	local SilentAim = false
	local fov = 10
	local fov_toggled = false
	local Mouse = game:service'Players'.LocalPlayer:GetMouse();

	local TSize = {};

	shared.iDrawings = shared.iDrawings or {};
	local rad = 50
	local FovGui = shared.iDrawings.FOV_Circle2 or Drawing.new'Circle';
	FovGui.Radius = 50;
	FovGui.Visible = false;
	FovGui.Color = Color3.new(1, 1, 0);
	FovGui.Transparency = .25;
	FovGui.Filled = false;
	FovGui.Thickness = 2;
	FovGui.NumSides = 75;
	FovGui.Position = Vector2.new(Mouse.X, Mouse.Y-2)--Vector2.new(Camera.ViewportSize.X / 2, Camera.ViewportSize.Y / 2);
	shared.iDrawings.FOV_Circle2 = FovGui

	local Tween	= loadstring(game:HttpGet'https://raw.githubusercontent.com/kikito/tween.lua/master/tween.lua')();
	assert(Tween, 'Tween Library unavailable');
	
	function CreateCircleTween(red)
		--shared.iDrawings.FOV_Circle2.Radius = rad

		Tween.new(1 / 2, {
			fov = red;
		}, {
			fov = 100;
		}, 'outBounce');
	end

	function GetMagnitude(Vector)
		return math.sqrt(Vector.x * Vector.x + Vector.y * Vector.y + Vector.z * Vector.z);
	end
	
	function Normalize(Vector)
		return Vector / GetMagnitude(Vector);
	end
	
	function Round(Num, DecimalPlaces)
		local Multiplier = 10 ^ (DecimalPlaces or 0);
		return math.floor(Num * Multiplier + 0.5) / Multiplier;
	end
	
	function GetAngle(Point, Direction, From)
		local Normal = Normalize(Point - From);
		local Cross = Normal:Cross(Direction);
		local Magnitude = GetMagnitude(Cross);
		local DP = Normal:Dot(Direction);
		local Angle = math.atan2(Magnitude, DP) * (180 / math.pi);
		return Angle;
	end
	
	function GetDifference(Num, SNum)
		return math.abs(Num - SNum);
	end
	
	local CachedRadius = setmetatable({}, {
		__index = function(t, i)
			return rawget(t, i) or {
				Radius = 0;
				Angle = 0;
				Difference = 1e9;
			};
		end
	});
	local CI = 0;
	local LT = tick();
	local lastAngle = 0;


	local module = require(game:service'ReplicatedStorage':WaitForChild("Tortoiseshell"));
	local net = module.Projectiles
	local oldFire = net.FireProjectile
	local Players = game:GetService('Players')
	local LocalPlayer = Players.LocalPlayer
	local Mouse = LocalPlayer:GetMouse()
	local Camera = workspace.CurrentCamera
	local RS = game:service'RunService'
	local mainmodule = require(game:GetService("ReplicatedStorage"):WaitForChild("Tortoiseshell"))
	
	function GetNearest()
		local mainmodule = require(game:GetService("ReplicatedStorage"):WaitForChild("Tortoiseshell"))
		local Highest = {9e9};
		local char

		local function Bsearch2(Head, Char)
			if Head and Char then
				if Head and Head.Position.X ~= 0 and Head.Position.Z ~= 0 then
					local enemyChar = Head.Parent.Parent
					local Distance = (Camera.CFrame.p - Head.Position).magnitude;
					local Relative = Char.Hitbox.Head.Position - Camera.CFrame.p;
					local Unit = Relative.unit;

					local DP = (Head.Position - Char.Hitbox.Head.Position).magnitude

					if DP < Highest[1] then
						
						if enemyChar.Hitbox.Parent:FindFirstChild("Health") then
							if enemyChar.Hitbox.Parent.Health.Value > 0 then
								local enmyPlr = require(game:GetService("ReplicatedStorage"):WaitForChild("Tortoiseshell")).Characters:GetPlayerFromCharacter(enemyChar.Hitbox.Parent)
								if enmyPlr then
									if not mainmodule.Teams:ArePlayersFriendly(game:GetService("Players").LocalPlayer, enmyPlr) then
										
										local pos, withinScreenBounds = Camera:WorldToScreenPoint(Head.Position)

										if withinScreenBounds then
											
											local ignorelist = {Char}
											for i,v in pairs(workspace:children'') do
												if v:IsA("Model") then
													table.insert(ignorelist,v)
												end
											end

											local castPoints = {Head.Position}
											local hit = Camera:GetPartsObscuringTarget(castPoints, ignorelist)

											local isHit = false
											for i,v in pairs(hit) do
												if not v:IsDescendantOf(enemyChar) then
													isHit = true
												end
											end
											if isHit == false then
												Angle = Round(GetAngle(Head.Position, Camera.CFrame.lookVector.unit, Camera.CFrame.p), 2);
												if (fov_toggled and Angle < FOV) or not fov_toggled then
													Highest = {DP};
													char = enemyChar.Hitbox
												end
											end

										end
										
									end
								end
							end
						end
					end
					
				end
			end
		end

		
		local Char = require(game:GetService("ReplicatedStorage"):WaitForChild("Tortoiseshell")).Characters:GetCharacter(game:GetService("Players").LocalPlayer)
		for i, v in pairs(game:GetService("Workspace").Characters:GetChildren()) do 
			if v ~= Char then
				if v ~= nil and v:FindFirstChild("Hitbox") then
					if v:FindFirstChild("Hitbox"):FindFirstChild("Head") then
						Bsearch2(v:FindFirstChild("Hitbox").Head, Char)
					end
				end
			end
		end

		return char;
	end
	
	RS:UnbindFromRenderStep'UVAI-SL2';
	
	RS:BindToRenderStep('UVAI-SL2', 1, function()
		local DT = tick() - LT;
		LT = tick();
		local Color = Color3.fromHSV(tick() * 48 % 255/255, 1, 1);
		FovGui.Color = Color;

		local Center = Vector2.new(Camera.ViewportSize.X / 2, Camera.ViewportSize.Y / 2);
		local CF = Camera.CFrame * CFrame.Angles(0, math.rad(CI), 0) * CFrame.new(0, 0, -100);
		CF = CF.p;
		local Angle = Round(GetAngle(CF, Camera.CFrame.lookVector.unit, Camera.CFrame.p), 2);
		local CAng = Round(Angle, 1);

		CI = CI + 0.25;
		if (CI > 90) then CI = -90 end

		local TempPos, X = Camera:WorldToViewportPoint(CF);

		local Point	= TempPos; -- Center + Vector2.new(FOV, FOV);
		local Radius = math.sqrt((Point.X - Center.X)^2 + (Point.Y - Center.Y)^2);
		
		local CS = CachedRadius[CAng];
		local Difference = GetDifference(Angle, CS.Angle);

		if CAng % 1 == 0 and (Difference < CS.Difference or Difference < 0.15) then
			CachedRadius[CAng] = {
				Radius = Radius;
				Angle = Angle;
				Difference = GetDifference(Angle, CachedRadius[FOV].Angle);
			};
		end

		FovGui.Position = Center;
		local FOV = fov
		------///////

		local BestRadius = 0;

		local AimPosition = ZeroVector;
		local ScreenPosition, V = ZeroVector, false;
		
		if CachedRadius[FOV].Radius == 0 then
			BestRadius = Radius;
		else
			BestRadius = CachedRadius[FOV].Radius;
		end
		--warn(BestRadius, FOV)
		shared.iDrawings.FOV_Circle2.Radius = BestRadius
		--[[TSize.Circle.target = {Radius = BestRadius};
		TSize.Circle:update(DT);
		shared.iDrawings.FOV_Circle.Radius = TSize.Circle.subject.Radius]]
	end)
	
	net.FireProjectile = function(self, ...)
		local args = {...}
		if SilentAim and tostring(args[4]) == game.Players.LocalPlayer.Name then
			local target = GetNearest()
			if target then
				if target then
					local Char = require(game:GetService("ReplicatedStorage"):WaitForChild("Tortoiseshell")).Characters:GetCharacter(game:GetService("Players").LocalPlayer)
					
					args[2] = target.Head.Position - args[3]
				end
			end
		end
		return  oldFire(self, unpack(args))
	end
	
	local tab = library:CreateTab("BadBusiness")

	local switch = tab:AddSwitch("Silent Aim", function(state)
		SilentAim = state
	end)

	local tfov = tab:AddSwitch("SilentAim FOV",function(state)
		fov_toggled = state
		if fov_toggled then
			FovGui.Visible = true
			--FovGui.UIGradient.Transparency = NumberSequence.new(.4,.4)
		else
			FovGui.Visible = false
			--FovGui.UIGradient.Transparency = NumberSequence.new(1,1)
		end
	end)

	local fovvv = tab:AddSlider("FOV", 1, 50, function (x) -- Name, min value, max value, callback (slider value return (number))
		fov = tonumber(x) > 0 and tonumber(x) or fov
		--CreateCircleTween(tonumber(x) > 0 and tonumber(x) or fov)
	end)
	fovvv:Set(fov)

	local rec = tab:AddButton("No Recoil", function()
		hookfunction(require(game:GetService("ReplicatedStorage"):WaitForChild("Tortoiseshell")).Camera.FirstPerson.RecoilSpring.Shove, function() end)
		hookfunction(require(game:GetService("ReplicatedStorage"):WaitForChild("Tortoiseshell")).Items.FirstPerson.RecoilSpring.Shove, function() end)   
		hookfunction(require(game:GetService("ReplicatedStorage"):WaitForChild("Tortoiseshell")).Input.Reticle.LookVector, function() return game:GetService("Workspace").CurrentCamera.CFrame.lookVector end)
	end)

elseif bloxb then

	local plr = game:service'Players'.LocalPlayer
	local StylezStations = workspace.StylezHairStudio.HairdresserWorkstations
	local JobHandler = plr.PlayerGui.MainGUI.Scripts.JobManager.StylezHairdresser
	local DataManager = nil
	local SetFunc = nil
	local autofarmEnabled = false
	local changeFuncs = {}

	local l__HairAssets__5 = game:service'ReplicatedStorage':WaitForChild("GameObjects"):WaitForChild("HairAssets");
	local l__Styles__14 = l__HairAssets__5:WaitForChild("Styles");
	local l__Colors__6 = l__HairAssets__5:WaitForChild("Colors");

	local oldNames
	local function SetProx(Type, Textiles)
		if Type == "Style" then
			for i,v in pairs(l__Styles__14:children'') do
			v.Name = Textiles
			end
		else
			for i,v in pairs(l__Colors__6:children'') do
			v.Name = Textiles
			end
		end
	end

	local tab = library:CreateTab("Bloxburg")

	local switch = tab:AddSwitch("Hairdresser Autofarm", function(state)
		autofarmEnabled = state
		repeat wait() until game:service'ReplicatedStorage'.Stats[plr.Name].Job.Value == "StylezHairdresser"
		repeat wait() until (plr.Character.HumanoidRootPart.CFrame.p - CFrame.new(870, 13, 175).p).magnitude < 50
		wait(1)
		plr.Character.HumanoidRootPart.CFrame = CFrame.new(870, 13, 175)
	end)
	
	local canChange = true
	for i,v in pairs(StylezStations:children'') do
		if v.Name == "Workstation" then
			local function completeJob()
				if v.Occupied.Value ~= nil and canChange then
					repeat wait() until v.Occupied.Value:FindFirstChild("Order") and autofarmEnabled
					canChange = false
					wait(0.3)
					local Style = v.Occupied.Value.Order.Style.Value
					local Color = v.Occupied.Value.Order.Color.Value
					
					local workstation = v
					for i,v in pairs(StylezStations:children'') do
						if v.Name == "Workstation" and v.Occupied.Value ~= nil then
							workstation = v
						end
					end
					if #changeFuncs < 1 then
						for i,v in pairs(getgc()) do
							if type(v) == 'function' and not is_synapse_function(v) and islclosure(v) and (not is_protected_closure(v)) and getfenv(v).script == JobHandler then
								if getconstants(v)[16] == "JobCompleted" then
									table.insert(changeFuncs, v)
									SetProx("Style", Style)
									SetProx("Color", Color)
									wait(0.2)
									v("Style_Next")
									v("Color_Next")
									wait(0.2)
									canChange = true
									v("Done")
								end
							end
						end
					elseif type(changeFuncs[1]) == 'function' then
						for i,v in pairs(changeFuncs) do
							if getconstants(v)[16] == "JobCompleted" then
								SetProx("Style", Style)
								SetProx("Color", Color)
								wait(0.2)
								v("Style_Next")
								v("Color_Next")
								wait(0.2)
								canChange = true
								v("Done")
							end
						end
					else
						error("die noob")
					end

				end
			end
			completeJob()

			v.Occupied:GetPropertyChangedSignal("Value"):Connect(completeJob)
		end
	end

elseif wom then
	local uiModule = require(game.ReplicatedStorage.RS.Modules.UI)
	uiModule.Notification(nil, "Hattori [Hub] v3", "Fetching Varaibles..", Color3.fromRGB(0,100,255))
	--// Declare main variables
	local NPCs = workspace.NPCs
	local plr = game:service'Players'.LocalPlayer
	local chr = plr.Character
	local bin = plr.bin
	local MarketplaceService = game:GetService("MarketplaceService");


	--// Feature Variables
	local killAuraEnabled = true
	local alwaysDayEnabled = DefaultSettings["wom"]["alwaysDayEnabled"]
	local infStaminaEnabled =  DefaultSettings["wom"]["infStaminaEnabled"]
	local infAirEnabled =  DefaultSettings["wom"]["infAirEnabled"]
	local equipAllAnimationPacksEnabled = true
	local chestEspEnabled =  DefaultSettings["wom"]["chestEspEnabled"]
	local godModeEnabled =  DefaultSettings["wom"]["godModeEnabled"]
	local autoCatch = false
	local autoCast = true

	spawn(function()
		while wait(40) do -- Autosave settings every 40 secs
			DefaultSettings["wom"]["alwaysDayEnabled"] = alwaysDayEnabled
			DefaultSettings["wom"]["infStaminaEnabled"] = infStaminaEnabled
			DefaultSettings["wom"]["infAirEnabled"] = infAirEnabled
			DefaultSettings["wom"]["chestEspEnabled"] = chestEspEnabled
			DefaultSettings["wom"]["godModeEnabled"] = godModeEnabled
	
			DefaultSettings["UIColorSettings"]["GradientTwoEnabled"] = GradientTwoEnabled
			DefaultSettings["UIColorSettings"]["ColorGradient1"] = {ColorGradient1.r, ColorGradient1.g, ColorGradient1.b}
			DefaultSettings["UIColorSettings"]["ColorGradient2"] = {ColorGradient2.r, ColorGradient2.g, ColorGradient2.b}
	
			Save()
		end
	end)

	--// Non-Boolean variables
	local killAuraRange = 25
	local chestEspColor = Color3.fromRGB(100, 180, 255)
	local chestEspRange = 1000 --// (range should be 200 - 2000)
	local mt = getrawmetatable(game)
	local namecall = mt.__namecall
	local setreadonly = setreadonly or make_writable

	--// Data Tables
	local questList = {
		"DefeatBanditMC",
		"DefeatDarkWizard",
		"KillLightWizard",
		"DefeatDarkWizardVS",
		"DefeatBandit",
		"DefeatBanditVS",
		"KillBountyHunter",
		"DefeatDarkWizardMC",
		"DefeatDarkWizardGroup",
		"DefeatDarkWizardGroupVS",
		"DefeatDarkWizardGroupMC",
		"DefeatBanditGroup",
		"DefeatBanditGroupVS",
		"DefeatBanditGroupMC",
		"KillLightWizardGroup",
		"KillBountyHunterGroup",
		"ClearSmallBanditCamp",
		"ClearSmallBanditCampLW",
		"KillMCScout",
		"KillMCScoutGroup",
		"DestroySmallMCCamp",
		"DefeatPirate",
		"DefeatPirateVS",
		"KillMercenary",
		"ClearSmallPirateShip",
		"ClearSmallPirateShipVS",
		"DestroySmallMercenaryShip",
		"KillHero",
		"DefeatVillain"}

	local questAbbreviations = {
		["Defeat Hero"] = {
			"KillHero",
		},
		["Defeat Villain"] = {
			"DefeatVillain",
		},
		["Defeat Bandit"] = {
			"DefeatBanditMC",
			"DefeatBandit",
			"DefeatBanditVS",
		},
		["Defeat Bandit Group"] = {
			"DefeatBanditGroup",
			"DefeatBanditGroupVS",
			"DefeatBanditGroupMC"
		},
		["Clear Small Bandit Camp"] = {
			"ClearSmallBanditCamp",
			"ClearSmallBanditCampLW",
		},
		["Defeat Dark Wizard"] = {
			"DefeatDarkWizard",
			"DefeatDarkWizardVS",
		},
		["Defeat Light Wizard"] = {
			"KillLightWizard",
		},
		["Kill Light Wizard Group"] = {
			"KillLightWizardGroup",
		},
		["Defeat BountyHunter"] = {
			"KillBountyHunter"
		},
		["Kill BountyHunter Group"] = {
			"KillBountyHunterGroup"
		},
		["Defeat Magic Council Scout"] = {
			"KillMCScout"
		},
		["Kill Magic Council Scout Group"] = {
			"KillMCScoutGroup"
		},
		["Destroy Small MC Camp"] = {
			"DestroySmallMCCamp"
		},
		["Defeat Pirate"] = {
			"DefeatPirate",
			"DefeatPirateVS",
		},
		["Clear Small PirateShip"] = {
			"ClearSmallPirateShip",
			"ClearSmallPirateShipVS",
		},
		["Defeat Mercenary"] = {
			"KillMercenary"
		},
		["Destroy Small Mercenary Ship"] = {
			"DestroySmallMercenaryShip"
		}
	}

	local NpcTypes = {
		["Bandit"] = false,
		["Dark Wizard"] = false,
		["Pirate"] = false,
		["Bounty Hunter"] = false,
		["Wizard"] = false,
		["Mercenary"] = false,
		["Magic Council Guard"] = false, 
		["Magic Council Soldier"] = false, 
		["Magic Council Scout"] = false, 
		["Magic Council Commissioner"] = false, 
		["Magic Council Captain"] = false, 
		["Villain"] = false, 
		["Hero"] = false,
		["Ruler of Summer Hold"] = false,
		["Notorious Criminal"] = false,
		["Wandering Swordsman"] = false,
	}
	wait(0.5)
	uiModule.Notification(nil, "Hattori [Hub] v3", "Declaring Functions..", Color3.fromRGB(0,100,255))
	--// Functions
	local function kill(npc, isKillAura)
		if not isKillAura then
			plr.Character:MoveTo(npc.Head.Position)
			wait(0.5)
		end
		game:GetService("ReplicatedStorage").RS.Remotes.Combat.DealWeaponDamage:FireServer(game:GetService("Players").LocalPlayer.Character, npc, '{"Level":10099,"Name":"Old Dagger"}', "Slash")
	end

	--// Finds closest NPC
	local function getclosestnpc()
		local closestThing = nil
		local shortestDistance = math.huge
		for i, v in pairs(NPCs:GetChildren()) do 
			if v ~= nil and v:FindFirstChild("Attributes") and v.Attributes:FindFirstChild("Health") and v.Attributes.Health.Value > 0 and game:service'Players'.LocalPlayer.Character and game:service'Players'.LocalPlayer.Character:FindFirstChild("Head") then 

				local magnitudee = (v.Head.Position - plr.Character.Head.Position).magnitude

				if magnitudee < shortestDistance and magnitudee < killAuraRange then
					shortestDistance = magnitudee
					closestThing = v
				end
			end
		end
		return closestThing
	end

	local NPC_Bosses = {
		["Notorious Criminal"] = true,
		["Wandering Swordsman"] = true,
		["Ruler of Summer Hold"] = true,
	}

	NPCs.ChildAdded:Connect(function(npc)
		wait(1)
		repeat wait() until npc:FindFirstChild("Attributes")
		local npcType = npc.Attributes.Title.Value
		if NPC_Bosses[npcType] then

			local function callback(text)
				if text == "Yes" then
					warn("Killing: "..tostring(npcType))
					kill(closestNPC, true)
				elseif text == "No" then
					
				end
			end
			
			local bindableFunction = Instance.new("BindableFunction")
			bindableFunction.OnInvoke = callback
			
			game.StarterGui:SetCore("SendNotification", {
				Title = "Boss has spawned"; 
				Text = npcType .. " has spawned, would you like to auto-kill it?";
				Icon = "";
				Duration = 5;
				Callback = bindableFunction;
				Button1 = "Yes";
				Button2 = "No";
			})
		end
	end)

	--// KillAura
	spawn(function()
		while wait(0.25) do
			if killAuraEnabled then
				local closestNPC = getclosestnpc()
				if closestNPC then
					pcall(function()
						local npcType = closestNPC.Attributes.Title.Value
						if NpcTypes[npcType] == true then
							--warn("Killing: "..tostring(npcType))
							kill(closestNPC, true)
						end
					end)
				end
			end
		end
	end)

	--// Auto fish
	local function doFish(a)
		local chr = plr.Character
		if a and a.Name == "FishBiteProgress" and autoCatch then
			local rod = chr:FindFirstChildOfClass("Tool")
			
			if rod and chr:FindFirstChild("BobberVal") then
				repeat wait()
				   v17 = chr.BobberVal.Value
				   if v17 == nil then
					   continue
				   end
					game.ReplicatedStorage.RS.Remotes.Misc.FishState:FireServer("Reel");
				until a == nil or a.Parent == nil
				wait(0.2)
				local ToolAction = game:GetService("ReplicatedStorage").RS.Remotes.Misc.ToolAction
				ToolAction:FireServer(
					rod
				)
				local FishState = game:GetService("ReplicatedStorage").RS.Remotes.Misc.FishState
				FishState:FireServer(
					"StopClock"
				)
				wait(2)
				if autoCast then
					local ToolAction = game:GetService("ReplicatedStorage").RS.Remotes.Misc.ToolAction
					ToolAction:FireServer(
						rod
					)
				end
			end
			
		end
	end
	
	chr.ChildAdded:Connect(doFish)
	plr.CharacterAdded:Connect(function(char)
		chr = char
		wait(3)
		chr.ChildAdded:Connect(doFish)
	end)

	--// Hide Name
	local isHiding = false
	local function hideName()
		spawn(function()
			if not isHiding then
				isHiding = true

				local char = game:GetService("Players").LocalPlayer.Character
				repeat wait(0.1)
					pcall(function()
						char.Head:FindFirstChild("Overhead"):Destroy()
					end)
				until char == nil or char.Parent ~= workspace

				isHiding = false
			end
		end)
	end

	--// Godmode
	local isgm = false
	function doGodMode()
		if isgm then return end
		isgm = true
		local mt = getrawmetatable(game)
		local namecall = mt.__namecall
		local setreadonly = setreadonly or make_writable


		setreadonly(mt, false)

		mt.__namecall = newcclosure(function(self, ...)
			local args = {...}
			local method = getnamecallmethod()

			if method == 'FireServer' and not checkcaller() then
				if self.Name == "DealWeaponDamage" or self.Name == "DealAttackDamage" then
					if args[2] == game:service'Players'.LocalPlayer.Character and godModeEnabled then
						args[2] = nil
					end
				end
			end
			
			return namecall(self, unpack(args))    
		end)
		setreadonly(mt, true)
	end

	--// Rainbow for Chest ESP
	--[[spawn(function()
		while true do
			for hue = 0, 1, 1/60 do
				chestEspColor = Color3.fromHSV(hue, 1, 1)
				wait()
			end
		end
	end)]]

	local esps = {}

	--// Create Esp for chests
	function Create_Esp(part)
		local screen = workspace.CurrentCamera:WorldToViewportPoint(part.Position)
		local name = Drawing.new("Text")
		name.Text = part.Parent.Name
		name.Color = chestEspColor
		name.Position = Vector2.new(screen.x, screen.y)
		name.Size = 20.0
		name.Outline = true
		name.Center = true
		name.Visible = false

		esps[name] = part
	end

	game:GetService("RunService").Stepped:connect(function()
		wait(0.3)
			if chestEspEnabled and game:service'Players'.LocalPlayer.Character and game:service'Players'.LocalPlayer.Character:FindFirstChild("Head") then
				for name, part in pairs(esps) do
					local mag = (part.Position - game:service'Players'.LocalPlayer.Character.Head.Position).magnitude
					if chestEspEnabled and mag < chestEspRange then
						local screen = workspace.CurrentCamera:WorldToViewportPoint(part.Position)
						local destroyed = not part:IsDescendantOf(workspace)
						if destroyed and name ~= nil then
							pcall(function()
								esps[name] = nil
								name:Remove()
							end)
						end
						if part ~= nil then
							pcall(function()
								name.Position = Vector2.new(screen.x, screen.y)
							end)
						else
							pcall(function()
								name.Visible = false
							end)
							pcall(function()
								esps[name] = nil
								name:Remove()
							end)
							pcall(function()
								esps[name] = nil
								name:Remove()
							end)
						end
						local _, screen = workspace.CurrentCamera:WorldToViewportPoint(part.Position)
						local mag = (part.Position - game:service'Players'.LocalPlayer.Character.Head.Position).magnitude
						pcall(function()
							if screen and chestEspEnabled and mag < chestEspRange then
								name.Visible = true
							else
								name.Visible = false
							end
						end)
					elseif name then
						pcall(function()
							name.Visible = false
						end)
					end
				end
			end
	end)

	--// Chest ESP
	local map = workspace.Map:GetChildren()
	for i,v in next,map do
		if v:FindFirstChild("Chests") then
			for i,v in pairs(v.Chests:children'') do
				if v.Name == "Chest" and v:findFirstChild("Base") and v.Base.Transparency == 0 then
					Create_Esp(v.Base)
				end
			end
			v.Chests.ChildAdded:Connect(function(v)
				if v.Name == "Chest" and v:findFirstChild("Base") and v.Base.Transparency == 0 then
					Create_Esp(v.Base)
				end
			end)
		end
	end

	---// Always Day
	game:service'Lighting'.Changed:Connect(function()
		if alwaysDayEnabled then
			game:GetService("Lighting").Ambient = Color3.new(1,1,1)
			game:GetService("Lighting").ClockTime = 14
			game:GetService("Lighting").FogStart = 999999
			game:GetService("Lighting").FogEnd = 999999
			game:GetService("Lighting").Brightness = 1
			game:GetService("Lighting").ColorShift_Top = Color3.fromRGB(255, 255, 255)
			game:GetService("Lighting").ColorShift_Bottom = Color3.fromRGB(255, 255, 255)
		end
	end)

	--// Infinite Stamina
	bin.Stamina.Changed:Connect(function()
		if infStaminaEnabled then
			bin.Stamina.Value = bin.MaxStamina.Value
		end
	end)

	--// Infinite Air
	bin.Air.Changed:Connect(function()
		if infAirEnabled then
			bin.Air.Value = 100
		end
	end)

	local function equipAnimationPack(name)
		require(game.ReplicatedStorage.RS.Modules.Basic).GetAnimationPack = function() return name end
		plr.PlayerScripts.Animate.Disabled = true
		plr.PlayerScripts.Animate.Disabled = false
	end

	--//Do Quest based on Actual QuestName
	local function doKillQuest(selectedQuest)
		for i,v in pairs(NPCs:GetChildren()) do
			if v:FindFirstChild("Data") then
				if v.Data:FindFirstChild("QuestType") then
					if tostring(v.Data.QuestType.Value) == tostring(selectedQuest) then
						plr.Character:MoveTo(v.Head.Position)
						wait(0.5)
						local quest = game:GetService("ReplicatedStorage").RS.Remotes.NPC.Quest:InvokeServer("Accept", v)
						if quest == true then
							repeat wait(0.1) until plr.bin.QuestType.Value ~= ""
							--kill(v.Data.QuestItem1.Value)
							for i,v in pairs(v.Data:children'') do
								if v.Name:lower():find("questitem") then
									kill(v.Value)
									wait(1)
								end
							end
							wait(1)
							plr.Character:MoveTo(v.Head.Position)
							wait(1)
							game:GetService("ReplicatedStorage").RS.Remotes.NPC.Dialog:InvokeServer(v, "Start")
							wait(0.4)
							game:GetService("ReplicatedStorage").RS.Remotes.NPC.Dialog:InvokeServer(v, "End")
							return true
						else
							return quest
						end
					end
				end
			end
		end
	end


	--// Complete Quest from list
	local function doAbbrevdQuest(name)
		for i,v in pairs(questAbbreviations) do
			if i == name then
				for i,v in pairs(v) do
					local questAccepted = doKillQuest(v)
					if questAccepted == true then
						--warn'Ended Quest!'
						break
					end
				end
				--warn'Found no acceptable quests!'
				return
			end
		end
		--warn'Quest name does not exist'
	end

	--doAbbrevdQuest("Defeat Dark Wizard")

	--equipAnimationPack("Boss")
	--equipAnimationPack("Coward")
	--equipAnimationPack("Standard")
	wait(0.5)
	--// Library Functions
	--// Create Tabs
	uiModule.Notification(nil, "Hattori [Hub] v3", "Initializing UI..", Color3.fromRGB(0,100,255))
	local PlayerTab = library:CreateTab("Player")
	local CharTab = library:CreateTab("Character")
	local CombTab = library:CreateTab("Killaura")
	local QTab = library:CreateTab("Complete Quest")
		
	--// Create Functions
	aDay = PlayerTab:AddSwitch("Always Day", function(state)
		alwaysDayEnabled = state
	end)
	aDay:Set(alwaysDayEnabled)

	iStam = PlayerTab:AddSwitch("Infinite Stamina", function(state)
		infStaminaEnabled = state
	end)
	iStam:Set(infStaminaEnabled)

	iAir = PlayerTab:AddSwitch("Infinite Air", function(state)
		infAirEnabled = state
	end)
	iAir:Set(infAirEnabled)

	cEsp = PlayerTab:AddSwitch("Chest ESP", function(state)
		chestEspEnabled = state

		if not state then
			for name, part in pairs(esps) do
				name.Visible = false
			end
		end
	end)
	cEsp:Set(chestEspEnabled)

	local ce_Range = PlayerTab:AddSlider("Chest ESP Range", 200, 2000, function(x)
		chestEspRange = x
	end)
	ce_Range:Set(chestEspRange)

	auCtch = PlayerTab:AddSwitch("Fishing-AutoCatch", function(state)
		autoCatch = state
	end)

	hName = CharTab:AddButton("Hide Name", function()
		hideName()
	end)

	gMode = CharTab:AddButton("Godmode (Breaks Damage)", function()
		doGodMode()
	end)

	eStandard = CharTab:AddButton("Equip Standard Animations", function()
		equipAnimationPack("Standard")
	end)

	eCoward = CharTab:AddButton("Equip Coward Animations", function()
		equipAnimationPack("Coward")
	end)

	eBoss = CharTab:AddButton("Equip Boss Animations", function()
		equipAnimationPack("Boss")
	end)

	bCuffs = CharTab:AddButton("Break Handcuffs", function()
		pcall(function()
			game:GetService("Players").LocalPlayer.Character.Jailed:Destroy()
		end)
	end)

	for i,v in pairs(NpcTypes) do
		KAEnabled = CombTab:AddSwitch(i, function(state)
			NpcTypes[i] = state
		end)
	end

	local ka_Range = CombTab:AddSlider("Kill Aura Range", 5, 45, function(x)
		killAuraRange = x
	end)
	ka_Range:Set(killAuraRange)

	local info = QTab:NewHeader("-- Auto Insta-Complete Quest --")

	local curList = {}
	for i,v in pairs(questAbbreviations) do
		table.insert(curList, i)
	end

	local autoQuest = QTab:AddDrop("Select Quest", curList, function(selectedASD)
		doAbbrevdQuest(selectedASD)
	end)

	local clearStat = QTab:AddButton("Reset Damage Stats", function(selectedASD)
		local char = game:GetService("Players").LocalPlayer.Character

		for i,v in pairs(workspace.NPCs:GetChildren()) do
			if v:FindFirstChild("Attributes") then
				if v.Attributes:FindFirstChild("Title") then
					--pcall(function()
						local rep = plr.bin.Reputation.Value
						if tostring(rep):find("-") then
							if v.Attributes.Title.Value == "Magic Council Scout" then
								local oldpos = plr.Character.HumanoidRootPart.CFrame
								plr.Character.HumanoidRootPart.CFrame = v.Head.CFrame
								local magic = plr.PlayerGui.MainGui.UI.Magic.Frame.List.Magic1.Frame.MagicName.Text:gsub(" Magic", "")
								

								local npc = v
								local stats = '["Blast Attack",1,100,100,false,"Right Hand","Ultra","Blast","'..magic..'","'..magic..'"]'
								local manaCharged = 0/0
								wait(1)
								game:GetService("ReplicatedStorage").RS.Remotes.Magic.UseSkill:FireServer(1, 1)
								game:GetService("ReplicatedStorage").RS.Remotes.Magic.EndCharge:FireServer(npc.Head.Position)
								game:GetService("ReplicatedStorage").RS.Remotes.Magic.UserStatusEffect:FireServer(char, magic.." Magic", 2)
								game:GetService("ReplicatedStorage").RS.Remotes.Magic.DealAttackDamage:FireServer(char, npc, magic.." Magic", "2", stats, manaCharged)
								wait(0.3)
								plr.Character.HumanoidRootPart.CFrame = oldpos
								break
							end
						else
							if v.Attributes.Title.Value == "Bandit" then
								local oldpos = plr.Character.HumanoidRootPart.CFrame
								plr.Character.HumanoidRootPart.CFrame = v.Head.CFrame * CFrame.new(0,0,8)
								local magic = plr.PlayerGui.MainGui.UI.Magic.Frame.List.Magic1.Frame.MagicName.Text:gsub(" Magic", "")
								local npc = v
								local stats = '["Blast Attack",1,100,100,false,"Right Hand","Ultra","Blast","'..magic..'","'..magic..'"]'
								local manaCharged = 0/0
								warn(magic.."Attack")
								wait(1)
						
								game:GetService("ReplicatedStorage").RS.Remotes.Magic.UseSkill:FireServer(1, 1)
								game:GetService("ReplicatedStorage").RS.Remotes.Magic.EndCharge:FireServer(npc.Head.Position)
								game:GetService("ReplicatedStorage").RS.Remotes.Magic.UserStatusEffect:FireServer(char, magic.." Magic", 2)
								game:GetService("ReplicatedStorage").RS.Remotes.Magic.DealAttackDamage:FireServer(char, npc, magic.." Magic", "2", stats, manaCharged)
								wait(0.3)
								plr.Character.HumanoidRootPart.CFrame = oldpos
								break
							end
						end
					--end)
				end
			end
		end

	end)
	wait(0.5)
	uiModule.Notification(nil, "Hattori [Hub] v3", "Success!", Color3.fromRGB(0,100,255))
	wait(0.5)
	uiModule.Notification(nil, "WARNING", "[Hattori [Hub] v3]\nBe cautious, the game may update and patch anything at any time. Do not use quest auto-completer too much, as you may get detected if you abuse it.\nLast updated on version: 1.1.3 / 7/22/2020", Color3.fromRGB(255,0,0))
	
	
	--[[local NPCTypes = {
		[""],
	}

	for i,v in pairs(NPCTypes) do
		NTab:AddButton(i, function()
			--// find npc type and tp to it
		end)
	end]]

elseif sl2 then

	local char = game.Players.LocalPlayer.Character
	repeat wait() until game.Players.LocalPlayer:FindFirstChild("startevent")

	local canKillNPC = true
	local shouldNoClip = false

	if not DefaultSettings["sl2"] or not DefaultSettings["sl2"]["killaura_Enabled2"] then
		DefaultSettings["sl2"] = {
				["bossOnly"] = false,
				["distUnderNPC"] = 0,
				["killaura_Enabled"] = false,
				["sniper_Enabled"] = true,
				["autokill_Jins"] = false,
				["PublicHopMethod2"] = false,
				["messageOnModJoin"] = false,
				["kickOnModJoin"] = false,
				["includeTesterAsMod"] = false,
				["untilBossSpawns"] = false,
				["untilRound"] = 21,
				["killaura_Enabled2"] = false,
			}
	end

	local bossOnly = DefaultSettings["sl2"]["bossOnly"]
	local distUnderNPC = DefaultSettings["sl2"]["distUnderNPC"]
	local autofarm_Enabled = false
	local killaura_Enabled = DefaultSettings["sl2"]["killaura_Enabled"]
	local killaura_Enabled2 = DefaultSettings["sl2"]["killaura_Enabled2"]
	local killauraRange = 30000
	local waitTimeKillaura = 3
	local sniper_Enabled = DefaultSettings["sl2"]["sniper_Enabled"]
	local autokill_Jins = DefaultSettings["sl2"]["autokill_Jins"]
	local messageOnModJoin = DefaultSettings["sl2"]["messageOnModJoin"]
	local kickOnModJoin = DefaultSettings["sl2"]["kickOnModJoin"]
	local includeTesterAsMod = DefaultSettings["sl2"]["includeTesterAsMod"]
	local untilBossSpawns = DefaultSettings["sl2"]["untilBossSpawns"]
	local untilRound = DefaultSettings["sl2"]["untilRound"]

	spawn(function()
		while wait(20) do -- Autosave settings every 20 secs
	
			DefaultSettings["sl2"]["distUnderNPC"] = bossOnly
			DefaultSettings["sl2"]["distUnderNPC"] = distUnderNPC
			DefaultSettings["sl2"]["killaura_Enabled"] = killaura_Enabled
			DefaultSettings["sl2"]["sniper_Enabled"] = sniper_Enabled
			DefaultSettings["sl2"]["autokill_Jins"] = autokill_Jins
			DefaultSettings["sl2"]["PublicHopMethod2"] = PublicHopMethod2

			DefaultSettings["sl2"]["messageOnModJoin"] = messageOnModJoin
			DefaultSettings["sl2"]["kickOnModJoin"] = kickOnModJoin
			DefaultSettings["sl2"]["includeTesterAsMod"] = includeTesterAsMod
			DefaultSettings["sl2"]["untilBossSpawns"] = untilBossSpawns
			DefaultSettings["sl2"]["untilRound"] = untilRound
	
			Save()
		end
	end)

	local isReady2 = false

	local uniData = game:service'HttpService':JSONDecode(game:HttpGet("https://games.roblox.com/v1/games?universeIds=1511883870")).data[1]
	--table.foreach(uniData, warn)
	local lastUpdated = "2020-10-17T00:07:19.76Z"
	local currentUpdated = uniData.updated

	if lastUpdated == currentUpdated then
		isReady2 = true
	else
		local Tab = Instance.new("ImageLabel")
		local Body = Instance.new("TextLabel")
		local Container = Instance.new("Frame")
		local UIListLayout = Instance.new("UIListLayout")
		local Body_2 = Instance.new("TextLabel")
		local Yes = Instance.new("TextButton")

		Tab.Name = HttpService:GenerateGUID(false)
		Tab.Parent = Design1
		Tab.AnchorPoint = Vector2.new(0.5, 0.5)
		Tab.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		Tab.BackgroundTransparency = 1.000
		Tab.BorderColor3 = Color3.fromRGB(27, 42, 53)
		Tab.Position = UDim2.new(0.5, 0, 0.5, -100)
		Tab.Size = UDim2.new(0, 444, 0, 51)
		Tab.Image = "rbxassetid://605740338"
		Tab.ImageColor3 = Color3.fromRGB(30, 30, 30)
		Tab.ScaleType = Enum.ScaleType.Slice
		Tab.SliceCenter = Rect.new(24, 24, 24, 24)
		Tab.SliceScale = 2.000

		Body.Name = HttpService:GenerateGUID(false)
		Body.Parent = Tab
		Body.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
		Body.BackgroundTransparency = 1.000
		Body.BorderSizePixel = 0
		Body.Size = UDim2.new(1, 0, 0.86739397, 0)
		Body.Font = Enum.Font.GothamSemibold
		Body.Text = "WARNING - GAME HAS UPDATED"
		Body.TextColor3 = Color3.fromRGB(255, 255, 255)
		Body.TextSize = 15.000
		Body.TextWrapped = true

		Container.Name = HttpService:GenerateGUID(false)
		Container.Parent = Tab
		Container.BackgroundColor3 = Color3.fromRGB(41, 42, 43)
		Container.BorderColor3 = Color3.fromRGB(255, 85, 127)
		Container.BorderSizePixel = 0
		Container.Position = UDim2.new(0, 0, 0.86739397, 0)
		Container.Size = UDim2.new(1.00000012, 0, 1.82999551, 35)

		UIListLayout.Parent = Container
		UIListLayout.SortOrder = Enum.SortOrder.LayoutOrder
		UIListLayout.Padding = UDim.new(0, 6)

		Body_2.Name = HttpService:GenerateGUID(false)
		Body_2.Parent = Container
		Body_2.BackgroundColor3 = Color3.fromRGB(41, 42, 43)
		Body_2.BackgroundTransparency = 1.000
		Body_2.BorderColor3 = Color3.fromRGB(27, 42, 53)
		Body_2.BorderSizePixel = 0
		Body_2.Size = UDim2.new(1, 0, 1, 0)
		Body_2.Font = Enum.Font.GothamSemibold
		Body_2.Text = [[Hattori has not updated yet!
		To be safe please either only use this on an Alt, or wait until Hattori updates. 
		
		Do you wish to continue?]]
		Body_2.TextColor3 = Color3.fromRGB(255, 255, 255)
		Body_2.TextSize = 18.000
		Body_2.TextWrapped = true

		Yes.Name = HttpService:GenerateGUID(false)
		Yes.Parent = Container
		Yes.BackgroundColor3 = Color3.fromRGB(41, 42, 43)
		Yes.BorderSizePixel = 0
		Yes.Position = UDim2.new(0, 0, 1.03896213, 0)
		Yes.Size = UDim2.new(0, 444, 0, 33)
		Yes.Font = Enum.Font.GothamSemibold
		Yes.Text = "Yes"
		Yes.TextColor3 = Color3.fromRGB(255, 85, 127)
		Yes.TextSize = 20.000

		Yes.MouseButton1Down:Connect(function()
			isReady2 = true
			Tab:Destroy()
		end)
	end

	repeat wait() until isReady2
	repeat wait() until game.Players.LocalPlayer.PlayerGui:FindFirstChild("Main")

	game:getService("RunService"):UnbindFromRenderStep("noclOppl")
	game:getService("RunService"):BindToRenderStep("noclOppl",0,function()
		pcall(function()
			local char = game.Players.LocalPlayer.Character or game.Players.LocalPlayer.CharacterAdded:Wait()
			if shouldNoClip then
				pcall(function()
					local char = game.Players.LocalPlayer.Character or game.Players.LocalPlayer.CharacterAdded:Wait()
					char.Humanoid:ChangeState(11)
				end)
			elseif char.Humanoid:GetState() == 11 then
				pcall(function()
					local char = game.Players.LocalPlayer.Character or game.Players.LocalPlayer.CharacterAdded:Wait()
					char.Humanoid:ChangeState(1)
				end)
			end
		end)
	end)

	if workspace:FindFirstChild("CCoff") then
		workspace:FindFirstChild("CCoff"):Destroy()
	end
	workspace.ChildAdded:Connect(function(p)
		if p.Name == "CCoff" then
			p:Destroy()
		end
	end)
	

	local old
	setreadonly(getrenv().table, false)
	old = hookfunction(getrenv().table.insert, function(tab, ...)
		if #tab == 1 and not checkcaller() then
			for i,v in pairs(tab) do
				if typeof(v) == 'Vector3' or typeof(v) == 'CFrame' then
					return
				end
			end
		end
		
		return old(tab, ...)
	end)
	setreadonly(getrenv().table, true)


	local killedLastNPC = false
	local function killNPC(npc, iskillaura)
		if not iskillaura then
			killedLastNPC = false
			pcall(function()
				local char = game.Players.LocalPlayer.Character
				char.HumanoidRootPart.CFrame = npc.HumanoidRootPart.CFrame * CFrame.new(0,distUnderNPC,2)
				char.combat.update:FireServer("mouse1", true)
				char.combat.update:FireServer("mouse1", false)
				npc.Humanoid.Health = npc.Humanoid.MaxHealth
				npc.Humanoid.Health = 0
				repeat wait()
					local char = game.Players.LocalPlayer.Character
					char.combat.update:FireServer("mouse1", true)
					char.combat.update:FireServer("mouse1", false)
					char.HumanoidRootPart.CFrame = npc.HumanoidRootPart.CFrame * CFrame.new(0,distUnderNPC,2)
					char.HumanoidRootPart.CFrame = CFrame.new((npc.HumanoidRootPart.CFrame * CFrame.new(0,distUnderNPC,2)).p, npc.HumanoidRootPart.CFrame.p)
					npc.Humanoid.Health = npc.Humanoid.MaxHealth
					wait()
					npc.Humanoid.Health = 0
				until
					npc == nil or npc.Parent == nil or npc.fakehealth.Value == 0 or game.Players.LocalPlayer.PlayerGui.Main.ingame.Missionstory.Visible == false or killedLastNPC

				killedLastNPC = true
			end)
		else
			pcall(function()
				repeat wait()
					npc.Humanoid.Health = npc.Humanoid.MaxHealth
					wait()
					npc.Humanoid.Health = 0
				until
					npc == nil or npc.Parent == nil or npc.fakehealth.Value == 0
			end)
		end
	end

	local function disableMovementCooldowns()
		pcall(function()
			spawn(function()
				while game.Players.LocalPlayer.Character do
					game:GetService'RunService'.RenderStepped:Wait()
					local chr = game.Players.LocalPlayer.Character
					local combat = chr.combat 
					combat.disable.Value = false
					combat.canrun.Value = false
					combat.combat.delayfront.Value = false
					if combat:FindFirstChild("landed") then
						combat:FindFirstChild("landed"):Destroy()
					end
					if combat:FindFirstChild("attacked") then
						combat:FindFirstChild("attacked"):Destroy()
					end
					if combat:FindFirstChild("slowdown") then
						combat:FindFirstChild("slowdown"):Destroy()
					end
					if combat:FindFirstChild("nowalk") then
						combat:FindFirstChild("nowalk"):Destroy()
					end
					if combat:FindFirstChild("nomove") then
						combat:FindFirstChild("nomove"):Destroy()
					end
					combat.charge.Value = false
					combat.bind.Value = false
					combat.grip.Value = false
				end
			end)
		end)
	end
	local gettingQuest = false
	local function getQuest()
		local quests = {}
		local npcs = workspace.missiongivers
		for i,v in pairs(npcs:GetChildren()) do
			if v:FindFirstChild("Talk") then
				if v:FindFirstChild("Head") and v.Head.givemission.Enabled == true and v.Head.givemission.color.Image == "http://www.roblox.com/asset/?id=5459241648" or v.Head.givemission.color.Image == "http://www.roblox.com/asset/?id=5459241799" then
					table.insert(quests, v)
				end
			end
		end

		for i,v in pairs(quests) do
			if v:FindFirstChild("Talk") then
				if v:FindFirstChild("Head") and v.Head.givemission.Enabled == true then
					if not bossOnly and v.Head.givemission.color.Image == "http://www.roblox.com/asset/?id=5459241648" then
						if game.Players.LocalPlayer.PlayerGui.Main.ingame.Missionstory.Visible == false then
							gettingQuest = true
							game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = v.HumanoidRootPart.CFrame * CFrame.new(0,distUnderNPC,0)
							repeat wait() 
								v.CLIENTTALK:FireServer()
								v.CLIENTTALK:FireServer("accept")
							until
								game.Players.LocalPlayer.PlayerGui.Main.ingame.Missionstory.Visible == true or not gettingQuest
						end
					elseif bossOnly then
						if game.Players.LocalPlayer.statz.lvl.lvl.Value > 700 then
							if v.Head.givemission.color.Image == "http://www.roblox.com/asset/?id=5459241799" or v.Head.givemission.color.Image == "http://www.roblox.com/asset/?id=5459241648" then  
								if game.Players.LocalPlayer.PlayerGui.Main.ingame.Missionstory.Visible == false then
									gettingQuest = true
									game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = v.HumanoidRootPart.CFrame * CFrame.new(0,distUnderNPC,0)

									repeat wait() 
										v.CLIENTTALK:FireServer()
										v.CLIENTTALK:FireServer("accept")
									until
										game.Players.LocalPlayer.PlayerGui.Main.ingame.Missionstory.Visible == true or not gettingQuest
								end
							end
						elseif v.Head.givemission.color.Image == "http://www.roblox.com/asset/?id=5459241648" then
							if game.Players.LocalPlayer.PlayerGui.Main.ingame.Missionstory.Visible == false then
								gettingQuest = true
								game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = v.HumanoidRootPart.CFrame * CFrame.new(0,distUnderNPC,0)

								repeat wait() 
									v.CLIENTTALK:FireServer()
									v.CLIENTTALK:FireServer("accept")
								until
									game.Players.LocalPlayer.PlayerGui.Main.ingame.Missionstory.Visible == true or not gettingQuest
							end
						end
					end
				end
			end
		end
		return game.Players.LocalPlayer.PlayerGui.MissionSystem.Target
	end
	wait()

	game:GetService("RunService").RenderStepped:Connect(function()
		setsimulationradius(math.huge)
	end)
	
	local function killNPC2(npc, iskillaura)
		wait(waitTimeKillaura)
		pcall(function()
			repeat wait()
				npc.Humanoid.Health = npc.Humanoid.MaxHealth
				wait()
				npc.Humanoid.Health = 0
			until
				npc == nil or npc.Parent == nil or npc.fakehealth.Value == 0
		end)
	end
	
	spawn(function()
			while wait() do
				if killaura_Enabled2 then
					pcall(function()
						for i,v in pairs(workspace.npc:children'') do
							if (v.HumanoidRootPart.Position - game.Players.LocalPlayer.Character.HumanoidRootPart.Position).magnitude < killauraRange then
								spawn(function()
									killNPC2(v, true)
								end)
							end
						end
					end)
				end
			end
		end)

	local function cancelQuest()
		local chatbox = game.Players.LocalPlayer.PlayerGui.Chat.Frame.ChatBarParentFrame.Frame.BoxFrame.Frame.ChatBar 
	
		chatbox.Text = [[!cancel]]
	
		for i,v in pairs(getconnections(chatbox.FocusLost)) do
			v.Function(true)
		end
	end

	local foundQuest = false
	local questFinished = false
	local function completeQuest()

		pcall(function()
			foundQuest = false
			shouldNoClip = true
			repeat wait(0.1)
				if not game.Players.LocalPlayer.PlayerGui.Main.ingame.Missionstory.Visible == true and not gettingQuest then
					game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(0,0,0)
				end
				getQuest()
			until
				game.Players.LocalPlayer.PlayerGui.Main.ingame.Missionstory.Visible == true

			gettingQuest = false
			while not foundQuest do wait()
				shouldNoClip = true
				for i,v in pairs(workspace.npc:GetChildren()) do
					if v and v:FindFirstChild("thething") and v.Torso:FindFirstChild("enemy") and game.Players.LocalPlayer.PlayerGui.Main.ingame.Missionstory.Visible == true then
						local target = game.Players.LocalPlayer.PlayerGui.Target.Adornee 
						if (target.CFrame.p - v.HumanoidRootPart.CFrame.p).magnitude < 100 then
							spawn(function()
								killNPC(v)
							end)
							local i = 0
							repeat wait(1) i = i + 1 if i >= 5 then killedLastNPC = true cancelQuest() gettingQuest = false end until killedLastNPC == true or not gettingQuest
						end
					end
				end
				if game.Players.LocalPlayer.PlayerGui.Main.ingame.Missionstory.Visible == false then
					foundQuest = true
					shouldNoClip = false
					questFinished = true
					gettingQuest = false
				end
			end
		end)
	end

	local invisible = function()
		local Character = game:GetService("Players").LocalPlayer.Character
		local Clone = Character.HumanoidRootPart.RootJoint:Clone()
		Character.HumanoidRootPart.RootJoint:Destroy()
		Clone.Parent = Character.Torso
		game.StarterGui:SetCore("SendNotification", {
			Title = "Invisibility Enabled"; 
			Text = "It will stop working when you die or reset, and does not work with autofarm. Use at your own risk.";
			Duration = 5; 
		})
	end

	local function rejoinServer()
		game.Players.LocalPlayer.startevent:FireServer("play");
		game.Players.LocalPlayer.startevent:FireServer("rpgteleport", game.PlaceId);
	end

	local function godmode()
		pcall(function()
			local old = game.Players.LocalPlayer.Character:FindFirstChild("fakehealth")
			local new = old:Clone()
			new.Parent = old.Parent
			old:Destroy()
			game.Players.LocalPlayer.Character.ChildAdded:Connect(function(s)
				if s.Name == "stayonground" then
					s:Destroy()
				end
			end)
		end)
	end

	local function antigrip()
		for i,s in pairs(game.Players.LocalPlayer.Character:children'') do
			if s.Name == "stayonground" then
				s:Destroy()
			end
		end
		game.Players.LocalPlayer.Character.ChildAdded:Connect(function(s)
			if s.Name == "stayonground" then
				s:Destroy()
			end
		end)
		for i,s in pairs(game.Players.LocalPlayer.Character.HumanoidRootPart:children'') do
			if s.Name == "KO" then
				s:Destroy()
			end
		end
		game.Players.LocalPlayer.Character.HumanoidRootPart.ChildAdded:Connect(function(s)
			if s.Name == "KO" then
				s:Destroy()
			end
		end)
		spawn(function()
			pcall(function()
				while game.Players.LocalPlayer.Character do
					game:GetService'RunService'.RenderStepped:Wait()
					local chr = game.Players.LocalPlayer.Character or game.Players.LocalPlayer.CharacterAdded:Wait()
					local combat = chr.combat 
					combat.disable.Value = false
					combat.canrun.Value = false
					combat.combat.delayfront.Value = false
					if combat:FindFirstChild("landed") then
						combat:FindFirstChild("landed"):Destroy()
					end
					if combat:FindFirstChild("attacked") then
						combat:FindFirstChild("attacked"):Destroy()
					end
					if combat:FindFirstChild("slowdown") then
						combat:FindFirstChild("slowdown"):Destroy()
					end
					if combat:FindFirstChild("nowalk") then
						combat:FindFirstChild("nowalk"):Destroy()
					end
					if combat:FindFirstChild("nomove") then
						combat:FindFirstChild("nomove"):Destroy()
					end
					combat.charge.Value = false
					combat.bind.Value = false
					combat.grip.Value = false
				end
			end)
		end)
	end

	local function tpquesttarg()
		pcall(function()
			local target = game.Players.LocalPlayer.PlayerGui.Target.Adornee 
			game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = target.CFrame
		end)
	end

	spawn(function()
		while wait() do
			if killaura_Enabled then
				pcall(function()
    				for i,v in pairs(workspace.npc:children'') do
    					if (v.HumanoidRootPart.Position - game.Players.LocalPlayer.Character.HumanoidRootPart.Position).magnitude < 30 then
    						killNPC(v, true)
    					end
    				end
    			end)
			end
		end
	end)

	spawn(function()
		while wait() do
			pcall(function()
				if autofarm_Enabled then
					completeQuest()
					repeat wait() until game.Players.LocalPlayer.PlayerGui.Main.ingame.Missionstory.Visible == false or not questFinished or questFinished
					questFinished = false
					shouldNoClip = false
					foundQuest = true
				else
					foundQuest = true
					shouldNoClip = false
					questFinished = false
					shouldNoClip = false
					foundQuest = true
				end
			end)
		end
	end)
	local alreadygot = {}
	local function getAdded(thing)
		local model = nil
		local clickDetector = nil
		local name = ""
		local sh = thing:FindFirstChild("sh")
		if sh then
			local cf = sh.CFrame.p 
			if cf ~= Vector3.new(0, -40000, 0) then
				model = thing
				name = model.Name
				clickDetector = sh:FindFirstChildOfClass("ClickDetector")
			end
			if model.Name:find("tentail") then
				foundBossScroll = true
			end
		end
		if sh and sh:FindFirstChild("invoke") then
			local unlocked = game.Players.LocalPlayer.statz.unlocked
			if not unlocked:FindFirstChild(tostring(name):lower().."scroll") then
				if not alreadygot[thing] then
					game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = sh.CFrame
					wait()
					alreadygot[model] = true
					game.StarterGui:SetCore("SendNotification", {
						Title = "Scroll Sniper"; 
						Text = "Scroll Sniped "..name.."";
						Duration = 5; 
					})
				end
				game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = sh.CFrame
				wait()
				sh.invoke:FireServer(game.Players.LocalPlayer)
			end
		end
		if clickDetector then
			local unlocked = game.Players.LocalPlayer.statz.unlocked
			if not unlocked:FindFirstChild(tostring(name):lower().."scroll") then
				if not alreadygot[thing] then
					game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = sh.CFrame
					wait()
					alreadygot[model] = true
					game.StarterGui:SetCore("SendNotification", {
						Title = "Scroll Sniper"; 
						Text = "Scroll Sniped "..name.."";
						Duration = 5; 
					})
				end
				game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = sh.CFrame
				wait()
				fireclickdetector(clickDetector)
			end
		end
	end


	spawn(function()
		game:GetService'RunService'.RenderStepped:Connect(function()
			if sniper_Enabled then
				spawn(function()
					for i,thing in pairs(workspace:GetChildren'') do
						getAdded(thing)
					end
				end)
				spawn(function()
					for i,thing in pairs(workspace.GLOBALTIME:children'') do
						getAdded(thing)
					end
				end)
			end
			if autokill_Jins then
				pcall(function()
					spawn(function()
						for i,thing in pairs(workspace.npc:children'') do
							if thing:FindFirstChild("megaboss") and thing:FindFirstChild("HumanoidRootPart") and thing.HumanoidRootPart.CFrame.Y > -500 then
								killNPC(thing)
							end
						end
					end)
				end)
			end
		end)
	end)

	local AutoTab = library:CreateTab("Shinobi Life 2")
	
	local function hideName()
		local chatbox = game.Players.LocalPlayer.PlayerGui.Chat.Frame.ChatBarParentFrame.Frame.BoxFrame.Frame.ChatBar 
	
		chatbox.Text = [[!name a 
	
		]]
	
		for i,v in pairs(getconnections(chatbox.FocusLost)) do
			v.Function(true)
		end
	end

	local function showName()
		local chatbox = game.Players.LocalPlayer.PlayerGui.Chat.Frame.ChatBarParentFrame.Frame.BoxFrame.Frame.ChatBar 
	
		chatbox.Text = [[!name N/A]]
	
		for i,v in pairs(getconnections(chatbox.FocusLost)) do
			v.Function(true)
		end
	end
	
	local mt = getrawmetatable(game)
	local namecall = mt.__namecall
	local setreadonly = setreadonly or make_writable
	
	
	setreadonly(mt, false)
	
	mt.__namecall = newcclosure(function(self, ...)
		local args = {...}
		local arguments = args
		local a = {}
		for i = 1, #arguments - 1 do
			a[i] = arguments[i]
		end
		local method = getnamecallmethod()
	
		if method == 'FireServer' then
			for a,c in pairs(args) do
				if tostring(c):find("!name a") then
					return
				end
				if tostring(c):find("!name N/A") then
					return
				end
				if tostring(c):find("!cancel") then
					return
				end
			end
		end
		
		return namecall(self, ...)    
	end)
	
	setreadonly(mt, true)
	autfsw = AutoTab:AddButton("Hide name", hideName)	
	autfsw = AutoTab:AddButton("Show name", showName)

	autfsw = AutoTab:AddSwitch("Autofarm", function(state)
		autofarm_Enabled = state
	end)
	autfsw = AutoTab:AddSwitch("+ boss missions", function(state)
		bossOnly = state
	end)
	autfsw:Set(bossOnly)

	autfsw = AutoTab:AddSlider("Distance from npc", 0, -15, function(state)
		distUnderNPC = state
	end)
	autfsw:Set(distUnderNPC)

	autfsw = AutoTab:AddSwitch("Scroll sniper", function(state)
		sniper_Enabled = state
	end)
	autfsw:Set(sniper_Enabled)

	autfsw = AutoTab:AddSwitch("Autokill Jins", function(state)
		autokill_Jins = state
	end)
	autfsw:Set(autokill_Jins)
	
	autfsw = AutoTab:AddSwitch("Killaura", function(state)
		killaura_Enabled = state
	end)

	local VirtualUser = game:service'VirtualUser'
	game:service'Players'.LocalPlayer.Idled:connect(function()
		if _G.AntiAfk then
			VirtualUser:CaptureController()
			VirtualUser:ClickButton2(Vector2.new())
		end
	end)
	_G.AntiAfkTab = AutoTab:AddSwitch("Anti AFK", function(state)
		_G.AntiAfk = state
	end)
	_G.AntiAfkTab:Set(_G.AntiAfk)

	autfsw = AutoTab:AddButton("Godmode", godmode)
	autfsw = AutoTab:AddButton("Anti-grip", antigrip)
	--autfsw = AutoTab:AddButton("Invisibility", invisible)
	autfsw = AutoTab:AddButton("Rejoin server", rejoinServer)
	autfsw = AutoTab:AddButton("Tp to quest target", tpquesttarg)
	autfsw = AutoTab:AddButton("No movement coold", disableMovementCooldowns)

	local runSpeed = 16
	local runspdMod = false
	autfsw = AutoTab:AddSwitch("Run speed modifier", function(state)
		runspdMod = state
	end)
	autfsw = AutoTab:AddSlider("     + Run Speed", 16, 100, function(state)
		runSpeed = state
	end)
	autfsw = AutoTab:AddButton("Infinite Mode", function()
		pcall(function()
			local currentmode = game.Players.LocalPlayer.Character.combat.KG.currentmode 
			if currentmode.Value ~= "" or currentmode.Parent.currentkg.Value ~= "" then
				local c = game.Players.LocalPlayer.Character.combat.mode
				local s = c:Clone()
				s.Parent = c.Parent
				c:Destroy()
			end
		end)
	end)
	local hasClicked = false
	local function infSpins()
		if shared.key == "Key_RdQ7BKUicpwXEBaw0bqlS1Up5n8EffQy" or shared.key == "Key_Ts8p4T6qCD9aTb5PzWm5U1BNWn9FAlKp" or shared.key == "Key_XOqdwfKe673bYz0rlFIPiDkglieAfyfP" then
			hasClicked = true
			return
		end
		if not hasClicked then

			hasClicked = true
			if game.PlaceId == 4616652839 then
				local twitter = game.Players.LocalPlayer.statz.twitter 
				local found = ""
				game.StarterGui:SetCore("SendNotification", {
					Title = "Inf spins"; 
					Text = "- Credits to @luci for this method! <3";
					Duration = 5; 
				})

				if twitter:FindFirstChild("milk!") and twitter:FindFirstChild("Deid4r4AY!") and twitter:FindFirstChild("wayman!") and twitter:FindFirstChild("t0eS!") and twitter:FindFirstChild("freepointsreset!") then
					game.StarterGui:SetCore("SendNotification", {
						Title = "Hattori v3"; 
						Text = "Sorry, you have already used both of the new codes! The method will not work in this case!";
						Duration = 5; 
					})
					return
				elseif not twitter:FindFirstChild("freepointsreset!") and twitter:FindFirstChild("milk!") and twitter:FindFirstChild("Deid4r4AY!") and twitter:FindFirstChild("t0eS!") and twitter:FindFirstChild("wayman!") then
					twitter:ClearAllChildren()
					game:GetService("Players").LocalPlayer.startevent:FireServer("addtwitter", "freepointsreset!", game:GetService("Players").LocalPlayer.PlayerGui.Main.Customization.Codes)
					game.StarterGui:SetCore("SendNotification", {
						Title = "Hattori v3"; 
						Text = "Used stat reset code to clear other codes. You may now use inf spins!";
						Duration = 5; 
					})
					spawn(function()
						wait(3)
						hasClicked = false
					end)
					return
				end

				local usableCodes = {
					[[milk!]],
					[[Deid4r4AY!]],
					"wayman!",
					"t0eS!"
				}
				local unused = {}

				for i,v in pairs(usableCodes) do
					if not twitter:FindFirstChild(v) then
						table.insert(unused, v)
					end
				end
				for i,v in pairs(unused) do
					if i == #unused then
						twitter:ClearAllChildren()
					end
					game:GetService("Players").LocalPlayer.startevent:FireServer("addtwitter", v, game:GetService("Players").LocalPlayer.PlayerGui.Main.Customization.Codes)
					spawn(function()
						wait(3)
						hasClicked = false
					end)
				end
			else
				game:GetService'TeleportService':Teleport(4616652839, game.Players.LocalPlayer)
			end
		end
	end

	local clickedv1 = false
	local function infSpinsV2()
		if not clickedv1 then
			clickedv1 = true
			local toDestroy = nil;
			local function setToDestroy()
				for i,v in pairs(game:GetService("Players").LocalPlayer.statz.mission:children'') do
					if toDestroy == nil and (v.claim.Value == true or v.amount.Value < v.maxamount.Value) then
						toDestroy = v.Name
						v.claim:Destroy()
					end
				end
			end
			setToDestroy()
			if toDestroy == nil then
				game:GetService("Players").LocalPlayer.statz.mission.dailymission1.claim:Destroy()
			end
			
			for i,v in pairs(game:GetService("Players").LocalPlayer.statz.mission:children'') do
				if v.Name ~= toDestroy then
					game:GetService("Players").LocalPlayer.startevent:FireServer("claim", v);
				end
			end
			
			game.Players.LocalPlayer.startevent:FireServer("rpgteleport", 4616652839);	
		end	
	end

	game:GetService('RunService').RenderStepped:Connect(function()
		if runspdMod then
			local UserInputService = game:GetService("UserInputService")
			local shift = UserInputService:IsKeyDown(Enum.KeyCode.LeftShift)
			if shift then
				pcall(function()
					game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = runSpeed
				end)
			end
		end
	end)
	
	local Name2 = "hattoriv3_ServHopDat.xzx"
	local mainData2 = {
		SelectedVillage = "Leaf",
		JinSpawn = false,
		WeaponSpawn = false,
		ModeSpawn = false,
		SubSpawn = false,
		cachedServers = {[game.JobId] = true},
	}
	local mainData = mainData2
	local Settings
	pcall(function()
		if not pcall(function() readfile(Name2) end) then writefile(Name2, game:service'HttpService':JSONEncode(mainData2)) end
		mainData = game:service'HttpService':JSONDecode(readfile(Name2))
	end)

	local function Save1()
		--table.foreach(mainData.cachedServers, print)
		writefile(Name2, game:service'HttpService':JSONEncode(mainData))
	end

	for i,v in pairs(mainData2) do
		if not mainData[i] then
			mainData[i] = v
		end
	end

	local slotsData = {
		kg1 = false,
		kg2 = false,
		kg3 = false,
		kg4 = false
	}
	local toGet = "sharingan"
	local canspin = true
	local function spinUntil()
		canspin = false
		canspin = true
		local foundkg1 = false
		local foundkg2 = false
		local foundkg3 = false
		local foundkg3 = false
		repeat wait(0.1)
			if canspin then
				for slot, v in pairs(slotsData) do
					if v then
						local currentKG = game.Players.LocalPlayer.statz.main[slot]
						if currentKG.Value == toGet then
							canspin = false
							return
						else
							game:GetService("Players").LocalPlayer.startevent:FireServer("spin", slot)
							wait()
						end
					end
				end
			end

		until
			game.Players.LocalPlayer.statz.spins.Value == 0 or canspin == false

		canspin = true
	end

	local AutoTab2 = library:CreateTab("War mode")
	autfsw = AutoTab2:AddSwitch("Killaura", function(state)
		killaura_Enabled2 = state
	end)
	autfsw:Set(DefaultSettings["sl2"]["killaura_Enabled2"])
	autfsw = AutoTab2:AddSlider("Range", 30, 30000, function(state)
		killauraRange = state
	end)
	autfsw:Set(30000)
	autfsw = AutoTab2:AddSlider("Time before killing", 0, 10, function(state)
		waitTimeKillaura = state
	end)
	autfsw:Set(3)
	awdhaysgd = AutoTab2:NewHeader("Current Round: 0")

	local autoReset = false
	local ResetAfter = 21
	autfsw = AutoTab2:AddSwitch("Auto reset", function(state)
		autoReset = state
	end)
	autfsw = AutoTab2:AddSlider("Reset after round", 5, 30, function(state)
		ResetAfter = state
	end)
	autfsw:Set(21)

	function createWarPubs(Place)
		DefaultSettings["sl2"]["untilRound"] = untilRound
		DefaultSettings["sl2"]["untilBossSpawns"] = untilBossSpawns

		Save1()
		local url = 'https://games.roblox.com/v1/games/%s/servers/public?cursor=%s'
		local cursor = ""

		game.StarterGui:SetCore("SendNotification", {
			Title = "Server-Hopper"; 
			Text = "Attempting to hop servers..";
			Duration = 5; 
		})

		local hasTried = false
		
		while wait(0.1) do
			local response = game:HttpGet(url:format(Place, cursor))
			local decoded = HttpService:JSONDecode(response)
			
			for i, server in next, decoded.data do
				if server.playing < server.maxPlayers then
					mainData.cachedServers[server.id] = true
					wait()
					Save1()
					wait()
					warn("teleporting")
					--if not hasTried then 
					hasTried = true
					game.StarterGui:SetCore("SendNotification", {
						Title = "Server-Hopper"; 
						Text = "Teleporting!";
						Duration = 5; 
					})
					--end
					game:GetService'TeleportService':TeleportToPlaceInstance(Place, server.id, game.Players.LocalPlayer)
					wait(9e9)
				end
			end
			
			if not decoded.nextPageCursor then
				break
			end

			cursor = decoded.nextPageCursor;
		end
	end
	spawn(function()
		if _G.HopUntilRound then
			local curRound = workspace.warserver.round.Value
			if not (curRound >= _G.HopUntilRound and curRound < 21) then
				game:GetService("Players").LocalPlayer.OnTeleport:Connect(function(State) -- Auto exec on tp
					if State == Enum.TeleportState.Started then
						syn.queue_on_teleport([[
							_G.HopUntilRound = ]]..tostring(_G.HopUntilRound)..[[
							_G.UntilBossSpawns = ]]..tostring(_G.UntilBossSpawns)..[[
						]])
					end
				end)
				mainData.cachedServers[game.JobId] = true
				Save1()
				createWarPubs(5824792748)
			end
		end
	end)

	autfsw = AutoTab2:AddButton("Hop until round", function(state)
		_G.HopUntilRound = untilRound
		_G.UntilBossSpawns = untilBossSpawns
		game:GetService("Players").LocalPlayer.OnTeleport:Connect(function(State) -- Auto exec on tp
			if State == Enum.TeleportState.Started then
				syn.queue_on_teleport([[
					_G.HopUntilRound = ]]..tostring(_G.HopUntilRound)..[[
					_G.UntilBossSpawns = ]]..tostring(_G.UntilBossSpawns)..[[
				]])
			end
		end)
		mainData.cachedServers[game.JobId] = true
		Save1()
		createWarPubs(5824792748)
	end)
	autfsw = AutoTab2:AddSlider("Until round", 5, 21, function(state)
		untilRound = state
	end)
	if _G.HopUntilRound then
		autfsw:Set(_G.HopUntilRound)
	end
	autfsw:Set(untilRound)
	autfsw = AutoTab2:AddSwitch("Hop if there's no boss", function(state)
		untilBossSpawns = state
	end)
	autfsw:Set(untilBossSpawns)
	if _G.UntilBossSpawns then
		autfsw:Set(_G.UntilBossSpawns)
	end



	if workspace:FindFirstChild("warserver") then
		workspace.warserver.round.Changed:Connect(function()
			awdhaysgd:SetText("Current Round: "..tostring(workspace.warserver.round.Value))
			if autoReset then
				if workspace.warserver.round.Value >= ResetAfter then
					game.Players.LocalPlayer.Character:BreakJoints()
				end
			end
			if _G.UntilBossSpawns then
				if workspace.warserver.round.Value >= 22 then
					if not foundBossScroll then
						game:GetService("Players").LocalPlayer.OnTeleport:Connect(function(State) -- Auto exec on tp
							if State == Enum.TeleportState.Started then
								syn.queue_on_teleport([[
									_G.HopUntilRound = ]].._G.HopUntilRound..[[
									_G.UntilBossSpawns = ]].._G.UntilBossSpawns..[[
								]])
							end
						end)
						mainData.cachedServers[game.JobId] = true
						Save1()
						createWarPubs(5824792748)
					end
				end
			end
		end)
	end

	AutoTab0 = library:CreateTab("Spins")
	spcnt = AutoTab0:NewHeader("Current Spins: "..tostring(game.Players.LocalPlayer.statz.spins.Value))
	game.Players.LocalPlayer.statz.spins.Changed:Connect(function()
		spcnt:SetText("Current Spins: "..tostring(game.Players.LocalPlayer.statz.spins.Value))
	end)

	spcnt2 = AutoTab0:NewHeader("Select Slots to spin:")
	autfsw = AutoTab0:AddSwitch("Slot 1", function(state)
		slotsData.kg1 = state
	end)
	autfsw = AutoTab0:AddSwitch("Slot 2", function(state)
		slotsData.kg2 = state
	end)
	autfsw = AutoTab0:AddSwitch("Slot 3", function(state)
		slotsData.kg3 = state
	end)
	autfsw = AutoTab0:AddSwitch("Slot 4", function(state)
		slotsData.kg4 = state
	end)
	local kgs = {
		'sharingan',
		'boil',
		'crystal',
		'dust',
		'explosion',
		'sand',
		'ice',
		'golddust',
		'scorch',
		'lava',
		'ironsand',
		'wood',
		'mud',
		'storm',
		'byakugan',
		'ketsuryugan',
		'kaguya',
		'namikaze',
		'sarutobi',
		'uzumaki',
		'shirogane',
		'nara',
		'hoshigaki',
		'senjuwood',
		'yukiice',
		'kamizuru',
		'rinnegan',
		'blacklightning',
		'clay',
		'itachisharingan',
		'paper'
  	}
	dngDrpDwn = AutoTab0:AddDrop("Select KG to spin for", kgs, function(selectedASD)
		canspin = false
		canspin = true
		toGet = selectedASD
	end)
	autfsw = AutoTab0:AddButton("Spin for KG", spinUntil)
	autfsw = AutoTab0:AddButton("Reset to last save", function()
		pcall(function()
			game.Players.LocalPlayer.statz:Destroy()
		end)
	end)
	--[[autfsw = AutoTab0:AddButton("+30 Spins (Changelog)", infSpins)
	autfsw = AutoTab0:AddSwitch("Auto Inf Spins", function(state)
		autoInfSpins = state
	end)

	spawn(function()
		while wait(3) do
			if autoInfSpins then
				infSpins()
			end
		end
	end)]]
	local function doDailyQuests()
		local dailyM = game.Players.LocalPlayer.statz.mission:GetChildren()
		for i,v in pairs(dailyM) do
			if v.Value == "rush" then
				local rushw = v.maxamount.Value - v.amount.Value
				for v = 1, rushw do
					wait()
					game.Players.LocalPlayer.Character.combat.update:FireServer("rushw")
				end
			elseif v.Value == "treejump" then
				local jump = v.maxamount.Value - v.amount.Value
				for v = 1,jump do
					wait()
					game.Players.LocalPlayer.Character.combat.update:FireServer("takemovement2")
				end
			elseif v.Value == "chakra" then
				local chakra = v.maxamount.Value - v.amount.Value
				for i = 1,chakra do
					wait(.1)
					game.Players.LocalPlayer.Character.combat.update:FireServer("key","c")
				end
			elseif v.Value == "weapon" then
				game:GetService("Players").LocalPlayer.startevent:FireServer("unlock", game:GetService("ReplicatedStorage").saber.powers.kunaithrow)
			end 
		end
	end

	--autfsw = AutoTab0:AddButton("+Spins (Changelog)", infSpinsV2)
	--autfsw = AutoTab0:AddButton("Complete Daily Quests", doDailyQuests)



	local autoPrestige = false

	spawn(function()
		while wait(10) do
			if autoPrestige and game.Players.LocalPlayer.statz.lvl.lvl.Value == 1000 then
				game:GetService("Players").LocalPlayer.startevent:FireServer("rankup")
			end
		end
	end)

	local followM = game.Players.LocalPlayer.PlayerGui.Main.followmouse
	local origEquip1 = followM.Equip1 
	local origEquip2 = followM.Equip2 
	local isSwitchEnabled = false
	
	local function switchKeys()
		if isSwitchEnabled then
			origEquip1.Name = "Equip2"
			origEquip2.Name = "Equip1"
		else
			origEquip1.Name = "Equip1"
			origEquip2.Name = "Equip2"
		end
	end

	local autoaim_Projectiles = false
	AutoTab10 = library:CreateTab("Misc")
	--[[autfsw = AutoTab10:AddSwitch("Swap Keybinds", function(state)
		isSwitchEnabled = state
		switchKeys()
	end)]]
	autfsw = AutoTab10:AddSwitch("Auto-Prestige", function(state)
		autoPrestige = state
	end)
	autfsw = AutoTab10:AddSwitch("Auto-aim Projectiles", function(state)
		autoaim_Projectiles = state
	end) 

	game.Players.PlayerAdded:Connect(function(Player)
		if (includeTesterAsMod and Player:GetRoleInGroup(1226491) == "[SL2] Tester") or Player:GetRoleInGroup(1226491):find("NvM") or Player:GetRoleInGroup(1226491):find("The Man") or Player:GetRoleInGroup(1226491):find("Creators") or Player.Name == "RELLhub" then
			if kickOnModJoin then
				game.Players.LocalPlayer:Kick("User "..Player.Name.." has joined. | Rank: ".. Player:GetRoleInGroup(1226491))
			end
			if messageOnModJoin then
				game.StarterGui:SetCore("SendNotification", {
					Title = "RELL Staff Detected"; 
					Text = "User "..Player.Name.." has joined. | Rank: ".. Player:GetRoleInGroup(1226491);
					Duration = 5; 
				})
			end
		end
	end)
	AutoTab10:NewHeader("-// Staff Join Detection //-")
	autfsw = AutoTab10:AddSwitch("Notification", function(state)
		messageOnModJoin = state
	end)
	autfsw = AutoTab10:AddSwitch("Self-Kick", function(state)
		kickOnModJoin = state
	end)
	autfsw = AutoTab10:AddSwitch("Include Testers", function(state)
		includeTesterAsMod = state
	end)



	local autoAim_VisibleCheck = false
	local getClosestPlayerToCursor = function()
		local ClosestPlayer = nil
		local ShortestDistance = math.huge
		local LocalPlayer = game:service'Players'.LocalPlayer 
		local CurrentCamera = workspace.CurrentCamera
		local Mouse = LocalPlayer:GetMouse()
		local S_FOV = 60
		local isPartVisible = function(Part, PartDescendant)
			local Character = LocalPlayer.Character or LocalPlayer.CharacterAdded.Wait(LocalPlayer.CharacterAdded)
			local Origin = CurrentCamera.CFrame.p
			local _, OnScreen = CurrentCamera.WorldToViewportPoint(CurrentCamera, Part.Position)
			if OnScreen then
				local newRay = Ray.new(Origin, Part.Position - Origin)
				local PartHit, _ = Workspace.FindPartOnRayWithIgnoreList(Workspace, newRay, {Character, CurrentCamera})
				local Visible = (not PartHit or PartHit.IsDescendantOf(PartHit, PartDescendant))
				return Visible
			end
			return false
		end

		for _,plr in pairs(game:service'Players':GetPlayers()) do
			if plr ~= LocalPlayer and plr.Character and plr.Character.FindFirstChild(plr.Character, "Humanoid") and plr.Character.Humanoid.Health > 0 then

				local PartPos, OnScreen = CurrentCamera.WorldToViewportPoint(CurrentCamera, plr.Character.PrimaryPart.Position)
				local Magnitude = (Vector2.new(PartPos.X, PartPos.Y) - Vector2.new(Mouse.X, Mouse.Y)).magnitude  
				if (Magnitude < (S_FOV * 6 - 8)) and (Magnitude < ShortestDistance) then
					if autoAim_VisibleCheck and isPartVisible(plr.Character.PrimaryPart, plr.Character) then
						ClosestPlayer = plr
						ShortestDistance = Magnitude
					elseif not autoAim_VisibleCheck then
						ClosestPlayer = plr
						ShortestDistance = Magnitude
					end
				end

			end
		end
		return ClosestPlayer
	 end


	game:GetService("RunService").Stepped:Connect(function()
		pcall(function()
			if autoaim_Projectiles then

				local projp = workspace.projectileparent
				local ms = projp:FindFirstChild(game.Players.LocalPlayer.Name.."mouse")

				local target = getClosestPlayerToCursor()
				if target then 
					target = target.Character 

					ms.mous.Position = target.HumanoidRootPart.Position

				end
			end

		end)
	end)



	AutoTab2 = library:CreateTab("PS hopping")

	SelectableVillages = {
		Leaf = 4601350214,
		Rock = 4601350809,
		Cloud = 4601350656,
		Mist = 4601350760,
		Sand = 4601350394,
		TrainingGrounds = 5431071837,
		ForstOfDeath = 5447073001,
		Rain = 5084678830,
		Akatsuki = 5431069982,
	}

	function createPS(Place)
		DefaultSettings["sl2"]["distUnderNPC"] = bossOnly
		DefaultSettings["sl2"]["distUnderNPC"] = distUnderNPC
		DefaultSettings["sl2"]["killaura_Enabled"] = killaura_Enabled
		DefaultSettings["sl2"]["sniper_Enabled"] = sniper_Enabled
		DefaultSettings["sl2"]["autokill_Jins"] = autokill_Jins
		DefaultSettings["sl2"]["PublicHopMethod2"] = PublicHopMethod2

		Save()
		game:GetService("Players").LocalPlayer.startevent:FireServer("createprivateserver", SelectableVillages[Place])
	end

	function ps_Hop()
		ownsGP = game.Players.LocalPlayer.gamepasses:FindFirstChild("privateservers")
		if ownsGP then
			Save1()
			if mainData.WeaponSpawn or mainData.ModeSpawn or mainData.JinSpawn or mainData.SubSpawn then
				game:GetService("Players").LocalPlayer.OnTeleport:Connect(function(State) -- Auto exec on tp
					if State == Enum.TeleportState.Started then
						syn.queue_on_teleport([[
							_G.ServerHop = true
						]])
					end
				end)
			end
			createPS(mainData.SelectedVillage)
		elseif _G.PubCodeHop then
			local code = _G.PubCodeHopCode
			if workspace:FindFirstChild("playerps") or game.PlaceId ~= SelectableVillages2[Place] then
				game:GetService("Players").LocalPlayer.OnTeleport:Connect(function(State) -- Auto exec on tp
					if State == Enum.TeleportState.Started then
						syn.queue_on_teleport([[
							_G.PubCodeHop = true
							_G.PubCodeHopCode = ]].._G.PubCodeHopCode..[[
						]])
					end
				end)
				game.Players.LocalPlayer.startevent:FireServer("rpgteleport", SelectableVillages2[Place]);
			elseif not workspace:FindFirstChild("playerps") and game.PlaceId ~= SelectableVillages2[Place] then
				game:GetService("Players").LocalPlayer.OnTeleport:Connect(function(State) -- Auto exec on tp
					if State == Enum.TeleportState.Started then
						syn.queue_on_teleport([[
							_G.PubCodeHop = true
							_G.PubCodeHopCode = ]].._G.PubCodeHopCode..[[
						]])
					end
				end)
				TPEvent:FireServer("teleporttoprivate", code)
			end
		else
			game.StarterGui:SetCore("SendNotification", {
				Title = "PS-Hopper"; 
				Text = "Sorry, you must own the 'Private Servers' gamepass!";
				Duration = 5; 
			})
		end
	end

	autfsw = AutoTab2:AddButton("PS-Hop", ps_Hop)
	foundJin = false
	foundMode = false
	foundWep = false
	foundSub = false

	if mainData.JinSpawn then
		repeat wait() until workspace:findFirstChild("npc")
		for i,v in pairs(workspace.GLOBALTIME:children'') do
			if v:FindFirstChild("sh") and v:FindFirstChild("boss") then
				foundJin = true
			end
		end
	end
	if mainData.ModeSpawn then
		repeat wait() until workspace:findFirstChild("GLOBALTIME")
		for i,v in pairs(workspace.GLOBALTIME:children'') do
			if v:FindFirstChild("sh") then
				if game.ReplicatedStorage.alljutsu.modes:FindFirstChild(v.Name) then
					foundMode = true
				end
			end
		end
	end
	if mainData.WeaponSpawn then
		repeat wait() until workspace:findFirstChild("GLOBALTIME")
		for i,v in pairs(workspace.GLOBALTIME:children'') do
			if v:FindFirstChild("sh") then
				if game.ReplicatedStorage.blades:FindFirstChild(v.Name) then
					foundWep = true
				end
			end
		end
	end
	if mainData.SubSpawn then
		repeat wait() until workspace:findFirstChild("GLOBALTIME")
		for i,v in pairs(workspace.GLOBALTIME:children'') do
			if v:FindFirstChild("sh") then
				if game.ReplicatedStorage.alljutsu.Acharacterpowers:FindFirstChild(v.Name) or game.ReplicatedStorage.alljutsu.taijutsu:FindFirstChild(v.Name) then
					foundSub = true
				end
			end
		end
	end

	if mainData.WeaponSpawn or mainData.ModeSpawn or mainData.JinSpawn or mainData.SubSpawn then
		if foundWep == false and foundMode == false and foundJin == false and foundSub == false then
			if _G.ServerHop then
				ps_Hop()
			end
		end
	end

	dngDrpDwn = AutoTab2:AddDrop("Select Village", {"Leaf", "Rock", "Cloud", "Mist", "Sand", "Rain", "TrainingGrounds", "ForstOfDeath", "Akatsuki"}, function(selectedASD)
		mainData.SelectedVillage = selectedASD
	end)

	autfsw = AutoTab2:AddSwitch("Use a Code to Hop", function(state)
		_G.PubCodeHop = state
	end)
	dngDrpDwn = AutoTab2:AddBox("Input Code", function(selectedASD)
		_G.PubCodeHopCode = selectedASD
	end)

	asduhaw = AutoTab2:NewHeader("Hop until:")

	autfsw = AutoTab2:AddSwitch("Jin Spawns", function(state)
		mainData.JinSpawn = state
	end)
	autfsw = AutoTab2:AddSwitch("Weapon Spawns", function(state)
		mainData.WeaponSpawn = state
	end)
	autfsw = AutoTab2:AddSwitch("Mode Spawns", function(state)
		mainData.ModeSpawn = state
	end)
	autfsw = AutoTab2:AddSwitch("Subjutsu Spawns", function(state)
		mainData.SubSpawn = state
	end)


	-----------------------------


	AutoTab2 = library:CreateTab("Public Server hopping")

	SelectableVillages2 = {
		Leaf = 4601350214,
		Rock = 4601350809,
		Cloud = 4601350656,
		Mist = 4601350760,
		Sand = 4601350394,
		TrainingGrounds = 5431071837,
		ForstOfDeath = 5447073001,
		Rain = 5084678830,
		Akatsuki = 5431069982,
	}
	local lobby = 4616652839

	function createPubS(Place, samePlace)
		DefaultSettings["sl2"]["distUnderNPC"] = bossOnly
		DefaultSettings["sl2"]["distUnderNPC"] = distUnderNPC
		DefaultSettings["sl2"]["killaura_Enabled"] = killaura_Enabled
		DefaultSettings["sl2"]["sniper_Enabled"] = sniper_Enabled
		DefaultSettings["sl2"]["autokill_Jins"] = autokill_Jins
		DefaultSettings["sl2"]["PublicHopMethod2"] = PublicHopMethod2

		Save1()
		if game.PlaceId ~= SelectableVillages2[Place] then
			game.Players.LocalPlayer.startevent:FireServer("rpgteleport", SelectableVillages2[Place]);
		else
			if not PublicHopMethod2 then
				local url = 'https://games.roblox.com/v1/games/%s/servers/public?cursor=%s'
				local cursor = ""

				game.StarterGui:SetCore("SendNotification", {
					Title = "Server-Hopper"; 
					Text = "Attempting to hop servers..";
					Duration = 5; 
				})

				local hasTried = false
				
				while wait(0.1) do
					local response = game:HttpGet(url:format(game.PlaceId, cursor))
					local decoded = HttpService:JSONDecode(response)
					
					for i, server in next, decoded.data do
						if server.playing < server.maxPlayers then
							mainData.cachedServers[server.id] = true
							wait()
							Save1()
							wait()
							game:GetService'TeleportService':TeleportToPlaceInstance(game.PlaceId, server.id, game.Players.LocalPlayer)
							if not hasTried then 
								hasTried = true
								game.StarterGui:SetCore("SendNotification", {
									Title = "Server-Hopper"; 
									Text = "Teleporting!";
									Duration = 5; 
								})
							end
							wait(9e9)
						end
					end
					
					if not decoded.nextPageCursor then
						break
					end

					cursor = decoded.nextPageCursor;
				end
			else
				if samePlace then
					game.Players.LocalPlayer.startevent:FireServer("rpgteleport", lobby);
				else
					game.Players.LocalPlayer.startevent:FireServer("rpgteleport", SelectableVillages2[Place]);
				end

			end
		end
	end

	function pub_Hop()
		if mainData.WeaponSpawn or mainData.ModeSpawn or mainData.JinSpawn or mainData.SubSpawn then
			game:GetService("Players").LocalPlayer.OnTeleport:Connect(function(State) -- Auto exec on tp
				if State == Enum.TeleportState.Started then
					syn.queue_on_teleport([[
						_G.ServerHopPublic1 = true
					]])
				end
			end)
			if PublicHopMethod2 and game.PlaceId == SelectableVillages2[mainData.SelectedVillage] then
				createPubS(lobby, true)
			end
		end
		createPubS(mainData.SelectedVillage)
	end

	autfsw = AutoTab2:AddButton("Server-Hop", pub_Hop)
	
	autfsw = AutoTab2:AddSwitch("Use method 2", function(state)
		PublicHopMethod2 = state
		DefaultSettings["sl2"]["PublicHopMethod2"] = PublicHopMethod2
	end)

	foundJin = false
	foundMode = false
	foundWep = false
	foundSub = false

	if mainData.JinSpawn then
		repeat wait() until workspace:findFirstChild("npc")
		for i,v in pairs(workspace.GLOBALTIME:children'') do
			if v:FindFirstChild("sh") and v:FindFirstChild("boss") then
				foundJin = true
			end
		end
	end
	if mainData.ModeSpawn then
		repeat wait() until workspace:findFirstChild("GLOBALTIME")
		for i,v in pairs(workspace.GLOBALTIME:children'') do
			if v:FindFirstChild("sh") then
				if game.ReplicatedStorage.alljutsu.modes:FindFirstChild(v.Name) then
					foundMode = true
				end
			end
		end
	end
	if mainData.WeaponSpawn then
		repeat wait() until workspace:findFirstChild("GLOBALTIME")
		for i,v in pairs(workspace.GLOBALTIME:children'') do
			if v:FindFirstChild("sh") then
				if game.ReplicatedStorage.blades:FindFirstChild(v.Name) then
					foundWep = true
				end
			end
		end
	end
	if mainData.SubSpawn then
		repeat wait() until workspace:findFirstChild("GLOBALTIME")
		for i,v in pairs(workspace.GLOBALTIME:children'') do
			if v:FindFirstChild("sh") then
				if game.ReplicatedStorage.alljutsu.Acharacterpowers:FindFirstChild(v.Name) or game.ReplicatedStorage.alljutsu.taijutsu:FindFirstChild(v.Name) then
					foundSub = true
				end
			end
		end
	end

	if mainData.WeaponSpawn or mainData.ModeSpawn or mainData.JinSpawn or mainData.SubSpawn then
		if foundWep == false and foundMode == false and foundJin == false and foundSub == false then
			if _G.ServerHopPublic1 then
				pub_Hop()
			end
		end
	end

	if not _G.ServerHop and not _G.ServerHopPublic1 then
		mainData.SelectedVillage = "Leaf"
		mainData.JinSpawn = false
		mainData.WeaponSpawn = false
		mainData.ModeSpawn = false
		mainData.SubSpawn = false
		Save1()
	end

	dngDrpDwn = AutoTab2:AddDrop("Select Village", {"Leaf", "Rock", "Cloud", "Mist", "Sand", "TrainingGrounds", "ForstOfDeath", "Rain", "Akatsuki"}, function(selectedASD)
		mainData.SelectedVillage = selectedASD
	end)

	asduhaw = AutoTab2:NewHeader("Hop until:")

	autfsw = AutoTab2:AddSwitch("Jin Spawns", function(state)
		mainData.JinSpawn = state
	end)
	autfsw = AutoTab2:AddSwitch("Weapon Spawns", function(state)
		mainData.WeaponSpawn = state
	end)
	autfsw = AutoTab2:AddSwitch("Mode Spawns", function(state)
		mainData.ModeSpawn = state
	end)
	autfsw = AutoTab2:AddSwitch("Subjutsu Spawns", function(state)
		mainData.SubSpawn = state
	end)

	adsjwuia = AutoTab2:NewHeader("Cached Servers: "..tostring(#mainData.cachedServers))
	autfsw = AutoTab2:AddButton("Clear cache", function()
		mainData.cachedServers = {}
		Save1()
		adsjwuia:SetText("Cached Servers: "..tostring(#mainData.cachedServers))
	end)

	if game.PlaceId ~= 4616652839 then

		local camera = game:GetService("Workspace").CurrentCamera
		local Camera = camera
		local RunService = game:GetService("RunService")
		local Players = game:GetService("Players")
		local LocalPlayer = game:GetService("Players").LocalPlayer
		local mouse = game:GetService("Players").LocalPlayer:GetMouse()
		local Paused = false
		local espFontSize = 18

		TaggedPlayers = { }
		LinedPlayers = { }
		PlayerNames = { }
		BoxOutline = { }

		TaggedChakraPlayers = { }

		local Settings = {
			["Nametag"] = DefaultSettings["UniversalEsp"]["Show Username"];
			["Tracers"] = DefaultSettings["UniversalEsp"]["Tracers"];
			["TextOutline"] = DefaultSettings["UniversalEsp"]["Text Outline"];
			["TeamCheck"] = false;
			["BoxOutline"] = DefaultSettings["UniversalEsp"]["Box Outline"];
		}

		local slSettings = {
			Chakra = false,
			Mode = false,
			Health = false,
			Level = false,
		}

		local Data = {
			["TeamColor"] = Color3.new(DefaultSettings["UniversalEsp"]["Team ESP Color"][1], DefaultSettings["UniversalEsp"]["Team ESP Color"][2], DefaultSettings["UniversalEsp"]["Team ESP Color"][3]);
			["EnemyColor"] = Color3.new(DefaultSettings["UniversalEsp"]["Enemy ESP Color"][1], DefaultSettings["UniversalEsp"]["Enemy ESP Color"][2], DefaultSettings["UniversalEsp"]["Enemy ESP Color"][3]);
			["VisibleColor"] = Color3.new(DefaultSettings["UniversalEsp"]["Visible ESP Color"][1], DefaultSettings["UniversalEsp"]["Visible ESP Color"][2], DefaultSettings["UniversalEsp"]["Visible ESP Color"][3]);
		}

		function WorldToScreen(part, idx)
			if part ~= nil then
				RootPos = part.position
				scr, vis = camera:WorldToScreenPoint(RootPos)
				if vis then
					TaggedPlayers[idx].Visible = true
					TaggedChakraPlayers[idx].Visible = true
					LinedPlayers[idx].Visible = true
					return Vector2.new(scr.x, scr.y)
				else
					TaggedPlayers[idx].Visible = false
					TaggedChakraPlayers[idx].Visible = false
					LinedPlayers[idx].Visible = false
					return Vector2.new(0, 0)
				end
			else
				TaggedPlayers[idx].Visible = false
				TaggedChakraPlayers[idx].Visible = false
				LinedPlayers[idx].Visible = false
				return Vector2.new(0, 0)
			end
		end

		local function isVisible(v,localCharacter)
			local pos, withinScreenBounds = camera:WorldToScreenPoint(v.Position)
			if withinScreenBounds then
				local ignorelist = {localCharacter}

				local castPoints = {v.Position}
				local hit = camera:GetPartsObscuringTarget(castPoints, ignorelist)

				local isHit = false
				for i,c in pairs(hit) do
					if not c:IsDescendantOf(v.Parent) then
						isHit = true
					end
				end
				if isHit == false then
					return true
				else
					return false
				end
			else
				return false
			end
		end

		local function has_value (tab, val)
		for index, value in ipairs(tab) do
			if value == val then
				return true
			end
		end
		return false
		end

		local function cleartb(t)
			for k in pairs (t) do
				t[k] = nil
			end
		end

		local function removeESP(t)
			for k in pairs (t) do
				t[k].Remove(t[k])
			end
		end
		function Init()
			Paused = true   
			removeESP(TaggedPlayers)
			removeESP(TaggedChakraPlayers)
			removeESP(LinedPlayers)
			cleartb(LinedPlayers)
			cleartb(TaggedPlayers)
			cleartb(TaggedChakraPlayers)
			cleartb(PlayerNames)

			wait()
			Paused = false
		end

		function LoadESP()
			for i,v in pairs(game:GetService("Players"):GetChildren()) do
				enChar = v.Character
				local Head
				if enChar then
					if not has_value(PlayerNames, v.Name) then
						if v.Name ~= LocalPlayer.Name then

								isFriendly = false

								if game.Players.LocalPlayer.currentparty.Value ~= nil and v.currentparty.Value == game.Players.LocalPlayer.currentparty.Value then
									isFriendly = true
								end


								LinedPlayers[i] = LinedPlayers[i] or Drawing.new("Line")
								TaggedPlayers[i] = TaggedPlayers[i] or Drawing.new("Text")
								TaggedChakraPlayers[i] = TaggedChakraPlayers[i] or Drawing.new("Text")

								PlayerNames[i] = PlayerNames[i] or v.Name

								BoxOutline[i] = BoxOutline[i] or {
									Box = Instance.new('BillboardGui', game:GetService("CoreGui")),
								}

								Loc = WorldToScreen(v.Character:FindFirstChild("Head"), i)
								Head = v.Character:FindFirstChild("Head")
								if Loc then
								local localChar = game:service'Players'.LocalPlayer.Character

								if isFriendly then
									setColor = Data.TeamColor 
								elseif isVisible(Head, localChar) then
									setColor = Data.VisibleColor 
								else
									setColor = Data.EnemyColor 
								end

								--[[TaggedModePlayers[i].Visible = false
								TaggedHealthPlayers[i].Visible = false
								TaggedLevelPlayers[i].Visible = false]]

								if (slSettings.Chakra or slSettings.Mode or slSettings.Health or slSettings.Level) and setColor ~= false then
									local chak = ""
									local mode = ""
									local lvl = ""
									local hp = ""
									pcall(function()
										if slSettings.Chakra then
											chak = chak.."[ CH: "..tostring(math.floor((v.Character.combat.stamina.Value / v.Character.combat.stamina.MaxValue) * 100 + 0.5)).."% ]"
										end
										if slSettings.Level then
											lvl = lvl.."[ LV: "..tostring(v.statz.lvl.lvl.Value)..tostring(v.statz.prestige.rank.Value)..tostring(v.statz.prestige.number.Value).." ]"
										end
										if slSettings.Mode then
											mode = mode.."[ MD: "..tostring(math.floor((v.Character.combat.mode.Value / v.Character.combat.mode.MaxValue) * 100 + 0.5)).."% ]"
										end
										if slSettings.Health then
											hp = hp.."[ HP: "..tostring(math.floor((v.Character.Humanoid.Health / v.Character.Humanoid.MaxHealth) * 100 + 0.5)).."% ]"
										end
									end)


									TaggedChakraPlayers[i].Text = hp..lvl..chak..mode
									TaggedChakraPlayers[i].Size = espFontSize
									TaggedChakraPlayers[i].Color = Color3.fromRGB(230,230,230)
									TaggedChakraPlayers[i].Outline = Settings.TextOutline
									TaggedChakraPlayers[i].Center = true

									TaggedChakraPlayers[i].Position = Loc + Vector2.new(0,12)
									
									local pos, withinScreenBounds = Camera:WorldToScreenPoint(Head.Position)
		
									if withinScreenBounds then
										TaggedChakraPlayers[i].Visible = true
									else
										TaggedChakraPlayers[i].Visible = false
									end
								elseif not (slSettings.Chakra and slSettings.Mode and slSettings.Health and slSettings.Level)then
									TaggedChakraPlayers[i].Visible = false
								end

								if Settings.Nametag and setColor ~= false and not (Settings.TeamCheck and isFriendly) then
									TaggedPlayers[i].Text = v.Name
									TaggedPlayers[i].Size = espFontSize
									TaggedPlayers[i].Color = setColor
									TaggedPlayers[i].Outline = Settings.TextOutline
									TaggedPlayers[i].Center = true

									TaggedPlayers[i].Position = Loc
									
									local pos, withinScreenBounds = Camera:WorldToScreenPoint(Head.Position)
		
									if withinScreenBounds then
										TaggedPlayers[i].Visible = true
									else
										TaggedPlayers[i].Visible = false
									end
								elseif not Settings.Nametag or (Settings.TeamCheck and isFriendly) then
									TaggedPlayers[i].Visible = false
								end

								if Settings.Tracers and setColor ~= false and not (Settings.TeamCheck and isFriendly) then
									local ScreenPosition, Vis = camera:WorldToViewportPoint(Head.Position);
									LinedPlayers[i].Thickness = 1
									LinedPlayers[i].Color = setColor
									--LinedPlayers[i].From = Vector2.new(camera.ViewportSize.X / 2, camera.ViewportSize.Y - 2)
									--LinedPlayers[i].To = Loc
									LinedPlayers[i].From = Vector2.new(camera.ViewportSize.X / 2, camera.ViewportSize.Y);
									LinedPlayers[i].To = Vector2.new(ScreenPosition.X, ScreenPosition.Y);

									local pos, withinScreenBounds = Camera:WorldToScreenPoint(Head.Position)
		
									if withinScreenBounds then
										LinedPlayers[i].Visible = true
									else
										LinedPlayers[i].Visible = false
									end
								elseif not Settings.Tracers or (Settings.TeamCheck and isFriendly) then
									LinedPlayers[i].Visible = false
								end

								if Settings.BoxOutline and setColor ~= false and not BoxOutline[i].Box.Adornee then
									
									BoxOutline[i].Box.Adornee = v.Character:FindFirstChild('HumanoidRootPart')
									if BoxOutline[i].Box.Adornee and not (Settings.TeamCheck and isFriendly) then
										BoxOutline[i].Box.AlwaysOnTop = true
										BoxOutline[i].Box.LightInfluence = 0
										BoxOutline[i].Box.StudsOffset = Vector3.new(0, -BoxOutline[i].Box.Adornee.Size.Y / 4, 0)
										BoxOutline[i].Box.Size = UDim2.new(4, 1, 5, 1)

										local Top = Instance.new('Frame', BoxOutline[i].Box)
										Top.Size = UDim2.new(1, 0, 0, 1)
										Top.BorderSizePixel = 0

										local Bot = Top:Clone()
										Bot.Position = UDim2.new(0, 0, 1, -1)
										Bot.Parent = BoxOutline[i].Box

										local Left = Top:Clone()
										Left.Size = UDim2.new(0, 1, 1, 0)
										Left.Parent = BoxOutline[i].Box

										local Right = Left:Clone()
										Right.Position = UDim2.new(1, -1, 0, 0)
										Right.Parent = BoxOutline[i].Box

										for _, v in next, BoxOutline[i].Box:children() do
											if v:IsA('Frame') then
												v.BackgroundColor3 = setColor
											end
										end
									end
								elseif Settings.BoxOutline and setColor ~= false then
									for _, v in next, BoxOutline[i].Box:children() do
										if v:IsA('Frame') then
											v.BackgroundColor3 = setColor
										end
									end
								elseif not Settings.BoxOutline or (Settings.TeamCheck and isFriendly) then
									if BoxOutline[i].Box.Adornee then
										BoxOutline[i].Box.Adornee = nil
									end
									
								end
							end
						end
					else
						local Head
						Loc = WorldToScreen(v.Character:FindFirstChild("Head"), i)
						Head = v.Character:FindFirstChild("Head")
					
						if Loc then
							if Settings.Tracers then
								LinedPlayers[i].From = Vector2.new(camera.ViewportSize.X / 2, camera.ViewportSize.Y - 2)
								LinedPlayers[i].To = Loc
								local pos, withinScreenBounds = Camera:WorldToScreenPoint(Head.Position)
		
								if withinScreenBounds then
									LinedPlayers[i].Visible = true
								else
									LinedPlayers[i].Visible = false
								end
							end

							if Settings.Nametag then
								TaggedPlayers[i].Position = Loc
							end
						end
					end
				elseif PlayerNames[i] and PlayerNames[i] == v.Name then
					TaggedPlayers[i].Visible = false
					TaggedChakraPlayers[i].Visible = false
					LinedPlayers[i].Visible = false

					BoxOutline[i].Box.Adornee = nil
				end
			end
		end

		Init()

		Players.PlayerAdded:connect(function(player)
			Paused = true
			removeESP(TaggedPlayers)
			removeESP(TaggedChakraPlayers)
			removeESP(LinedPlayers)
			cleartb(LinedPlayers)
			cleartb(TaggedPlayers)
			cleartb(TaggedChakraPlayers)
			cleartb(PlayerNames)
			Paused = false
		end)

		Players.PlayerRemoving:connect(function(player)
			Paused = true
			removeESP(TaggedPlayers)
			removeESP(TaggedChakraPlayers)
			removeESP(LinedPlayers)
			cleartb(LinedPlayers)
			cleartb(TaggedPlayers)
			cleartb(TaggedChakraPlayers)
			cleartb(PlayerNames)
			Paused = false
		end)

		RunService:UnbindFromRenderStep("Hattori-Universal");

		RunService:BindToRenderStep("Hattori-Universal", 1, function()
			if not Paused then
				LoadESP()
			end
		end);

		local espT = library:CreateTab("ESP")

		local shdsts1 = espT:AddSwitch("Show Username",function(state)
			Settings["Nametag"] = state
		end)

		local efs = espT:AddSlider("Name Font Size", 12, 30, function (x)
			espFontSize = tonumber(x) or espFontSize
		end)

		local shdsts2 = espT:AddSwitch("Text Outline",function(state)
			Settings["TextOutline"] = state
		end)
		shdsts2:Set(Settings["TextOutline"])

		local trcrs = espT:AddSwitch("Tracers",function(state)
			Settings["Tracers"] = state
		end)

		local bxout = espT:AddSwitch("Box Outline",function(state)
			Settings["BoxOutline"] = state
		end)

		local bxout = espT:AddSwitch("Chakra %",function(state)
			slSettings["Chakra"] = state
		end)
		local bxout = espT:AddSwitch("Mode %",function(state)
			slSettings["Mode"] = state
		end)
		local bxout = espT:AddSwitch("Health %",function(state)
			slSettings["Health"] = state
		end)
		local bxout = espT:AddSwitch("Level",function(state)
			slSettings["Level"] = state
		end)

		local EnColor = espT:AddColor("Enemy ESP Color", Data.EnemyColor, function(color)
			Data.EnemyColor = color
		end)

		local TeColor = espT:AddColor("Team ESP Color", Data.TeamColor, function(color)
			Data.TeamColor = color
		end)

		local TeColor = espT:AddColor("Visible ESP Color", Data.VisibleColor, function(color)
			Data.VisibleColor = color
		end)

	end


else
	_G.none = true
end
if _G.none or WildWest or ar2 or badbus then

	local UIS = game:GetService('UserInputService')
	local RS = game:GetService('RunService')
	local Players = game:GetService('Players')
	local StarterGui = game:GetService('StarterGui')
	local Player = Players.LocalPlayer
	local Studio = RS:IsStudio()
	local PlayerGui = RS:IsStudio() and Player:WaitForChild('PlayerGui') or game.CoreGui
	local Mouse = Player:GetMouse()
	local old_icon = Mouse.Icon
	local Camera = workspace.CurrentCamera

	targetpart = 'Head'

	local target
	local target_old
	local alert = false
	local lockedon = false
	local settingkey = false
	local upvals = nil
	local val = 1
	local windows = {}
	local TSize = {};
	local function hb()
		RS.Heartbeat:wait()
	end

	local version = "v0.25"
	Mouse.TargetFilter = Camera

	-- hotkey
	toggle_aim = Enum.UserInputType.MouseButton2
	toggle_aimbot = Enum.KeyCode.F1
	toggle_trigger = Enum.KeyCode.RightAlt
	toggle_esp = Enum.KeyCode.End
	toggle_gui = Enum.KeyCode.F6
	toggle_bottompos = Enum.KeyCode.F7
	toggle_performance = Enum.KeyCode.F8
	toggle_bones = Enum.KeyCode.Delete
	toggle_chams = Enum.KeyCode.F3
	toggle_tracers = Enum.KeyCode.F2
	toggle_boxes = Enum.KeyCode.F4
	ffatoggle = Enum.KeyCode.Home
	targetpart_change = Enum.KeyCode.BackSlash
	priority_toggle = Enum.KeyCode.Insert
	sethotkey = Enum.KeyCode.RightControl
	-- aim fov
	fov_increase = Enum.KeyCode.KeypadPlus
	fov_decrease = Enum.KeyCode.KeypadMinus
	-- aim sens (how smooth your crosshair will move)
	sens_increase = Enum.KeyCode.RightBracket
	sens_decrease = Enum.KeyCode.LeftBracket

	local ZeroVector = Vector3.new();
	local Dot = Vector3.new().Dot
	local IgnoreList		= {}

	-- parts
	parts = {
		'Head';
		'Torso'
	}
	-- settings

	textSet = true
	currentfont = 1
	ffa = false
	teamcheck = false
	hidden = false
	performancemode = false
	esp_chams = false
	esp_tracers = false

	-- aim
	fov = 10
	sens = 1
	drop = .45
	aim_toggled = false
	fov_toggled = false
	visible_check = false
	bottompos = true
	aim_priority = 2
	-- [2] FOV or [1] Distance
	aimingcolor = Color3.fromRGB(0, 165, 255)
	aimbot_toggled = false
	aim_line = false
	--mouseiconid =  18671553

	-- esp
	esp_toggled = true
	-- item_esp (coming soon)
	linesize = 1
	showdists = false
	textsize = 14
	textoffset = 20
	visiblecolor = Color3.fromRGB(38, 255, 99)
	hiddencolor = Color3.fromRGB(255, 37, 40)
	headboxsize = 4
	headboxaimsize = 6
	headboxshape = 'rectangle'
	local LocalPlayer = game:GetService("Players").LocalPlayer
	-- rectangle or diamond

	bounding_box = false
	box_line_size = 1

	local GUI = Instance.new('ScreenGui', PlayerGui)
	GUI.ResetOnSpawn = false

	ESP = Instance.new('Folder', GUI)
	ESP.Name = 'ESP'
	local Bottom = Instance.new('Frame', ESP)
	Bottom.Name = 'Bottom'
	Bottom.BackgroundTransparency = 1
	Bottom.Size = UDim2.new(0, 1, 0, 1)
	Bottom.Position = UDim2.new(.5, 0, 1, 1)

	shared.iDrawings = shared.iDrawings or {};
	local rad = 50
	local FovGui = shared.iDrawings.FOV_Circle or Drawing.new'Circle';
	FovGui.Radius = 50;
	FovGui.Visible = false;
	FovGui.Color = Color3.new(1, 1, 0);
	FovGui.Transparency = .25;
	FovGui.Filled = false;
	FovGui.Thickness = 2;
	FovGui.NumSides = 75;
	FovGui.Position = Vector2.new(Mouse.X, Mouse.Y-2)--Vector2.new(Camera.ViewportSize.X / 2, Camera.ViewportSize.Y / 2);
	shared.iDrawings.FOV_Circle = FovGui

	--local Tween	= loadstring(HttpGet'https://raw.githubusercontent.com/kikito/tween.lua/master/tween.lua')();
	--assert(Tween, 'Tween Library unavailable');

	function CreateCircleTween()
		shared.iDrawings.FOV_Circle.Radius = rad
	end

	local n = 0

	local function distfromspawn(x)
		return 4000
	end

	--Mouse.Icon = 'rbxassetid://'..mouseiconid

	local function DrawLine(Folder, P1, P2, Thickness, Color, LineTransparency, BorderThickness, BorderColor)
		-- Declare variables
		local Point1, Point2 = P1.Position, P2.Position
		if Point1 and Point2 then
			local X, Y = Camera.ViewportSize.X, Camera.ViewportSize.Y
			local X1, X2 = (X * Point1.X.Scale + Point1.X.Offset + P1.Size.X.Offset / 2), (X * Point2.X.Scale + Point2.X.Offset + P2.Size.X.Offset / 2)
			local Y1, Y2 = (Y * Point1.Y.Scale + Point1.Y.Offset + P1.Size.Y.Offset / 2), (Y * Point2.Y.Scale + Point2.Y.Offset + P2.Size.Y.Offset / 2)
			local MidX, MidY = (X1 + X2) / 2, (Y1 + Y2) / 2
		-- Set defaults to prevent errors
			Thickness = Thickness or 1
			Color = Color or Color3.new(1, 1, 1)
			LineTransparency =  LineTransparency or 0
			BorderThickness = BorderThickness or 0
			BorderColor = BorderColor or Color3.new(0, 0, 0)
		-- Draw the line
			local Line = Folder:FindFirstChild(P1.Name..'-'..P2.Name) or Instance.new('Frame', Folder)
			Line.Visible = false
			Line.BackgroundTransparency = LineTransparency
			Line.BorderSizePixel = BorderThickness
			Line.BorderColor3 = BorderColor
			Line.Size = UDim2.new(0, (Vector2.new(X1, Y1) - Vector2.new(X2, Y2)).magnitude - 1, 0, Thickness)
			Line.Position = UDim2.new(0, MidX - Line.AbsoluteSize.X / 2, 0, MidY - Line.AbsoluteSize.Y)
			Line.BackgroundColor3 = Color
			Line.Rotation = math.deg(math.atan2((Y2 - Y1), (X2 - X1)))
			Line.Name = P1.Name..'-'..P2.Name
			Line.Visible = true
			return Line
		else
			return nil
		end
	end

	function SameTeam(P1, P2)
		if P1 == P2 then
			return false
		end
		pcall(function()
			if P1.TeamColor == P2.TeamColor and teamcheck then
				return true
			end
		end)
		return false
	end
	
	function CheckRay(Char, enemyChar, Distance, Position, Unit)
		local Pass = true;
	
		local _Ray = Ray.new(Position, Unit * Distance);
		
		local List = {Char, Camera, Mouse.TargetFilter};
		if badbus then
			for i,v in pairs(workspace:GetChildren()) do
				if v:IsA("Model") then table.insert(List, v) end
			end
		end
	
		for i,v in pairs(IgnoreList) do table.insert(List, v); end;
	
		local Hit = workspace:FindPartOnRayWithIgnoreList(_Ray, List);
	
		if Hit and not Hit:IsDescendantOf(enemyChar) then
			Pass = false;
			if Hit.Transparency >= 0.3 or not Hit.CanCollide and Hit.ClassName ~= Terrain then -- Detect invisible walls
				IgnoreList[#IgnoreList + 1] = Hit;
			end
		end
	
		return Pass;
	end

	function GetNearest()
		local Highest = {2e9};
		local char

		if badbus then
			mainmodule = require(game:GetService("ReplicatedStorage"):WaitForChild("Tortoiseshell"))
		end

		local function search(v)
			local Player = v;
			local Character = Player.Character;
			if Player ~= LocalPlayer and Character then
				local Head = Character:FindFirstChild'Head';
				if teamcheck then
					if SameTeam(Player, LocalPlayer) then
						Head = nil
					end
				end

				if Head and Head.Position.X ~= 0 and Head.Position.Z ~= 0 then

					local DP = (Head.Position - Camera.CFrame.p).magnitude

					if DP < Highest[1] then
										
						local pos, withinScreenBounds = Camera:WorldToScreenPoint(Head.Position)

						if withinScreenBounds then
							if visible_check then
								local ignorelist = {LocalPlayer.Character}

								local castPoints = {Head.Position}
								local hit = Camera:GetPartsObscuringTarget(castPoints, ignorelist)

								local isHit = false
								for i,v in pairs(hit) do
									if not v:IsDescendantOf(Player.Character) then
										isHit = true
									end
								end
								if isHit == false then
									Highest = {DP};
									char = Character
								end
							else
								Highest = {DP};
								char = Character
							end
						end


					end
				end
			end
		end

		local function Bsearch2(Head, Char)
			if Head and Char then
				if Head and Head.Position.X ~= 0 and Head.Position.Z ~= 0 then
					local enemyChar = Head.Parent.Parent
					local Distance = (Camera.CFrame.p - Head.Position).magnitude;
					local Relative = Char.Hitbox.Head.Position - Camera.CFrame.p;
					local Unit = Relative.unit;
	
					local DP = (Head.Position - Char.Hitbox.Head.Position).magnitude
	
					if DP < Highest[1] then
						
						if enemyChar.Hitbox.Parent:FindFirstChild("Health") then
							if enemyChar.Hitbox.Parent.Health.Value > 0 then
								local enmyPlr = require(game:GetService("ReplicatedStorage"):WaitForChild("Tortoiseshell")).Characters:GetPlayerFromCharacter(enemyChar.Hitbox.Parent)
								if enmyPlr then
									if not mainmodule.Teams:ArePlayersFriendly(game:GetService("Players").LocalPlayer, enmyPlr) then
										
										local pos, withinScreenBounds = Camera:WorldToScreenPoint(Head.Position)
	
										if withinScreenBounds then
											
											local ignorelist = {Char}
											for i,v in pairs(workspace:children'') do
												if v:IsA("Model") then
													table.insert(ignorelist,v)
												end
											end
	
											local castPoints = {Head.Position}
											local hit = Camera:GetPartsObscuringTarget(castPoints, ignorelist)
	
											local isHit = false
											for i,v in pairs(hit) do
												if not v:IsDescendantOf(enemyChar) then
													isHit = true
												end
											end
											if isHit == false then
												Highest = {DP};
												char = enemyChar.Hitbox
											end
	
										end
										
									end
								end
							end
						end
					end
					
				end
			end
		end

		if not badbus then
			for i, v in pairs(Players:GetPlayers()) do
				search(v)
			end
		else
			local Char = require(game:GetService("ReplicatedStorage"):WaitForChild("Tortoiseshell")).Characters:GetCharacter(game:GetService("Players").LocalPlayer)
			for i, v in pairs(game:GetService("Workspace").Characters:GetChildren()) do 
				if v ~= Char then
					if v ~= nil and v:FindFirstChild("Hitbox") then
						if v:FindFirstChild("Hitbox"):FindFirstChild("Head") then
							Bsearch2(v:FindFirstChild("Hitbox").Head, Char)
						end
					end
				end
			end
		end
	
		return char;
	end
		
	Mouse.Move:Connect(function()
		cursor = ESP:FindFirstChild('Cursor') or Instance.new('Frame', ESP)
		cursor.Name = 'Cursor'
		cursor.BackgroundTransparency = 1
		cursor.Size = UDim2.new(0, 1, 0, 1)
		cursor.Position = UDim2.new(0, Mouse.X, 0, Mouse.Y)
	end)

	function GetMagnitude(Vector)
		return math.sqrt(Vector.x * Vector.x + Vector.y * Vector.y + Vector.z * Vector.z);
	end
	
	function Normalize(Vector)
		return Vector / GetMagnitude(Vector);
	end
	
	function Round(Num, DecimalPlaces)
		local Multiplier = 10 ^ (DecimalPlaces or 0);
		return math.floor(Num * Multiplier + 0.5) / Multiplier;
	end
	
	function GetAngle(Point, Direction, From)
		local Normal = Normalize(Point - From);
		local Cross = Normal:Cross(Direction);
		local Magnitude = GetMagnitude(Cross);
		local DP = Normal:Dot(Direction);
		local Angle = math.atan2(Magnitude, DP) * (180 / math.pi);
		return Angle;
	end
	
	function GetDifference(Num, SNum)
		return math.abs(Num - SNum);
	end
	
	local CachedRadius = setmetatable({}, {
		__index = function(t, i)
			return rawget(t, i) or {
				Radius = 0;
				Angle = 0;
				Difference = 1e9;
			};
		end
	});
	local CI = 0;
	local LT = tick();
	local lastAngle = 0;

	UIS.InputBegan:Connect(function(Input)
		if Input.KeyCode == toggle_aim or Input.UserInputType == toggle_aim then
			aim_toggled = true
			alert = true
			while aim_toggled and aimbot_toggled do
				target = GetNearest()

				local Center = Vector2.new(Camera.ViewportSize.X / 2, Camera.ViewportSize.Y / 2);
				local FOV = fov

				local AimPosition = ZeroVector;
				local ScreenPosition, V = ZeroVector, false;

				if teamcheck and target ~= nil then
					if not badbus then
						if game:GetService("Players")[target.Name].TeamColor == game:GetService("Players").LocalPlayer.TeamColor then
							target = nil
						end
					end
                end

				if target ~= nil then
					if not badbus then
						if target:FindFirstChildOfClass("Humanoid") then
							if target:FindFirstChildOfClass("Humanoid").Health <= 0 then
								target = nil
							end
						end
					end
                end
				
				if target then
					local Char 
					if badbus then
						Char = require(game:GetService("ReplicatedStorage"):WaitForChild("Tortoiseshell")).Characters:GetCharacter(game:GetService("Players").LocalPlayer)
					end

					AimPosition = target.Head.Position;
					ScreenPosition, V = Camera:WorldToViewportPoint(AimPosition);

					Angle = Round(GetAngle(AimPosition, Camera.CFrame.lookVector.unit, Camera.CFrame.p), 2);

					--warn(target, Angle, FOV)
                    local no = true
					if fov_toggled and Angle > FOV then
                        no = false
                    end
					if no then
						local dist
						if not badbus then
							dist = Player:DistanceFromCharacter(target[targetpart].Position)
						else
							dist = (Char.Hitbox.Head.Position - target[targetpart].Position).magnitude
						end

                        local headpos = Camera:WorldToScreenPoint(target[targetpart].Position + Vector3.new(0, dist / (100 / drop), 0))
                        local moveto = Vector2.new((headpos.X - Mouse.X) * sens, (headpos.Y - Mouse.Y) * sens)
                        aimpos = GUI:FindFirstChild('AimPos') or Instance.new('Frame', GUI)
                        if not GUI:FindFirstChild('AimPos') then
                            aimpos.Name = 'AimPos'
                            aimpos.BorderSizePixel = 1
                            aimpos.BorderColor3 = Color3.new(0, 0, 0)
                            aimpos.BackgroundTransparency = 0
                            aimpos.BackgroundColor3 = Color3.new(1, 1, 1)
                            aimpos.Rotation = 45
                            aimpos.ZIndex = 4
                            aimpos.Size = UDim2.new(0, 3, 0, 3)
                        end
                        aimpos.Position = UDim2.new(0, headpos.X - aimpos.AbsoluteSize.X / 2, 0, headpos.Y - aimpos.AbsoluteSize.Y / 2)
						aimpos.Visible = true
                        mousemoverel(moveto.X, moveto.Y)
                        if alert or target ~= target_old then
                            lockedon = true
                            alert = false
                        end
                    end
                end
				RS.Heartbeat:wait()
				target_old = target
				if aimpos then
					aimpos.Visible = false
				end
			end
			lockedon = false
		end
	end)

	UIS.InputEnded:Connect(function(Input)
		if Input.KeyCode == toggle_aim or Input.UserInputType == toggle_aim then
			aim_toggled = false
		end
	end)

	Player.CharacterAdded:Connect(function(c)
		for _, v in next, ESP:GetDescendants() do
			if v:IsA('Frame') and v.Name:match('-') then
				v:Destroy()
			end
		end
	end)

	RS:UnbindFromRenderStep'UVAI-SL';

	RS:BindToRenderStep('UVAI-SL', 1, function()
		local DT = tick() - LT;
		LT = tick();
		local Color = Color3.fromHSV(tick() * 48 % 255/255, 1, 1);
		FovGui.Color = Color;

		local Center = Vector2.new(Camera.ViewportSize.X / 2, Camera.ViewportSize.Y / 2);
		local CF = Camera.CFrame * CFrame.Angles(0, math.rad(CI), 0) * CFrame.new(0, 0, -100);
		CF = CF.p;
		local Angle = Round(GetAngle(CF, Camera.CFrame.lookVector.unit, Camera.CFrame.p), 2);
		local CAng = Round(Angle, 1);

		CI = CI + 0.25;
		if (CI > 90) then CI = -90 end

		local TempPos, X = Camera:WorldToViewportPoint(CF);

		local Point	= TempPos; -- Center + Vector2.new(FOV, FOV);
		local Radius = math.sqrt((Point.X - Center.X)^2 + (Point.Y - Center.Y)^2);
		
		local CS = CachedRadius[CAng];
		local Difference = GetDifference(Angle, CS.Angle);

		if CAng % 1 == 0 and (Difference < CS.Difference or Difference < 0.15) then
			CachedRadius[CAng] = {
				Radius = Radius;
				Angle = Angle;
				Difference = GetDifference(Angle, CachedRadius[FOV].Angle);
			};
		end

		FovGui.Position = Center;
		local FOV = fov
		------///////

		local BestRadius = 0;

		local AimPosition = ZeroVector;
		local ScreenPosition, V = ZeroVector, false;

		if CachedRadius[FOV].Radius == 0 then
			BestRadius = Radius;
		else
			BestRadius = CachedRadius[FOV].Radius;
		end
		shared.iDrawings.FOV_Circle.Radius = BestRadius
	end)

	---- ///// Universal_ESP

	local camera = game:GetService("Workspace").CurrentCamera
	local RunService = game:GetService("RunService")
	local Players = game:GetService("Players")
	local LocalPlayer = game:GetService("Players").LocalPlayer
	local mouse = game:GetService("Players").LocalPlayer:GetMouse()
	local Paused = false
	local espFontSize = 18

	TaggedPlayers = { }
	LinedPlayers = { }
	PlayerNames = { }
	BoxOutline = { }

	local Settings = {
		["Nametag"] = DefaultSettings["UniversalEsp"]["Show Username"];
		["Tracers"] = DefaultSettings["UniversalEsp"]["Tracers"];
		["TextOutline"] = DefaultSettings["UniversalEsp"]["Text Outline"];
		["TeamCheck"] = true;
		["BoxOutline"] = DefaultSettings["UniversalEsp"]["Box Outline"];
	}

	local Data = {
		["TeamColor"] = Color3.new(DefaultSettings["UniversalEsp"]["Team ESP Color"][1], DefaultSettings["UniversalEsp"]["Team ESP Color"][2], DefaultSettings["UniversalEsp"]["Team ESP Color"][3]);
		["EnemyColor"] = Color3.new(DefaultSettings["UniversalEsp"]["Enemy ESP Color"][1], DefaultSettings["UniversalEsp"]["Enemy ESP Color"][2], DefaultSettings["UniversalEsp"]["Enemy ESP Color"][3]);
		["VisibleColor"] = Color3.new(DefaultSettings["UniversalEsp"]["Visible ESP Color"][1], DefaultSettings["UniversalEsp"]["Visible ESP Color"][2], DefaultSettings["UniversalEsp"]["Visible ESP Color"][3]);
	}

	function WorldToScreen(part, idx)
		if part ~= nil then
			RootPos = part.position
			scr, vis = camera:WorldToScreenPoint(RootPos)
			if vis then
				TaggedPlayers[idx].Visible = true
				LinedPlayers[idx].Visible = true
				return Vector2.new(scr.x, scr.y)
			else
				TaggedPlayers[idx].Visible = false
				LinedPlayers[idx].Visible = false
				return Vector2.new(0, 0)
			end
		else
			TaggedPlayers[idx].Visible = false
			LinedPlayers[idx].Visible = false
			return Vector2.new(0, 0)
		end
	end

	local function isVisible(v,localCharacter)
		local pos, withinScreenBounds = camera:WorldToScreenPoint(v.Position)
		if withinScreenBounds then
			local ignorelist = {localCharacter}

			local castPoints = {v.Position}
			local hit = camera:GetPartsObscuringTarget(castPoints, ignorelist)

			local isHit = false
			for i,c in pairs(hit) do
				if not c:IsDescendantOf(v.Parent) then
					isHit = true
				end
			end
			if isHit == false then
				return true
			else
				return false
			end
		else
			return false
		end
	end

	local function has_value (tab, val)
	for index, value in ipairs(tab) do
		if value == val then
			return true
		end
	end
	return false
	end

	local function cleartb(t)
		for k in pairs (t) do
			t[k] = nil
		end
	end

	local function removeESP(t)
		for k in pairs (t) do
			t[k].Remove(t[k])
		end
	end

	function Init()
		Paused = true   
		removeESP(TaggedPlayers)
		removeESP(LinedPlayers)
		cleartb(LinedPlayers)
		cleartb(TaggedPlayers)
		cleartb(PlayerNames)

		wait()
		Paused = false
	end

	function LoadESP()
		for i,v in pairs(game:GetService("Players"):GetChildren()) do
			enChar = v.Character
			local Head
			if enChar then
				if not has_value(PlayerNames, v.Name) then
					if v.Name ~= LocalPlayer.Name then

						if v.TeamColor == LocalPlayer.TeamColor then
							isFriendly = true
						else
							isFriendly = false
						end


						LinedPlayers[i] = LinedPlayers[i] or Drawing.new("Line")
						TaggedPlayers[i] = TaggedPlayers[i] or Drawing.new("Text")
						PlayerNames[i] = PlayerNames[i] or v.Name

						BoxOutline[i] = BoxOutline[i] or {
							Box = Instance.new('BillboardGui', game:GetService("CoreGui")),
						}

						
						Loc = WorldToScreen(v.Character:FindFirstChild("Head"), i)
						Head = v.Character:FindFirstChild("Head")
						if Loc then
							local localChar = game:service'Players'.LocalPlayer.Character

							if isFriendly then
								setColor = Data.TeamColor 
							elseif isVisible(Head, localChar) then
								setColor = Data.VisibleColor 
							else
								setColor = Data.EnemyColor 
							end

							if Settings.Nametag and setColor ~= false and not (Settings.TeamCheck and isFriendly) then
								TaggedPlayers[i].Text = v.Name
								TaggedPlayers[i].Size = espFontSize
								TaggedPlayers[i].Color = setColor
								TaggedPlayers[i].Outline = Settings.TextOutline
								TaggedPlayers[i].Center = true

								TaggedPlayers[i].Position = Loc
								
								local pos, withinScreenBounds = Camera:WorldToScreenPoint(Head.Position)
	
								if withinScreenBounds then
									TaggedPlayers[i].Visible = true
								else
									TaggedPlayers[i].Visible = false
								end
							elseif not Settings.Nametag or (Settings.TeamCheck and isFriendly) then
								TaggedPlayers[i].Visible = false
							end

							if Settings.Tracers and setColor ~= false and not (Settings.TeamCheck and isFriendly) then
								local ScreenPosition, Vis = camera:WorldToViewportPoint(Head.Position);
								LinedPlayers[i].Thickness = 1
								LinedPlayers[i].Color = setColor
								--LinedPlayers[i].From = Vector2.new(camera.ViewportSize.X / 2, camera.ViewportSize.Y - 2)
								--LinedPlayers[i].To = Loc
								LinedPlayers[i].From = Vector2.new(camera.ViewportSize.X / 2, camera.ViewportSize.Y);
								LinedPlayers[i].To = Vector2.new(ScreenPosition.X, ScreenPosition.Y);

								local pos, withinScreenBounds = Camera:WorldToScreenPoint(Head.Position)
	
								if withinScreenBounds then
									LinedPlayers[i].Visible = true
								else
									LinedPlayers[i].Visible = false
								end
							elseif not Settings.Tracers or (Settings.TeamCheck and isFriendly) then
								LinedPlayers[i].Visible = false
							end

							if Settings.BoxOutline and setColor ~= false and not BoxOutline[i].Box.Adornee then
								
								BoxOutline[i].Box.Adornee = v.Character:FindFirstChild('HumanoidRootPart')
								if BoxOutline[i].Box.Adornee and not (Settings.TeamCheck and isFriendly) then
									BoxOutline[i].Box.AlwaysOnTop = true
									BoxOutline[i].Box.LightInfluence = 0
									BoxOutline[i].Box.StudsOffset = Vector3.new(0, -BoxOutline[i].Box.Adornee.Size.Y / 4, 0)
									BoxOutline[i].Box.Size = UDim2.new(4, 1, 5, 1)

									local Top = Instance.new('Frame', BoxOutline[i].Box)
									Top.Size = UDim2.new(1, 0, 0, 1)
									Top.BorderSizePixel = 0

									local Bot = Top:Clone()
									Bot.Position = UDim2.new(0, 0, 1, -1)
									Bot.Parent = BoxOutline[i].Box

									local Left = Top:Clone()
									Left.Size = UDim2.new(0, 1, 1, 0)
									Left.Parent = BoxOutline[i].Box

									local Right = Left:Clone()
									Right.Position = UDim2.new(1, -1, 0, 0)
									Right.Parent = BoxOutline[i].Box

									for _, v in next, BoxOutline[i].Box:children() do
										if v:IsA('Frame') then
											v.BackgroundColor3 = setColor
										end
									end
								end
							elseif Settings.BoxOutline and setColor ~= false then
								for _, v in next, BoxOutline[i].Box:children() do
									if v:IsA('Frame') then
										v.BackgroundColor3 = setColor
									end
								end
							elseif not Settings.BoxOutline or (Settings.TeamCheck and isFriendly) then
								if BoxOutline[i].Box.Adornee then
									BoxOutline[i].Box.Adornee = nil
								end
								
							end
						end
					end
				else
					local Head
					Head = v.Character:FindFirstChild("Head")
					if Loc then
						if Settings.Tracers then
							LinedPlayers[i].From = Vector2.new(camera.ViewportSize.X / 2, camera.ViewportSize.Y - 2)
							LinedPlayers[i].To = Loc
							local pos, withinScreenBounds = Camera:WorldToScreenPoint(Head.Position)
	
							if withinScreenBounds then
								LinedPlayers[i].Visible = true
							else
								LinedPlayers[i].Visible = false
							end
						end

						if Settings.Nametag then
							TaggedPlayers[i].Position = Loc
						end
					end
				end
			elseif PlayerNames[i] and PlayerNames[i] == v.Name then
				TaggedPlayers[i].Visible = false
				LinedPlayers[i].Visible = false

				BoxOutline[i].Box.Adornee = nil
			end
		end
	end

	Init()

	Players.PlayerAdded:connect(function(player)
		Paused = true
		removeESP(TaggedPlayers)
		removeESP(LinedPlayers)
		cleartb(LinedPlayers)
		cleartb(TaggedPlayers)
		cleartb(PlayerNames)
		Paused = false
	end)

	Players.PlayerRemoving:connect(function(player)
		Paused = true
		removeESP(TaggedPlayers)
		removeESP(LinedPlayers)
		cleartb(LinedPlayers)
		cleartb(TaggedPlayers)
		cleartb(PlayerNames)
		Paused = false
	end)

	RunService:UnbindFromRenderStep("Hattori-Universal");

	RunService:BindToRenderStep("Hattori-Universal", 1, function()
		if not Paused then
			LoadESP()
		end
	end);


	
	local espT = library:CreateTab("ESP")

	local shdsts1 = espT:AddSwitch("Show Username",function(state)
		Settings["Nametag"] = state
	end)
	shdsts1:Set(Settings["Nametag"])

	local efs = espT:AddSlider("Name Font Size", 12, 30, function (x)
		espFontSize = tonumber(x) or espFontSize
	end)
	efs:Set(espFontSize)

	local shdsts2 = espT:AddSwitch("Text Outline",function(state)
		Settings["TextOutline"] = state
	end)
	shdsts2:Set(Settings["TextOutline"])

	local trcrs = espT:AddSwitch("Tracers",function(state)
		Settings["Tracers"] = state
	end)
	trcrs:Set(Settings["Tracers"])

	local bxout = espT:AddSwitch("Box Outline",function(state)
		Settings["BoxOutline"] = state
	end)
	bxout:Set(Settings["BoxOutline"])

	local EnColor = espT:AddColor("Enemy ESP Color", Data.EnemyColor, function(color)
		Data.EnemyColor = color
	end)

	local TeColor = espT:AddColor("Team ESP Color", Data.TeamColor, function(color)
		Data.TeamColor = color
	end)

	local TeColor = espT:AddColor("Visible ESP Color", Data.VisibleColor, function(color)
		Data.VisibleColor = color
	end)

	local FasterLoading = DefaultSettings["UIColorSettings"]["FasterLoading"] or false

	spawn(function()
		while true do -- Autosave settings every 40 secs

			DefaultSettings["UniversalEsp"]["Show Username"] = Settings["Nametag"]
			DefaultSettings["UniversalEsp"]["Text Outline"] = Settings["TextOutline"]
			DefaultSettings["UniversalEsp"]["Tracers"] = Settings["Tracers"]
			DefaultSettings["UniversalEsp"]["Box Outline"] = Settings["BoxOutline"]
			DefaultSettings["UniversalEsp"]["Enemy ESP Color"] = {Data.EnemyColor.r, Data.EnemyColor.g, Data.EnemyColor.b}
			DefaultSettings["UniversalEsp"]["Team ESP Color"] = {Data.TeamColor.r, Data.TeamColor.g, Data.TeamColor.b}
			DefaultSettings["UniversalEsp"]["Visible ESP Color"] = {Data.VisibleColor.r, Data.VisibleColor.g, Data.VisibleColor.b}
	
			Save()

			wait(40)
		end
	end)

end

--[[
ColorGradient1 = Color3.fromRGB(255, 150, 0)
ColorGradient2 = Color3.fromRGB(255, 0, 0)

local uiGradients = {}
local toggleInnerCircles = {}
local toggleOuterCircles = {}
]]

spawn(function()
	while true do
		DefaultSettings["UIColorSettings"]["FasterLoading"] = FasterLoading
		DefaultSettings["UIColorSettings"]["GradientTwoEnabled"] = GradientTwoEnabled
		DefaultSettings["UIColorSettings"]["ColorGradient1"] = {ColorGradient1.r, ColorGradient1.g, ColorGradient1.b}
		DefaultSettings["UIColorSettings"]["ColorGradient2"] = {ColorGradient2.r, ColorGradient2.g, ColorGradient2.b}

		Save()

		wait(40)
	end
end)


local cTab = library:CreateTab("UI Color Options")

local discInv = cTab:AddButton("Copy Discord Invite", function()
	write_clipboard("https://discord.gg/NrUdGxZ")
end)

local AC1 = cTab:AddColor("Accent Gradient 1", ColorGradient1, function(color)
	ColorGradient1 = color
	for i,v in pairs(uiGradients) do
		pcall(function()
			v.Color = ColorSequence.new{ColorSequenceKeypoint.new(0, ColorGradient1), ColorSequenceKeypoint.new(1, ColorGradient2)}
		end)
	end
	for i,v in pairs(toggleInnerCircles) do
		pcall(function()
			if v then
				i.ImageColor3 = ColorGradient1
			end
		end)
	end
	for i,v in pairs(toggleOuterCircles) do
		pcall(function()
			if v then
				i.ImageColor3 = ColorGradient1
			end
		end)
	end
	for i,v in pairs(sliderDots) do
		pcall(function()
			v.ImageColor3 = ColorGradient1
		end)
	end
	if not GradientTwoEnabled then
		for i,v in pairs(uiGradients) do
			pcall(function()
				v.Color = ColorSequence.new{ColorSequenceKeypoint.new(0, ColorGradient1), ColorSequenceKeypoint.new(1, ColorGradient1)}
			end)
		end
		for i,v in pairs(sliderLines) do
			pcall(function()
				v.BackgroundColor3 = ColorGradient1
			end)
		end
	end
end)

local g2Enabled = cTab:AddSwitch("Gradient 2 Enabled",function(state)
	GradientTwoEnabled = state
	if state then
		for i,v in pairs(uiGradients) do
			pcall(function()
				v.Color = ColorSequence.new{ColorSequenceKeypoint.new(0, ColorGradient1), ColorSequenceKeypoint.new(1, ColorGradient2)}
			end)
		end
		for i,v in pairs(sliderLines) do
			pcall(function()
				v.BackgroundColor3 = ColorGradient2
			end)
		end
	else
		for i,v in pairs(uiGradients) do
			pcall(function()
				v.Color = ColorSequence.new{ColorSequenceKeypoint.new(0, ColorGradient1), ColorSequenceKeypoint.new(1, ColorGradient1)}
			end)
		end
		for i,v in pairs(sliderLines) do
			pcall(function()
				v.BackgroundColor3 = ColorGradient1
			end)
		end
	end	
end)
g2Enabled:Set(GradientTwoEnabled)

local AC2 = cTab:AddColor("Accent Gradient 2", ColorGradient2, function(color)
	ColorGradient2 = color
	for i,v in pairs(uiGradients) do
		pcall(function()
			v.Color = ColorSequence.new{ColorSequenceKeypoint.new(0, ColorGradient1), ColorSequenceKeypoint.new(1, ColorGradient2)}
		end)
	end
	for i,v in pairs(sliderLines) do
		pcall(function()
			v.BackgroundColor3 = ColorGradient2
		end)
	end
end)


--[[
 __  __   ______   ______  ______  ______   ______   __    
/\ \_\ \ /\  __ \ /\__  _\/\__  _\/\  __ \ /\  == \ /\ \   
\ \  __ \\ \  __ \\/_/\ \/\/_/\ \/\ \ \/\ \\ \  __< \ \ \  
 \ \_\ \_\\ \_\ \_\  \ \_\   \ \_\ \ \_____\\ \_\ \_\\ \_\ 
  \/_/\/_/ \/_/\/_/   \/_/    \/_/  \/_____/ \/_/ /_/ \/_/ 
                                                           

    Hattori v4 by Phoenixx, Source Release
    Ui Library made by xMee


    Read through the code and learn from my mistakes, make fun of my shitty code, or even if you skid it,   i don't give a fuck
    If you do take the code or whatever, at least give credits

    -RIP Hattori 2020

]]









local codeWhenHopping = [[
    repeat wait() until game.Loaded;]]


local hasCalled = false
game:GetService("Players").LocalPlayer.OnTeleport:Connect(function(State)
    if State == Enum.TeleportState.Started and not hasCalled then
        syn.queue_on_teleport(codeWhenHopping)
    end
end)

wait()



local library = {
    toggled = true;
    binding = false;
    binds = {};
}

if getgenv and getgenv().hattUI then
    getgenv().hattUI:Destroy()
end

local HttpService = game:GetService("HttpService")
do
    local contentProvider = game:GetService("ContentProvider")
    local userInputService = game:GetService("UserInputService")
    local runService = game:GetService("RunService")

    contentProvider:PreloadAsync({
		"rbxassetid://5880691637";
		"rbxassetid://5882688826";
		"rbxassetid://4896743658";
		"rbxassetid://4894670678";
		"rbxassetid://4892761119";
		"rbxassetid://5880482965";
        "rbxassetid://4892463081";
        "rbxassetid://5882871047";
    })

    local originalSize
    local originalObjectY
    local originalContainerY
    local dynamicContainerBottomYPos

    local originalTabY
    local originalTabContainerY
    local dynamicTabContainerBottomYPos

    local tabList = {}
    local dropList = {}
    local main = {}
    main.__index = main
    local tabs = {}
    tabs.__index = tabs
    local labels = {}
    labels.__index = labels

    local function isInGui(frame)
        if not frame then return end

        local mouseLocation = userInputService:GetMouseLocation()
        local mouse = Vector2.new(mouseLocation.X, mouseLocation.Y - 36)

        local x1, x2 = frame.AbsolutePosition.X, frame.AbsolutePosition.X + frame.AbsoluteSize.X
        local y1, y2 = frame.AbsolutePosition.Y, frame.AbsolutePosition.Y + frame.AbsoluteSize.Y
        
        return (mouse.X >= x1 and mouse.X <= x2) and (mouse.Y >= y1 and mouse.Y <= y2)
    end

    function main:resize()
        local y = 0

        for i,v in pairs(self.container:GetChildren()) do
            if not v:IsA("UIListLayout") then
                y = y + v.AbsoluteSize.Y
            end
        end

        self.object.Size = UDim2.new(0, 180, 0, y + 57)
    end

    function main:getOrder()
        local count = 0

        for i,v in pairs(self.container:GetChildren()) do
            if not v:IsA("UIListLayout") then
                count = count + 1
            end
        end

        return count
    end

    function tabs:getOrder()
        local count = 0

        for i,v in pairs(self.container:GetChildren()) do
            if not v:IsA("UIListLayout") then
                count = count + 1
            end
        end

        return count
    end

    local m = game.Players.LocalPlayer:GetMouse()

    local function isHoveringOverObj(obj)
        local tx = obj.AbsolutePosition.X
        local ty = obj.AbsolutePosition.Y
        local bx = tx + obj.AbsoluteSize.X
        local by = ty + obj.AbsoluteSize.Y
        if m.X >= tx and m.Y >= ty and m.X <= bx and m.Y <= by then
            return true
        end
    end

    local function Resize(part,new,_delay)
        local TweenService = game:GetService("TweenService")
        _delay = _delay or 0.5
        local tweenInfo = TweenInfo.new(_delay, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
        local tween = TweenService:Create(part, tweenInfo, new)
        tween:Play()
    end

    local function CreateDrag(gui)
        local UserInputService = game:GetService("UserInputService")
        local dragging
        local dragInput
        local dragStart
        local startPos
        
        local function update(input)
            local delta = input.Position - dragStart
            Resize(gui, {Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)}, 0.16)
        end
        
        gui.InputBegan:Connect(function(input)
            if (input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch) and isHoveringOverObj(gui.frame.topBorder) then
                dragging = true
                dragStart = input.Position
                startPos = gui.Position
                
                input.Changed:Connect(function()
                    if input.UserInputState == Enum.UserInputState.End then
                        dragging = false
                    end
                end)
            end
        end)
        
        gui.InputChanged:Connect(function(input)
            if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
                dragInput = input
            end
        end)
        
        UserInputService.InputChanged:Connect(function(input)
            if input == dragInput and dragging then
                update(input)
            end
        end)
    end

    function main:window(name)
        local newWindow = library:createElement("ImageLabel", {
            Name = name;
            Size = UDim2.new(0, 180, 0, 50);
            Position = UDim2.new(0, 10, 0, 40);
            Image = "rbxassetid://4894670678";
            ImageColor3 = Color3.fromRGB(15, 15, 15);
            ImageTransparency = 0.5;
            ScaleType = Enum.ScaleType.Slice;
            SliceCenter = Rect.new(5, 5, 434, 297);
            BackgroundTransparency = 1;
            ClipsDescendants = true;
            library:createElement("ImageLabel", {
                Name = "frame";
                Size = UDim2.new(1, -2, 1, -2);
                Position = UDim2.new(0, 1, 0, 1);
                Image = "rbxassetid://4894670678";
                ImageColor3 = Color3.fromRGB(40, 40, 40);
                ScaleType = Enum.ScaleType.Slice;
                SliceCenter = Rect.new(5, 5, 454, 297);
                BackgroundTransparency = 1;
                library:createElement("ImageLabel", {
                    Name = "topBorder";
                    Size = UDim2.new(1, 0, 0, 35);
                    Position = UDim2.new(0, 0, 0, 0);
                    Image = "rbxassetid://4892463081";
                    ImageColor3 = Color3.fromRGB(50, 50, 50);
                    ScaleType = Enum.ScaleType.Slice;
                    SliceCenter = Rect.new(5, 5, 434, 125);
                    BackgroundTransparency = 1;
                    library:createElement("TextLabel", {
                        Name = "title";
                        Size = UDim2.new(0, 180, 0, 35);
                        Position = UDim2.new(0, 15, 0, 0);
                        Text = name;
                        TextWrapped = true;
                        TextXAlignment = Enum.TextXAlignment.Left;
                        TextColor3 = Color3.fromRGB(250, 250, 250);
                        Font = Enum.Font.GothamSemibold;
                        TextSize = 16;
                        BackgroundTransparency = 1;
                    });
                    library:createElement("ImageLabel", {
                        Name = "logo";
                        Size = UDim2.new(0, 24, 0, 20);
                        Position = UDim2.new(1, -30, 0, 7);
                        Image = "rbxassetid://5882871047";
                        BackgroundTransparency = 1;
                        ZIndex = 3;
                    });
                    library:createElement("Frame", {
                        Name = "line";
                        Size = UDim2.new(1, 0, 0, 2);
                        Position = UDim2.new(0, 0, 1, -2);
                        BorderSizePixel = 0;
                        BackgroundColor3 = Color3.fromRGB(35, 35, 35);
                    })
                })
            });
            library:createElement("ImageLabel", {
                Name = "containerBorder";
                Size = UDim2.new(0, 160, 1, -55);
                Position = UDim2.new(0, 10, 0, 45);
                Image = "rbxassetid://4894670678";
                ImageColor3 = Color3.fromRGB(33, 33, 33);
                ImageTransparency = 0;
                ScaleType = Enum.ScaleType.Slice;
                SliceCenter = Rect.new(5, 5, 434, 297);
                BackgroundTransparency = 1;
                ZIndex = 3;
                library:createElement("ImageLabel", {
                    Name = "Container";
                    Size = UDim2.new(1, -2, 1, -2);
                    Position = UDim2.new(0, 1, 0, 1);
                    Image = "rbxassetid://4894670678";
                    ImageColor3 = Color3.fromRGB(50, 50, 50);
                    ScaleType = Enum.ScaleType.Slice;
                    SliceCenter = Rect.new(5, 5, 434, 297);
                    BackgroundTransparency = 1;
                    ClipsDescendants = false;
                    ZIndex = 3;
                    library:createElement("UIListLayout", {
                        SortOrder = 2;
                        Name = "list";
                    })
                });
            });
            Parent = library.container;
        })
        CreateDrag(newWindow)

        local window = setmetatable({
            toggled = true;
            object = newWindow;
            container = newWindow.containerBorder.Container;
        }, main)

        return window
    end

    function main:newTab(name)
        local newTab = library:createElement("Frame", {
            Name = name;
            Size = UDim2.new(1, 0, 0, 35);
            BackgroundTransparency = 1;
            LayoutOrder = self:getOrder();
            ZIndex = 3;
            library:createElement("TextButton", {
                Name = "button";
                Size = UDim2.new(1, 0, 0, 25);
                Position = UDim2.new(0, 0, 0, 5);
                Text = "";
                AutoButtonColor = false;
                BackgroundTransparency = 1;
                ZIndex = 3;
                library:createElement("TextLabel", {
                    Name = "title";
                    Size = UDim2.new(1, -35, 1, 0);
                    Position = UDim2.new(0, 35, 0, 0);
                    BackgroundTransparency = 1;
                    Text = name;
                    TextColor3 = Color3.fromRGB(250, 250, 250);
                    TextXAlignment = Enum.TextXAlignment.Left;
                    Font = Enum.Font.GothamSemibold;
                    TextSize = 12;
                    ZIndex = 3;
                });
                library:createElement("ImageLabel", {
                    Name = "toggleOutline";
                    Size = UDim2.new(0, 20, 0, 20);
                    Position = UDim2.new(0, 5, 0, 5/2);
                    Image = "rbxassetid://4892761119";
                    ScaleType = Enum.ScaleType.Slice;
                    SliceCenter = Rect.new(6, 6, 14, 14);
                    BackgroundTransparency = 1;
                    ZIndex = 3;
                    library:createElement("ImageLabel", {
                        Name = "toggle";
                        Size = UDim2.new(0, 0, 0, 0);
                        Position = UDim2.new(0.5, 0, 0.5, 0);
                        Image = "rbxassetid://5880482965";
                        BackgroundTransparency = 1;
                        ZIndex = 3;
                    })
                })
            });
            Parent = self.container;
        })

        local container = library:createElement("Frame", {
            Name = "container";
            Size = UDim2.new(0, 200, 0, 0);
            Position = UDim2.new(0, 10, 0, 47);
            BorderSizePixel = 0;
            BackgroundTransparency = 1;
            ZIndex = 2;
            ClipsDescendants = true;
            library:createElement("UIListLayout", {
                Name = "list";
                SortOrder = 2;
            });
            Parent = self.object;
        })

        local tab = setmetatable({
            toggled = false;
            parentObject = self.object;
            parentContainer = self.container;
            object = newTab;
            container = container;
            check = newTab.button.toggleOutline.toggle;
            flags = {};
            spFuncs = {};
        }, tabs)
        table.insert(tabList, tab)

        local containerSizeY = 0

        function tab.spFuncs:SimClck()
            if tab.toggled == false then
                tab.toggled = not tab.toggled

                for i,v in pairs(dropList) do
                    if v.toggled then
                    
                        v.toggled = false
                        local frame = v.object.border.frame

                        if not v.usesToggles then
                            frame.label.TextTransparency = 0
                            frame.label.Text = v.l[v.f]
                        end

                        tab.parentObject:TweenSize(UDim2.new(0, tab.parentObject.AbsoluteSize.X, 0, originalTabY), "In", "Quad", 0.15, true)
                        v.container.Parent.Parent.Parent:TweenSize(UDim2.new(1, 0, 0, 0), "In", "Quad", 0.15, true)

                        v.arrow.Rotation = 0
                        wait(0.15)

                    end
                end
                
                for i,v in pairs(tabList) do
                    if v ~= tab and v.toggled then
                        spawn(function()
                            v.toggled = false
                            v.check:TweenSizeAndPosition(UDim2.new(0, 0, 0, 0), UDim2.new(0.5, 0, 0.5, 0), "In", "Quad", 0.15, true)
                            v.container:TweenPosition(UDim2.new(0, 10, 0, 47), "In", "Quad", 0.15, true)
                            wait(0.15)

                            v.container.Size = UDim2.new(0, 200, 0, 0)
                        end)
                    end
                end

                if tab.toggled then
                    local y = 0

                    for i,v in pairs(tab.container:GetChildren()) do
                        if not v:IsA("UIListLayout") then
                            y = y + v.AbsoluteSize.Y
                        end
                    end

                    tab.check:TweenSizeAndPosition(UDim2.new(1, 0, 1, 0), UDim2.new(0, 0, 0, 0), "Out", "Elastic", 0.75, true)
                    tab.parentObject:TweenSize((y == 0 and originalSize) or (y <= originalContainerY and UDim2.new(0, 392, 0, originalObjectY)) or UDim2.new(0, 392, 0, (y + originalObjectY) - originalContainerY + 3), "Out", "Quad", 0.15, true)
                    spawn(function()
                        wait(0.15)
                    
                        if tab.toggled then
                    
                            tab.container.Size = UDim2.new(0, 200, 0, y)
                            tab.container:TweenPosition(UDim2.new(0, 180, 0, 47), "Out", "Quad", 0.15, true)
                            wait(0.15)

                            originalTabY = tab.parentObject.AbsoluteSize.Y
                            originalTabContainerY = tab.container.AbsoluteSize.Y
                            dynamicContainerBottomYPos = tab.parentContainer.AbsolutePosition.Y + tab.parentContainer.AbsoluteSize.Y
                            dynamicTabContainerBottomYPos = tab.container.AbsolutePosition.Y + tab.container.AbsoluteSize.Y

                        end
                    end)
                else
                    tab.check:TweenSizeAndPosition(UDim2.new(0, 0, 0, 0), UDim2.new(0.5, 0, 0.5, 0), "In", "Quad", 0.15, true)
                    tab.container:TweenPosition(UDim2.new(0, 10, 0, 47), "In", "Quad", 0.15, true)
                    spawn(function()
                        wait(0.15)
                        
                        if tab.toggled then
                        
                            tab.container.Size = UDim2.new(0, 200, 0, 0)
                            tab.parentObject:TweenSize(originalSize, "In", "Quad", 0.15, true)

                        end
                    end)
                end
            end
        end

        newTab.button.InputBegan:Connect(function(input)
            if input.UserInputType == Enum.UserInputType.MouseButton1 then
                spawn(function()
                    tab.spFuncs:SimClck()
                end)
            end
        end)

        self:resize()
        
        originalSize = UDim2.new(0, self.object.AbsoluteSize.X, 0, self.object.AbsoluteSize.Y)
        originalObjectY = self.object.AbsoluteSize.Y
        originalContainerY = self.container.AbsoluteSize.Y
        dynamicContainerBottomYPos = tab.parentContainer.AbsolutePosition.Y + tab.parentContainer.AbsoluteSize.Y
        dynamicTabContainerBottomYPos = tab.container.AbsolutePosition.Y + tab.container.AbsoluteSize.Y

        return tab
    end

    function tabs:label(name, text)
        local newLabel = library:createElement("Frame", {
            Name = name;
            Size = UDim2.new(0, 200, 0, 35);
            BackgroundTransparency = 1;
            LayoutOrder = self:getOrder();
            library:createElement("ImageLabel", {
                Name = "border";
                Size = UDim2.new(1, 0, 0, 26);
                Position = UDim2.new(0, 0, 0, 5);
                BackgroundTransparency = 1;
                Image = "rbxassetid://4894670678";
                ImageColor3 = Color3.fromRGB(225, 58, 75);
                ImageTransparency = 0.35;
                ScaleType = Enum.ScaleType.Slice;
                SliceCenter = Rect.new(5, 5, 434, 297);
                library:createElement("ImageButton", {
                    Name = "frame";
                    Size = UDim2.new(1, -2, 1, -2);
                    Position = UDim2.new(0, 1, 0, 1);
                    BackgroundTransparency = 1;
                    Image = "rbxassetid://4894670678";
                    ImageColor3 = Color3.fromRGB(50, 50, 50);
                    ScaleType = Enum.ScaleType.Slice;
                    SliceCenter = Rect.new(5, 5, 434, 297);
                    ClipsDescendants = true;
                    library:createElement("TextLabel", {
                        Name = "text";
                        Size = UDim2.new(1, -10, 1, -10);
                        Position = UDim2.new(0, 5, 0, 5);
                        Text = text;
                        TextColor3 = Color3.fromRGB(250, 250, 250);
                        TextSize = 12;
                        TextWrapped = true;
                        Font = Enum.Font.GothamSemibold;
                        BackgroundTransparency = 1;
                    });
                })
            });
            Parent = self.container;
        })

        local label = setmetatable({
            object = newLabel;
            tabObject = self.object;
            parentObject = self.parentObject;
            container = self.container;
            textBox = newLabel.border.frame.text;
        }, labels)

        while not label.textBox.TextFits do
            runService.RenderStepped:Wait()
            newLabel.Size = newLabel.Size + UDim2.new(0, 0, 0, 10);
            newLabel.border.Size = newLabel.border.Size + UDim2.new(0, 0, 0, 10)
        end

        return label
    end

    function labels:changeText(text)
        self.textBox.Text = text;

        local function getToggled()
            for i,v in pairs(tabList) do
                if self.tabObject == v.object then return v.toggled end
            end

            return false
        end

        if self.textBox.TextFits then
            while self.textBox.TextFits do
                runService.RenderStepped:Wait()

                if getToggled() then
                    self.parentObject.Size = self.parentObject.Size + UDim2.new(0, 0, 0, -10)
                    self.container.Size = self.container.Size + UDim2.new(0, 0, 0, -10)
                end

                self.object.Size = self.object.Size + UDim2.new(0, 0, 0, -10)
                self.object.border.Size = self.object.border.Size + UDim2.new(0, 0, 0, -10)
            end

            self.object.Size = self.object.Size + UDim2.new(0, 0, 0, 10)
            self.object.border.Size = self.object.border.Size + UDim2.new(0, 0, 0, 10)

            if getToggled() then
                self.parentObject.Size = self.parentObject.Size + UDim2.new(0, 0, 0, 10)
                self.container.Size = self.container.Size + UDim2.new(0, 0, 0, 10)
            end

        else
            while not self.textBox.TextFits do
                runService.RenderStepped:Wait()

                if getToggled() then
                    self.parentObject.Size = self.parentObject.Size + UDim2.new(0, 0, 0, 10)
                    self.container.Size = self.container.Size + UDim2.new(0, 0, 0, 10)
                end

                self.object.Size = self.object.Size + UDim2.new(0, 0, 0, 10)
                self.object.border.Size = self.object.border.Size + UDim2.new(0, 0, 0, 10)
            end
        end

        if not getToggled() then return end

        originalTabY = self.parentObject.AbsoluteSize.Y
        originalTabContainerY = self.container.AbsoluteSize.Y
    end

    function tabs:textbox(name, options, callback)
        local default = options.default or "..."
        local location = options.location or self.flags
        local flag = options.flag or ""
        local callback = callback or function() end

        local newTextBox = library:createElement("Frame", {
            Name = name;
            Size = UDim2.new(0, 200, 0, 45);
            BackgroundTransparency = 1;
            LayoutOrder = self:getOrder();
            library:createElement("ImageLabel", {
                Name = "border";
                Size = UDim2.new(1, 0, 0, 35);
                Position = UDim2.new(0, 0, 0, 5);
                Image = "rbxassetid://4894670678";
                ImageColor3 = Color3.fromRGB(25, 25, 25);
                ImageTransparency = 0.5;
                ScaleType = Enum.ScaleType.Slice;
                SliceCenter = Rect.new(5, 5, 434, 297);
                BackgroundTransparency = 1;
                ClipsDescendants = true;
                library:createElement("ImageLabel", {
                    Name = "frame";
                    Size = UDim2.new(1, -2, 1, -2);
                    Position = UDim2.new(0, 1, 0, 1);
                    Image = "rbxassetid://4894670678";
                    ImageColor3 = Color3.fromRGB(50, 50, 50);
                    ScaleType = Enum.ScaleType.Slice;
                    SliceCenter = Rect.new(5, 5, 434, 297);
                    BackgroundTransparency = 1;
                    library:createElement("TextLabel", {
                        Name = "title";
                        Size = UDim2.new(1, -8, 0.5, 0);
                        Position = UDim2.new(0, 8, 0, 0);
                        Text = name;
                        TextColor3 = Color3.fromRGB(250, 250, 250);
                        TextSize = 12;
                        TextWrapped = true;
                        Font = Enum.Font.GothamSemibold;
                        BackgroundTransparency = 1;
                    });
                    library:createElement("ImageLabel", {
                        Name = "textBorder";
                        Size = UDim2.new(0, 135, 0, 15);
                        Position = UDim2.new(0, 35, 0, 16);
                        Image = "rbxassetid://4894670678";
                        ImageColor3 = Color3.fromRGB(25, 25, 25);
                        ImageTransparency = 0.5;
                        ScaleType = Enum.ScaleType.Slice;
                        SliceCenter = Rect.new(5, 5, 434, 297);
                        BackgroundTransparency = 1;
                        library:createElement("ImageLabel", {
                            Name = "textFrame";
                            Size = UDim2.new(1, -2, 1, -2);
                            Position = UDim2.new(0, 1, 0, 1);
                            Image = "rbxassetid://4894670678";
                            ImageColor3 = Color3.fromRGB(70, 70, 70);
                            ScaleType = Enum.ScaleType.Slice;
                            SliceCenter = Rect.new(5, 5, 434, 297);
                            BackgroundTransparency = 1;
                            ClipsDescendants = true;
                            library:createElement("TextBox", {
                                Name = "textInput";
                                Size = UDim2.new(1, 0, 1, 0);
                                Position = UDim2.new(0, 0, 0, 0);
                                Text = default;
                                TextColor3 = Color3.fromRGB(250, 250, 250);
                                TextSize = 12;
                                TextWrapped = true;
                                Font = Enum.Font.GothamSemibold;
                                BackgroundTransparency = 1;
                            })
                        })
                    });
                })
            });
            Parent = self.container;
        })

        local textBox = newTextBox.border.frame.textBorder.textFrame.textInput

        textBox.FocusLost:Connect(function(enterPressed)
            if not enterPressed then return end

            location[flag] = textBox.Text
            callback(location[flag])
        end)
    end

    function tabs:colorSelector(name, options, callback)
        local location = options.location or self.flags
        local flag = options.flag or ""
        local default = options.default or Color3.fromRGB(255, 255, 255)
        local callback = callback or function() end

        location[flag] = default

        local R = math.floor(default.R * 255)
        local G = math.floor(default.G * 255)
        local B = math.floor(default.B * 255)

        local newColorSelector = library:createElement("Frame", {
            Name = name;
            Size = UDim2.new(0, 200, 0, 160);
            BackgroundTransparency = 1;
            LayoutOrder = self:getOrder();
            library:createElement("ImageLabel", {
                Name = "border";
                Size = UDim2.new(1, 0, 0, 151);
                Position = UDim2.new(0, 0, 0, 5);
                BackgroundTransparency = 1;
                Image = "rbxassetid://4894670678";
                ImageColor3 = Color3.fromRGB(200, 58, 75);
                ImageTransparency = 0.35;
                ScaleType = Enum.ScaleType.Slice;
                SliceCenter = Rect.new(5, 5, 434, 297);
                library:createElement("ImageLabel", {
                    Name = "frame";
                    Size = UDim2.new(1, -2, 1, -2);
                    Position = UDim2.new(0, 1, 0, 1);
                    BackgroundTransparency = 1;
                    Image = "rbxassetid://4894670678";
                    ImageColor3 = Color3.fromRGB(50, 50, 50);
                    ScaleType = Enum.ScaleType.Slice;
                    SliceCenter = Rect.new(5, 5, 434, 297);
                    ClipsDescendants = true;
                    library:createElement("TextLabel", {
                        Name = "title";
                        Size = UDim2.new(1, 0, 0, 25);
                        Position = UDim2.new(0, 0, 0, 0);
                        Text = name;
                        TextColor3 = Color3.fromRGB(250, 250, 250);
                        TextSize = 12;
                        TextWrapped = true;
                        Font = Enum.Font.GothamSemibold;
                        BackgroundTransparency = 1;
                    });
                    library:createElement("ImageLabel", {
                        Name = "redBorder";
                        Size = UDim2.new(1, -10, 0, 25);
                        Position = UDim2.new(0, 5, 0, 25);
                        BackgroundTransparency = 1;
                        Image = "rbxassetid://4894670678";
                        ImageColor3 = Color3.fromRGB(25, 25, 25);
                        ImageTransparency = 0.35;
                        ScaleType = Enum.ScaleType.Slice;
                        SliceCenter = Rect.new(5, 5, 434, 297);
                        library:createElement("ImageLabel", {
                            Name = "frame";
                            Size = UDim2.new(1, -2, 1, -2);
                            Position = UDim2.new(0, 1, 0, 1);
                            BackgroundTransparency = 1;
                            Image = "rbxassetid://4894670678";
                            ImageColor3 = Color3.fromRGB(40, 40, 40);
                            ScaleType = Enum.ScaleType.Slice;
                            SliceCenter = Rect.new(5, 5, 434, 297);
                            ClipsDescendants = true;
                            library:createElement("TextLabel", {
                                Name = "redLabel";
                                Size = UDim2.new(0.1, 0, 0.1, 0);
                                Position = UDim2.new(0.015, 0, 0.5, -1);
                                Text = "R";
                                TextColor3 = Color3.fromRGB(250, 250, 250);
                                TextSize = 10;
                                TextWrapped = true;
                                Font = Enum.Font.GothamSemibold;
                                BackgroundTransparency = 1;
                            });
                            library:createElement("ImageLabel", {
                                Name = "gradientSelectorBorder";
                                Size = UDim2.new(0.65, 0, 0.65, 0);
                                Position = UDim2.new(0.25/2, 0, 0.35/2, 0);
                                Image = "rbxassetid://4894670678";
                                ImageColor3 = Color3.fromRGB(25, 25, 25);
                                ScaleType = Enum.ScaleType.Slice;
                                SliceCenter = Rect.new(5, 5, 434, 297);
                                BackgroundTransparency = 1;
                                library:createElement("ImageLabel", {
                                    Name = "gradientSelector";
                                    Size = UDim2.new(1, -2, 1, -2);
                                    Position = UDim2.new(0, 1, 0, 1);
                                    Image = "rbxassetid://4894670678";
                                    ImageColor3 = Color3.fromRGB(255, 255, 255);
                                    ScaleType = Enum.ScaleType.Slice;
                                    SliceCenter = Rect.new(5, 5, 434, 297);
                                    BackgroundTransparency = 1;
                                    ClipsDescendants = true;
                                    library:createElement("UIGradient", {
                                        Name = "gradient";
                                        Color = ColorSequence.new(Color3.fromRGB(0, 0, 0), Color3.fromRGB(255, 0, 0));
                                    });
                                    library:createElement("Frame", {
                                        Name = "slider";
                                        Size = UDim2.new(0, 2, 1, 0);
                                        BorderSizePixel = 0;
                                        BackgroundColor3 = Color3.fromRGB(255, 255, 255);
                                        Position = UDim2.new(math.clamp(R / 255, 0, 0.98), 0, 0, 0);
                                    })
                                });
                            });
                            library:createElement("ImageLabel", {
                                Name = "selectedColorBorder";
                                Size = UDim2.new(0.09, 0, 0.65, 0);
                                Position = UDim2.new(0.87, 0, 0.35/2, 0);
                                BackgroundTransparency = 1;
                                Image = "rbxassetid://4894670678";
                                ImageColor3 = Color3.fromRGB(25, 25, 25);
                                ImageTransparency = 0.35;
                                ScaleType = Enum.ScaleType.Slice;
                                SliceCenter = Rect.new(5, 5, 434, 297);
                                library:createElement("ImageLabel", {
                                    Name = "selectedColor";
                                    Size = UDim2.new(1, -2, 1, -2);
                                    Position = UDim2.new(0, 1, 0, 1);
                                    Image = "rbxassetid://4894670678";
                                    ImageColor3 = Color3.fromRGB(R, 0, 0);
                                    ScaleType = Enum.ScaleType.Slice;
                                    SliceCenter = Rect.new(5, 5, 434, 297);
                                    BackgroundTransparency = 1;
                                    ClipsDescendants = true;
                                })
                            })
                        })
                    });
                    library:createElement("ImageLabel", {
                        Name = "greenBorder";
                        Size = UDim2.new(1, -10, 0, 25);
                        Position = UDim2.new(0, 5, 0, 55);
                        BackgroundTransparency = 1;
                        Image = "rbxassetid://4894670678";
                        ImageColor3 = Color3.fromRGB(25, 25, 25);
                        ImageTransparency = 0.35;
                        ScaleType = Enum.ScaleType.Slice;
                        SliceCenter = Rect.new(5, 5, 434, 297);
                        library:createElement("ImageLabel", {
                            Name = "frame";
                            Size = UDim2.new(1, -2, 1, -2);
                            Position = UDim2.new(0, 1, 0, 1);
                            BackgroundTransparency = 1;
                            Image = "rbxassetid://4894670678";
                            ImageColor3 = Color3.fromRGB(40, 40, 40);
                            ScaleType = Enum.ScaleType.Slice;
                            SliceCenter = Rect.new(5, 5, 434, 297);
                            ClipsDescendants = true;
                            library:createElement("TextLabel", {
                                Name = "greenLabel";
                                Size = UDim2.new(0.1, 0, 0.1, 0);
                                Position = UDim2.new(0.015, 0, 0.5, -1);
                                Text = "G";
                                TextColor3 = Color3.fromRGB(250, 250, 250);
                                TextSize = 10;
                                TextWrapped = true;
                                Font = Enum.Font.GothamSemibold;
                                BackgroundTransparency = 1;
                            });
                            library:createElement("ImageLabel", {
                                Name = "gradientSelectorBorder";
                                Size = UDim2.new(0.65, 0, 0.65, 0);
                                Position = UDim2.new(0.25/2, 0, 0.35/2, 0);
                                Image = "rbxassetid://4894670678";
                                ImageColor3 = Color3.fromRGB(25, 25, 25);
                                ScaleType = Enum.ScaleType.Slice;
                                SliceCenter = Rect.new(5, 5, 434, 297);
                                BackgroundTransparency = 1;
                                library:createElement("ImageLabel", {
                                    Name = "gradientSelector";
                                    Size = UDim2.new(1, -2, 1, -2);
                                    Position = UDim2.new(0, 1, 0, 1);
                                    Image = "rbxassetid://4894670678";
                                    ImageColor3 = Color3.fromRGB(255, 255, 255);
                                    ScaleType = Enum.ScaleType.Slice;
                                    SliceCenter = Rect.new(5, 5, 434, 297);
                                    BackgroundTransparency = 1;
                                    ClipsDescendants = true;
                                    library:createElement("UIGradient", {
                                        Name = "gradient";
                                        Color = ColorSequence.new(Color3.fromRGB(0, 0, 0), Color3.fromRGB(0, 255, 0));
                                    });
                                    library:createElement("Frame", {
                                        Name = "slider";
                                        Size = UDim2.new(0, 2, 1, 0);
                                        BorderSizePixel = 0;
                                        BackgroundColor3 = Color3.fromRGB(255, 255, 255);
                                        Position = UDim2.new(math.clamp(G / 255, 0, 0.98), 0, 0, 0);
                                    })
                                });
                            });
                            library:createElement("ImageLabel", {
                                Name = "selectedColorBorder";
                                Size = UDim2.new(0.09, 0, 0.65, 0);
                                Position = UDim2.new(0.87, 0, 0.35/2, 0);
                                BackgroundTransparency = 1;
                                Image = "rbxassetid://4894670678";
                                ImageColor3 = Color3.fromRGB(25, 25, 25);
                                ImageTransparency = 0.35;
                                ScaleType = Enum.ScaleType.Slice;
                                SliceCenter = Rect.new(5, 5, 434, 297);
                                library:createElement("ImageLabel", {
                                    Name = "selectedColor";
                                    Size = UDim2.new(1, -2, 1, -2);
                                    Position = UDim2.new(0, 1, 0, 1);
                                    Image = "rbxassetid://4894670678";
                                    ImageColor3 = Color3.fromRGB(0, G, 0);
                                    ScaleType = Enum.ScaleType.Slice;
                                    SliceCenter = Rect.new(5, 5, 434, 297);
                                    BackgroundTransparency = 1;
                                    ClipsDescendants = true;
                                })
                            })
                        })
                    });
                    library:createElement("ImageLabel", {
                        Name = "blueBorder";
                        Size = UDim2.new(1, -10, 0, 25);
                        Position = UDim2.new(0, 5, 0, 85);
                        BackgroundTransparency = 1;
                        Image = "rbxassetid://4894670678";
                        ImageColor3 = Color3.fromRGB(25, 25, 25);
                        ImageTransparency = 0.35;
                        ScaleType = Enum.ScaleType.Slice;
                        SliceCenter = Rect.new(5, 5, 434, 297);
                        library:createElement("ImageLabel", {
                            Name = "frame";
                            Size = UDim2.new(1, -2, 1, -2);
                            Position = UDim2.new(0, 1, 0, 1);
                            BackgroundTransparency = 1;
                            Image = "rbxassetid://4894670678";
                            ImageColor3 = Color3.fromRGB(40, 40, 40);
                            ScaleType = Enum.ScaleType.Slice;
                            SliceCenter = Rect.new(5, 5, 434, 297);
                            ClipsDescendants = true;
                            library:createElement("TextLabel", {
                                Name = "blueLabel";
                                Size = UDim2.new(0.1, 0, 0.1, 0);
                                Position = UDim2.new(0.015, 0, 0.5, -1);
                                Text = "B";
                                TextColor3 = Color3.fromRGB(250, 250, 250);
                                TextSize = 10;
                                TextWrapped = true;
                                Font = Enum.Font.GothamSemibold;
                                BackgroundTransparency = 1;
                            });
                            library:createElement("ImageLabel", {
                                Name = "gradientSelectorBorder";
                                Size = UDim2.new(0.65, 0, 0.65, 0);
                                Position = UDim2.new(0.25/2, 0, 0.35/2, 0);
                                Image = "rbxassetid://4894670678";
                                ImageColor3 = Color3.fromRGB(25, 25, 25);
                                ScaleType = Enum.ScaleType.Slice;
                                SliceCenter = Rect.new(5, 5, 434, 297);
                                BackgroundTransparency = 1;
                                library:createElement("ImageLabel", {
                                    Name = "gradientSelector";
                                    Size = UDim2.new(1, -2, 1, -2);
                                    Position = UDim2.new(0, 1, 0, 1);
                                    Image = "rbxassetid://4894670678";
                                    ImageColor3 = Color3.fromRGB(255, 255, 255);
                                    ScaleType = Enum.ScaleType.Slice;
                                    SliceCenter = Rect.new(5, 5, 434, 297);
                                    BackgroundTransparency = 1;
                                    ClipsDescendants = true;
                                    library:createElement("UIGradient", {
                                        Name = "gradient";
                                        Color = ColorSequence.new(Color3.fromRGB(0, 0, 0), Color3.fromRGB(0, 0, 255));
                                    });
                                    library:createElement("Frame", {
                                        Name = "slider";
                                        Size = UDim2.new(0, 2, 1, 0);
                                        BorderSizePixel = 0;
                                        BackgroundColor3 = Color3.fromRGB(255, 255, 255);
                                        Position = UDim2.new(math.clamp(B / 255, 0, 0.98), 0, 0, 0);
                                    })
                                });
                            });
                            library:createElement("ImageLabel", {
                                Name = "selectedColorBorder";
                                Size = UDim2.new(0.09, 0, 0.65, 0);
                                Position = UDim2.new(0.87, 0, 0.35/2, 0);
                                BackgroundTransparency = 1;
                                Image = "rbxassetid://4894670678";
                                ImageColor3 = Color3.fromRGB(25, 25, 25);
                                ImageTransparency = 0.35;
                                ScaleType = Enum.ScaleType.Slice;
                                SliceCenter = Rect.new(5, 5, 434, 297);
                                library:createElement("ImageLabel", {
                                    Name = "selectedColor";
                                    Size = UDim2.new(1, -2, 1, -2);
                                    Position = UDim2.new(0, 1, 0, 1);
                                    Image = "rbxassetid://4894670678";
                                    ImageColor3 = Color3.fromRGB(0, 0, B);
                                    ScaleType = Enum.ScaleType.Slice;
                                    SliceCenter = Rect.new(5, 5, 434, 297);
                                    BackgroundTransparency = 1;
                                    ClipsDescendants = true;
                                })
                            })
                        })
                    });
                    library:createElement("ImageLabel", {
                        Name = "finalBorder";
                        Size = UDim2.new(1, -10, 0, 25);
                        Position = UDim2.new(0, 5, 0, 115);
                        BackgroundTransparency = 1;
                        Image = "rbxassetid://4894670678";
                        ImageColor3 = Color3.fromRGB(25, 25, 25);
                        ImageTransparency = 0.35;
                        ScaleType = Enum.ScaleType.Slice;
                        SliceCenter = Rect.new(5, 5, 434, 297);
                        library:createElement("ImageLabel", {
                            Name = "frame";
                            Size = UDim2.new(1, -2, 1, -2);
                            Position = UDim2.new(0, 1, 0, 1);
                            BackgroundTransparency = 1;
                            Image = "rbxassetid://4894670678";
                            ImageColor3 = Color3.fromRGB(40, 40, 40);
                            ScaleType = Enum.ScaleType.Slice;
                            SliceCenter = Rect.new(5, 5, 434, 297);
                            ClipsDescendants = true;
                            library:createElement("TextLabel", {
                                Name = "redLabel";
                                Size = UDim2.new(0.1, 0, 0.1, 0);
                                Position = UDim2.new(0.015, 0, 0.5, -1);
                                Text = "R";
                                TextColor3 = Color3.fromRGB(250, 250, 250);
                                TextSize = 10;
                                TextWrapped = true;
                                Font = Enum.Font.GothamSemibold;
                                BackgroundTransparency = 1;
                            });
                            library:createElement("ImageLabel", {
                                Name = "redButtonBorder";
                                Size = UDim2.new(0, 30, 0, 15);
                                Position = UDim2.new(0, 20, 0, 4);
                                Image = "rbxassetid://4894670678";
                                ImageColor3 = Color3.fromRGB(25, 25, 25);
                                ImageTransparency = 0.5;
                                ScaleType = Enum.ScaleType.Slice;
                                SliceCenter = Rect.new(5, 5, 434, 297);
                                BackgroundTransparency = 1;
                                library:createElement("ImageLabel", {
                                    Name = "redButtonFrame";
                                    Size = UDim2.new(1, -2, 1, -2);
                                    Position = UDim2.new(0, 1, 0, 1);
                                    Image = "rbxassetid://4894670678";
                                    ImageColor3 = Color3.fromRGB(70, 70, 70);
                                    ScaleType = Enum.ScaleType.Slice;
                                    SliceCenter = Rect.new(5, 5, 434, 297);
                                    BackgroundTransparency = 1;
                                    ClipsDescendants = true;
                                    library:createElement("TextBox", {
                                        Name = "redLabel";
                                        Size = UDim2.new(1, 0, 1, 0);
                                        Position = UDim2.new(0, 0, 0, 0);
                                        Text = R;
                                        TextColor3 = Color3.fromRGB(250, 250, 250);
                                        TextSize = 12;
                                        TextWrapped = true;
                                        Font = Enum.Font.GothamSemibold;
                                        BackgroundTransparency = 1;
                                    })
                                })
                            });
                            library:createElement("TextLabel", {
                                Name = "greenLabel";
                                Size = UDim2.new(0.1, 0, 0.1, 0);
                                Position = UDim2.new(0.27, 0, 0.5, -1);
                                Text = "G";
                                TextColor3 = Color3.fromRGB(250, 250, 250);
                                TextSize = 10;
                                TextWrapped = true;
                                Font = Enum.Font.GothamSemibold;
                                BackgroundTransparency = 1;
                            });
                            library:createElement("ImageLabel", {
                                Name = "greenButtonBorder";
                                Size = UDim2.new(0, 30, 0, 15);
                                Position = UDim2.new(0, 68, 0, 4);
                                Image = "rbxassetid://4894670678";
                                ImageColor3 = Color3.fromRGB(25, 25, 25);
                                ImageTransparency = 0.5;
                                ScaleType = Enum.ScaleType.Slice;
                                SliceCenter = Rect.new(5, 5, 434, 297);
                                BackgroundTransparency = 1;
                                library:createElement("ImageLabel", {
                                    Name = "greenButtonFrame";
                                    Size = UDim2.new(1, -2, 1, -2);
                                    Position = UDim2.new(0, 1, 0, 1);
                                    Image = "rbxassetid://4894670678";
                                    ImageColor3 = Color3.fromRGB(70, 70, 70);
                                    ScaleType = Enum.ScaleType.Slice;
                                    SliceCenter = Rect.new(5, 5, 434, 297);
                                    BackgroundTransparency = 1;
                                    ClipsDescendants = true;
                                    library:createElement("TextBox", {
                                        Name = "greenLabel";
                                        Size = UDim2.new(1, 0, 1, 0);
                                        Position = UDim2.new(0, 0, 0, 0);
                                        Text = G;
                                        TextColor3 = Color3.fromRGB(250, 250, 250);
                                        TextSize = 12;
                                        TextWrapped = true;
                                        Font = Enum.Font.GothamSemibold;
                                        BackgroundTransparency = 1;
                                    })
                                })
                            });
                            library:createElement("TextLabel", {
                                Name = "blueLabel";
                                Size = UDim2.new(0.1, 0, 0.1, 0);
                                Position = UDim2.new(0.53, 0, 0.5, -1);
                                Text = "B";
                                TextColor3 = Color3.fromRGB(250, 250, 250);
                                TextSize = 10;
                                TextWrapped = true;
                                Font = Enum.Font.GothamSemibold;
                                BackgroundTransparency = 1;
                            });
                            library:createElement("ImageLabel", {
                                Name = "blueButtonBorder";
                                Size = UDim2.new(0, 30, 0, 15);
                                Position = UDim2.new(0, 116, 0, 4);
                                Image = "rbxassetid://4894670678";
                                ImageColor3 = Color3.fromRGB(25, 25, 25);
                                ImageTransparency = 0.5;
                                ScaleType = Enum.ScaleType.Slice;
                                SliceCenter = Rect.new(5, 5, 434, 297);
                                BackgroundTransparency = 1;
                                library:createElement("ImageLabel", {
                                    Name = "blueButtonFrame";
                                    Size = UDim2.new(1, -2, 1, -2);
                                    Position = UDim2.new(0, 1, 0, 1);
                                    Image = "rbxassetid://4894670678";
                                    ImageColor3 = Color3.fromRGB(70, 70, 70);
                                    ScaleType = Enum.ScaleType.Slice;
                                    SliceCenter = Rect.new(5, 5, 434, 297);
                                    BackgroundTransparency = 1;
                                    ClipsDescendants = true;
                                    library:createElement("TextBox", {
                                        Name = "blueLabel";
                                        Size = UDim2.new(1, 0, 1, 0);
                                        Position = UDim2.new(0, 0, 0, 0);
                                        Text = B;
                                        TextColor3 = Color3.fromRGB(250, 250, 250);
                                        TextSize = 12;
                                        TextWrapped = true;
                                        Font = Enum.Font.GothamSemibold;
                                        BackgroundTransparency = 1;
                                    })
                                })
                            });
                            library:createElement("ImageLabel", {
                                Name = "selectedColorBorder";
                                Size = UDim2.new(0.09, 0, 0.65, 0);
                                Position = UDim2.new(0.87, 0, 0.35/2, 0);
                                BackgroundTransparency = 1;
                                Image = "rbxassetid://4894670678";
                                ImageColor3 = Color3.fromRGB(25, 25, 25);
                                ImageTransparency = 0.35;
                                ScaleType = Enum.ScaleType.Slice;
                                SliceCenter = Rect.new(5, 5, 434, 297);
                                library:createElement("ImageLabel", {
                                    Name = "selectedColor";
                                    Size = UDim2.new(1, -2, 1, -2);
                                    Position = UDim2.new(0, 1, 0, 1);
                                    Image = "rbxassetid://4894670678";
                                    ImageColor3 = Color3.fromRGB(R, G, B);
                                    ScaleType = Enum.ScaleType.Slice;
                                    SliceCenter = Rect.new(5, 5, 434, 297);
                                    BackgroundTransparency = 1;
                                    ClipsDescendants = true;
                                })
                            })
                        })
                    });
                })
            });
            Parent = self.container;
        })

        local selectors = {
            red = {
                slider = newColorSelector.border.frame.redBorder.frame.gradientSelectorBorder.gradientSelector.slider;
                selectedColor = newColorSelector.border.frame.redBorder.frame.selectedColorBorder.selectedColor;
            };
            green = {
                slider = newColorSelector.border.frame.greenBorder.frame.gradientSelectorBorder.gradientSelector.slider;
                selectedColor = newColorSelector.border.frame.greenBorder.frame.selectedColorBorder.selectedColor;
            };
            blue = {
                slider = newColorSelector.border.frame.blueBorder.frame.gradientSelectorBorder.gradientSelector.slider;
                selectedColor = newColorSelector.border.frame.blueBorder.frame.selectedColorBorder.selectedColor;
            };
        }

        local textBoxes = {
            finalColor = newColorSelector.border.frame.finalBorder.frame.selectedColorBorder.selectedColor;
            red = {
                textBox = newColorSelector.border.frame.finalBorder.frame.redButtonBorder.redButtonFrame.redLabel;
            };
            green = {
                textBox = newColorSelector.border.frame.finalBorder.frame.greenButtonBorder.greenButtonFrame.greenLabel;
            };
            blue = {
                textBox = newColorSelector.border.frame.finalBorder.frame.blueButtonBorder.blueButtonFrame.blueLabel;
            };
        }
        
        local function updateColors(color, num)
            if color == "red" then
                R = num
                selectors[color].selectedColor.ImageColor3 = Color3.fromRGB(R, 0, 0)
            elseif color == "green" then
                G = num
                selectors[color].selectedColor.ImageColor3 = Color3.fromRGB(0, G, 0)
            elseif color == "blue" then
                B = num
                selectors[color].selectedColor.ImageColor3 = Color3.fromRGB(0, 0, B)
            else
                return
            end

            textBoxes[color].textBox.Text = num

            textBoxes.finalColor.ImageColor3 = Color3.fromRGB(R, G, B)

            selectors[color].slider:TweenPosition(UDim2.new(math.clamp(num / 255, 0, 0.98), 0, 0, 0), "Out", "Quad", 0.15, true)

            location[flag] = Color3.fromRGB(R, G, B)
            callback(location[flag])
        end

        for i,v in pairs(selectors) do
            local renderStepped, inputBegan, inputEnded

            local connected = false

            local slider = v.slider
            local container = slider.Parent
            local selectedColor = v.selectedColor

            container.MouseEnter:Connect(function()
                local function update()
                    if renderStepped then renderStepped:Disconnect() end

                    renderStepped = runService.RenderStepped:Connect(function()
                        local mouse = userInputService:GetMouseLocation()
                        local percent = (mouse.X - container.AbsolutePosition.X) / (container.AbsoluteSize.X)

                        percent = math.clamp(percent, 0, 1)
                        percent = tonumber(string.format("%.2f", percent))

                        local num = math.floor(percent * 255)

                        updateColors(i, num)
                    end)
                end

                local function disconnect()
                    if renderStepped then renderStepped:Disconnect() end
                    if inputBegan then inputBegan:Disconnect() end
                    if inputEnded then inputEnded:Disconnect() end
                    if mouseDown then mouseDown:Disconnect() end
                    if mouseUp then mouseUp:Disconnect() end
                end

                inputBegan = container.InputBegan:Connect(function(input)
                    if input.UserInputType ~= Enum.UserInputType.MouseButton1 then return end
                    connected = true
                    update()
                end)

                inputEnded = container.InputEnded:Connect(function(input)
                    if input.UserInputType ~= Enum.UserInputType.MouseButton1 then return end
                    if not connected then return end
                    disconnect()
                    connected = false
                end)
            end)
        end

        for i,v in pairs(textBoxes) do
            if type(v) == "table" then

                local slider = selectors[i].slider

                local first = true

                v.textBox:GetPropertyChangedSignal("Text"):Connect(function()
                    v.textBox.Text = v.textBox.Text:gsub("%D+", "")
                end)

                v.textBox.FocusLost:Connect(function(enterPressed)
                    if not enterPressed then 
                        if i == "red" then
                            v.textBox.Text = R
                        elseif i == "green" then
                            v.textBox.Text = G
                        elseif i == "blue" then
                            v.textBox.Text = B
                        end

                        return 
                    end

                    v.textBox.Text = math.clamp(tonumber(v.textBox.Text), 0, 255)

                    updateColors(i, tonumber(v.textBox.Text))
                end)

            end
        end
    end

    function tabs:button(name, callback)
        local callback = callback or function() end

        local newButton = library:createElement("Frame", {
            Name = name;
            Size = UDim2.new(0, 200, 0, 35);
            BackgroundTransparency = 1;
            LayoutOrder = self:getOrder();
            library:createElement("ImageLabel", {
                Name = "border";
                Size = UDim2.new(1, 0, 0, 26);
                Position = UDim2.new(0, 0, 0, 5);
                BackgroundTransparency = 1;
                Image = "rbxassetid://4894670678";
                ImageColor3 = Color3.fromRGB(200, 58, 75);
                ImageTransparency = 0.35;
                ScaleType = Enum.ScaleType.Slice;
                SliceCenter = Rect.new(5, 5, 434, 297);
                library:createElement("ImageButton", {
                    Name = "frame";
                    Size = UDim2.new(1, -2, 1, -2);
                    Position = UDim2.new(0, 1, 0, 1);
                    BackgroundTransparency = 1;
                    Image = "rbxassetid://4894670678";
                    ImageColor3 = Color3.fromRGB(50, 50, 50);
                    ScaleType = Enum.ScaleType.Slice;
                    SliceCenter = Rect.new(5, 5, 434, 297);
                    ClipsDescendants = true;
                    library:createElement("TextLabel", {
                        Name = "title";
                        Size = UDim2.new(1, 0, 1, 0);
                        Position = UDim2.new(0, 0, 0, 0);
                        Text = name;
                        TextColor3 = Color3.fromRGB(250, 250, 250);
                        TextSize = 12;
                        TextWrapped = true;
                        Font = Enum.Font.GothamSemibold;
                        BackgroundTransparency = 1;
                    });
                    library:createElement("ImageLabel", {
                        Name = "mouseIcon";
                        Size = UDim2.new(0, 14, 0, 18);
                        Position = UDim2.new(0, 5, 0, 3);
                        BackgroundTransparency = 1;
                        Image = "rbxassetid://5880691637";
                        ScaleType = Enum.ScaleType.Slice;
                        SliceCenter = Rect.new(6, 6, 14, 14);
                        BackgroundTransparency = 1;
                    })
                })
            });
            Parent = self.container;
        })

        newButton.border.frame.InputBegan:Connect(function(input)
            if input.UserInputType ~= Enum.UserInputType.MouseButton1 then return end
            callback()
        end)
    end

    function tabs:toggle(name, options, useBind, bindOptions, callback)
        local location = options.location or self.flags
        local flag = options.flag or ""
        local default = options.default or false
        local callback = callback or function() end

        location[flag] = default

        local newToggle = library:createElement("Frame", {
            Name = name;
            Size = UDim2.new(0, 200, 0, 35);
            BackgroundTransparency = 1;
            LayoutOrder = self:getOrder();
            library:createElement("ImageLabel", {
                Name = "border";
                Size = UDim2.new(1, 0, 0, 26);
                Position = UDim2.new(0, 0, 0, 5);
                BackgroundTransparency = 1;
                Image = "rbxassetid://4894670678";
                ImageColor3 = Color3.fromRGB(25, 25, 25);
                ImageTransparency = 0.5;
                ScaleType = Enum.ScaleType.Slice;
                SliceCenter = Rect.new(5, 5, 434, 297);
                library:createElement("ImageLabel", {
                    Name = "frame";
                    Size = UDim2.new(1, -2, 1, -2);
                    Position = UDim2.new(0, 1, 0, 1);
                    BackgroundTransparency = 1;
                    Image = "rbxassetid://4894670678";
                    ImageColor3 = Color3.fromRGB(50, 50, 50);
                    ScaleType = Enum.ScaleType.Slice;
                    SliceCenter = Rect.new(5, 5, 434, 297);
                    ClipsDescendants = true;
                    library:createElement("TextLabel", {
                        Name = "title";
                        Size = UDim2.new(1, -10, 1, 0);
                        Position = UDim2.new(0, 10, 0, 0);
                        Text = name;
                        TextColor3 = Color3.fromRGB(250, 250, 250);
                        TextSize = 12;
                        TextWrapped = true;
                        Font = Enum.Font.GothamSemibold;
                        TextXAlignment = Enum.TextXAlignment.Left;
                        BackgroundTransparency = 1;
                    });
                    library:createElement("ImageButton", {
                        Name = "button";
                        Size = UDim2.new(0, 18, 0, 18);
                        Position = UDim2.new(1, -26, 0, 3);
                        BackgroundTransparency = 1;
                        Image = "rbxassetid://4892761119";
                        ScaleType = Enum.ScaleType.Slice;
                        SliceCenter = Rect.new(6, 6, 14, 14);
                        BackgroundTransparency = 1;
                        library:createElement("ImageLabel", {
                            Name = "toggle";
                            Size = (location[flag] and UDim2.new(1, 0, 1, 0)) or UDim2.new(0, 0, 0, 0);
                            Position = (location[flag] and UDim2.new(0, 0, 0, 0)) or UDim2.new(0.5, 0, 0.5, 0);
                            Image = "rbxassetid://5880482965";
                            BackgroundTransparency = 1;
                        })
                    })
                })
            });
            Parent = self.container;
        })

        local button = newToggle.border.frame.button

        local click = function()
            location[flag] = not location[flag]
            callback(location[flag])
            button.toggle:TweenSizeAndPosition((location[flag] and UDim2.new(1, 0, 1, 0)) or UDim2.new(0, 0, 0, 0), (location[flag] and UDim2.new(0, 0, 0, 0)) or UDim2.new(0.5, 0, 0.5, 0), (location[flag] and 'Out') or 'In', (location[flag] and 'Elastic') or 'Quad', (location[flag] and 0.75) or 0.15, true)
        end

        if useBind then
            local shortNames = {
                LeftControl = "LeftCtrl";
                LeftShift = "LShift";
                RightShift = "RShift";
                MouseButton1 = "Mouse1";
                MouseButton2 = "Mouse2";
            }

            local banned = {
                Return = true;
                Space = true;
                Tab = true;
                Unknown = true;
                RightControl = true;
            }

            local allowed = {
                MouseButton1 = true;
                MouseButton2 = true;
            }

            local bindLocation = bindOptions.location or self.flags
            local bindFlag = bindOptions.flag or ""
            local kbOnly = bindOptions.kbonly or false
            local bindDefault = bindOptions.default or nil

            local passed = true
            if kbOnly and tostring(bindDefault):find("MouseButton") then
                passed = false
            end
            
            if passed then
                bindLocation[bindFlag] = bindDefault
            end

            local name = (bindDefault and (shortNames[bindDefault.Name] or bindDefault.Name)) or "None"

            local bind = library:createElement("ImageLabel", {
                Name = "bindBorder";
                Size = ((bindDefault and shortNames[bindDefault.Name] or name == "None") and UDim2.new(0, 50, 0, 15)) or UDim2.new(0, 30, 0, 15);
                Position = ((bindDefault and shortNames[bindDefault.Name] or name == "None") and UDim2.new(0, 115, 0, 4)) or UDim2.new(0, 135, 0, 4);
                Image = "rbxassetid://4894670678";
                ImageColor3 = Color3.fromRGB(25, 25, 25);
                ImageTransparency = 0.5;
                ScaleType = Enum.ScaleType.Slice;
                SliceCenter = Rect.new(5, 5, 434, 297);
                BackgroundTransparency = 1;
                library:createElement("ImageLabel", {
                    Name = "bindFrame";
                    Size = UDim2.new(1, -2, 1, -2);
                    Position = UDim2.new(0, 1, 0, 1);
                    Image = "rbxassetid://4894670678";
                    ImageColor3 = Color3.fromRGB(70, 70, 70);
                    ScaleType = Enum.ScaleType.Slice;
                    SliceCenter = Rect.new(5, 5, 434, 297);
                    BackgroundTransparency = 1;
                    ClipsDescendants = true;
                    library:createElement("TextButton", {
                        Name = "bindLabel";
                        Size = UDim2.new(1, 0, 1, 0);
                        Position = UDim2.new(0, 0, 0, 0);
                        Text = name;
                        TextColor3 = Color3.fromRGB(250, 250, 250);
                        TextSize = 12;
                        TextWrapped = true;
                        Font = Enum.Font.GothamSemibold;
                        BackgroundTransparency = 1;
                    })
                });
                Parent = newToggle.border.frame;
            })

            bind.bindFrame.bindLabel.MouseButton1Click:Connect(function()
                library.binding = true

                bind.bindFrame.bindLabel.Text = "..."

                local input, b = userInputService.InputBegan:Wait()

                if (input.UserInputType ~= Enum.UserInputType.Keyboard and allowed[input.UserInputType.Name] and not kbOnly) or (input.KeyCode and not banned[input.KeyCode.Name]) then
                    local name = (input.UserInputType ~= Enum.UserInputType.Keyboard and input.UserInputType.Name) or ((input.KeyCode == Enum.KeyCode.Delete or input.KeyCode == Enum.KeyCode.Escape) and "None") or input.KeyCode.Name
                    
                    if name == "None" then
                        bindLocation[bindFlag] = nil
                    else
                        bindLocation[bindFlag] = input
                    end

                    if shortNames[name] then
                        bind:TweenSizeAndPosition(UDim2.new(0, 50, 0, 15), UDim2.new(0, 115, 0, 4), "Out", "Quad", 0.15, true)
                        bind.bindFrame.bindLabel.Text = shortNames[name]
                    else
                        bind:TweenSizeAndPosition((string.len(name) > 3 and UDim2.new(0, 50, 0, 15)) or UDim2.new(0, 30, 0, 15), (string.len(name) > 3 and UDim2.new(0, 115, 0, 4)) or UDim2.new(0, 135, 0, 4), 'Out', 'Quad', 0.15, true)
                        bind.bindFrame.bindLabel.Text = name
                    end
                else
                    if bindLocation[bindFlag] then
                        local name

                        if (not pcall(function()
                            return bindLocation[bindFlag].UserInputType
                        end)) then
                            name = tostring(bindLocation[bindFlag])
                        else
                            name = (bindLocation[bindFlag].UserInputType ~= Enum.UserInputType.Keyboard and bindLocation[bindFlag].UserInputType.Name) or bindLocation[bindFlag].KeyCode.Name
                        end

                        if shortNames[name] then
                            bind:TweenSizeAndPosition(UDim2.new(0, 50, 0, 15), UDim2.new(0, 115, 0, 4), 'Out', 'Quad', 0.15, true);
                            bind.bindFrame.bindLabel.Text = shortNames[name]
                        else
                            bind:TweenSizeAndPosition((string.len(name) > 3 and UDim2.new(0, 50, 0, 15)) or UDim2.new(0, 30, 0, 15), (string.len(name) > 3 and UDim2.new(0, 115, 0, 4)) or UDim2.new(0, 135, 0, 4), 'Out', 'Quad', 0.15, true)
                            bind.bindFrame.bindLabel.Text = name
                        end
                    end
                end

                wait(0.1)
                library.binding = false
            end)

            library.binds[bindFlag] = {
                location = bindLocation;
                call = click;
            }
        end

        button.InputBegan:Connect(function(input)
            if input.UserInputType ~= Enum.UserInputType.MouseButton1 then return end
            click()
        end)
    end

    function tabs:slider(name, options, sliderCallback, useToggle, toggleOptions)
        local sLocation = options.location or self.flags
        local sFlag = options.flag or ""
        local min = options.min or 0
        local max = options.max or 1
        local sDefault = (options.default ~= nil and math.floor(math.clamp(options.default, min, max))) or min
        local sCallback = sliderCallback or function() end

        sLocation[sFlag] = sDefault

        local newSlider = library:createElement("Frame", {
            Name = name;
            Size = UDim2.new(0, 200, 0, 55);
            BackgroundTransparency = 1;
            LayoutOrder = self:getOrder();
            library:createElement("ImageLabel", {
                Name = "border";
                Size = UDim2.new(1, 0, 0, 45);
                Position = UDim2.new(0, 0, 0, 5);
                Image = "rbxassetid://4894670678";
                ImageColor3 = Color3.fromRGB(25, 25, 25);
                ImageTransparency = 0.5;
                ScaleType = Enum.ScaleType.Slice;
                SliceCenter = Rect.new(5, 5, 434, 297);
                BackgroundTransparency = 1;
                ClipsDescendants = true;
                library:createElement("ImageLabel", {
                    Name = "frame";
                    Size = UDim2.new(1, -2, 1, -2);
                    Position = UDim2.new(0, 1, 0, 1);
                    Image = "rbxassetid://4894670678";
                    ImageColor3 = Color3.fromRGB(50, 50, 50);
                    ScaleType = Enum.ScaleType.Slice;
                    SliceCenter = Rect.new(5, 5, 434, 297);
                    BackgroundTransparency = 1;
                    library:createElement("TextLabel", {
                        Name = "title";
                        Size = UDim2.new(1, -8, 0.5, 0);
                        Position = UDim2.new(0, 8, 0, 0);
                        Text = name;
                        TextColor3 = Color3.fromRGB(250, 250, 250);
                        TextSize = 12;
                        TextWrapped = true;
                        Font = Enum.Font.GothamSemibold;
                        TextXAlignment = Enum.TextXAlignment.Left;
                        BackgroundTransparency = 1;
                    });
                    library:createElement("ImageLabel", {
                        Name = "valueButtonBorder";
                        Size = UDim2.new(0, 35, 0, 15);
                        Position = UDim2.new(0, 155, 0, 4);
                        Image = "rbxassetid://4894670678";
                        ImageColor3 = Color3.fromRGB(25, 25, 25);
                        ImageTransparency = 0.5;
                        ScaleType = Enum.ScaleType.Slice;
                        SliceCenter = Rect.new(5, 5, 434, 297);
                        BackgroundTransparency = 1;
                        library:createElement("ImageLabel", {
                            Name = "valueButtonFrame";
                            Size = UDim2.new(1, -2, 1, -2);
                            Position = UDim2.new(0, 1, 0, 1);
                            Image = "rbxassetid://4894670678";
                            ImageColor3 = Color3.fromRGB(70, 70, 70);
                            ScaleType = Enum.ScaleType.Slice;
                            SliceCenter = Rect.new(5, 5, 434, 297);
                            BackgroundTransparency = 1;
                            ClipsDescendants = true;
                            library:createElement("TextBox", {
                                Name = "valueLabel";
                                Size = UDim2.new(1, 0, 1, 0);
                                Position = UDim2.new(0, 0, 0, 0);
                                Text = tostring(sDefault);
                                TextColor3 = Color3.fromRGB(250, 250, 250);
                                TextSize = 12;
                                TextWrapped = true;
                                Font = Enum.Font.GothamSemibold;
                                BackgroundTransparency = 1;
                            })
                        })
                    });
                    library:createElement("Frame", {
                        Name = "container";
                        BorderSizePixel = 0;
                        Size = UDim2.new(0, (useToggle and 150) or 175, 0, 8);
                        Position = UDim2.new(0, (useToggle and 35) or 10, 0, 27);
                        BackgroundTransparency = 1;
                        library:createElement("Frame", {
                            Name = "sliderBar";
                            Size = UDim2.new(1, 0, 0, 2);
                            Position = UDim2.new(0, 0, 0, 3);
                            BorderSizePixel = 0;
                            library:createElement("Frame", {
                                Name = "moveBar";
                                Size = UDim2.new(((sDefault - min) / (max - min)), 0, 1, 0);
                                Position = UDim2.new(0, 0, 0, 0);
                                BorderSizePixel = 0;
                                BackgroundColor3 = Color3.fromRGB(200, 58, 75);
                                BackgroundTransparency = 0;
                            });
                            library:createElement("ImageLabel", {
                                Name = "circleBorder";
                                Size = UDim2.new(0, 10, 0, 10);
                                Position = UDim2.new(((sDefault - min) / (max - min)), 0, 0, -4);
                                BackgroundTransparency = 1;
                                Image = "rbxassetid://4896743658";
                                ImageColor3 = Color3.fromRGB(100, 100, 100);
                                ImageTransparency = 0.3;
                                library:createElement("ImageLabel", {
                                    Name = "circleFrame";
                                    Size = UDim2.new(1, -2, 1, -2);
                                    Position = UDim2.new(0, 1, 0, 1);
                                    BackgroundTransparency = 1;
                                    Image = "rbxassetid://4896743658";
                                    ImageColor3 = Color3.fromRGB(255, 255, 255);
                                    ScaleType = Enum.ScaleType.Slice;
                                    SliceCenter = Rect.new(5, 5, 5, 5);
                                })
                            })
                        })
                    })
                })
            });
            Parent = self.container;
        })

        if useToggle then
            local tLocation = toggleOptions.location or self.flags
            local tFlag = toggleOptions.flag or ""
            local tDefault = toggleOptions.default or false
            local tCallback = toggleOptions.callback or function() end

            tLocation[tFlag] = tDefault

            local sliderToggle = library:createElement("ImageButton", {
                Name = "button";
                Size = UDim2.new(0, 18, 0, 18);
                Position = UDim2.new(0, 8, 0, 21);
                Image = "rbxassetid://4892761119";
                ScaleType = Enum.ScaleType.Slice;
                SliceCenter = Rect.new(6, 6, 14, 14);
                BackgroundTransparency = 1;
                library:createElement("ImageLabel", {
                    Name = "toggle";
                    Size = (tLocation[tFlag] and UDim2.new(1, 0, 1, 0)) or UDim2.new(0, 0, 0, 0);
                    Position = (tLocation[tFlag] and UDim2.new(0, 0, 0, 0)) or UDim2.new(0.5, 0, 0.5, 0);
                    Image = "rbxassetid://5880482965";
                    BackgroundTransparency = 1;
                });
                Parent = newSlider.border.frame;
            })

            sliderToggle.InputBegan:Connect(function(input)
                if input.UserInputType ~= Enum.UserInputType.MouseButton1 then return end

                tLocation[tFlag] = not tLocation[tFlag]
                tCallback(tLocation[tFlag])
                sliderToggle.toggle:TweenSizeAndPosition((tLocation[tFlag] and UDim2.new(1, 0, 1, 0)) or UDim2.new(0, 0, 0, 0), (tLocation[tFlag] and UDim2.new(0, 0, 0, 0)) or UDim2.new(0.5, 0, 0.5, 0), (tLocation[tFlag] and 'Out') or 'In', (tLocation[tFlag] and 'Elastic') or 'Quad', (tLocation[tFlag] and 0.75) or 0.15, true)
            end)
        end

        local renderStepped, inputBegan, inputEnded, mouseDown, mouseUp
        local connected = false
        local first = true

        local container = newSlider.border.frame.container
        local textBox = newSlider.border.frame.valueButtonBorder.valueButtonFrame.valueLabel

        container.MouseEnter:Connect(function()
            local function update()
                if renderStepped then renderStepped:Disconnect() end

                renderStepped = runService.RenderStepped:Connect(function()
                    local mouse = userInputService:GetMouseLocation()
                    local percent = (mouse.X - container.AbsolutePosition.X) / (container.AbsoluteSize.X)

                    percent = math.clamp(percent, 0, 1)
                    percent = tonumber(string.format("%.2f", percent))

                    if first then
                        container.sliderBar.circleBorder.Position = UDim2.new(((sDefault - min) / (max - min)), -4, 0, -4)
                        container.sliderBar.moveBar.Size = UDim2.new(((sDefault - min) / (max - min)), -4, 0, 2)
                        first = false
                    end

                    container.sliderBar.circleBorder:TweenPosition(UDim2.new(math.clamp(percent, 0, 1), -4, 0, -4), 'Out', 'Quad', 0.15, true)
                    container.sliderBar.moveBar:TweenSize(UDim2.new(math.clamp(percent, 0, 1), -4, 0, 2), 'Out', 'Quad', 0.15, true)

                    local num = min + (max - min) * percent
                    local value = math.floor(num)

                    textBox.Parent.Parent:TweenSizeAndPosition((string.len(tostring(value)) > 3 and UDim2.new(0, 45, 0, 15)) or UDim2.new(0, 30, 0, 15), (string.len(tostring(value)) > 3 and UDim2.new(0, 140, 0, 4)) or UDim2.new(0, 155, 0, 4), 'Out', 'Quad', 0.15, true)

                    textBox.Text = value
                    sLocation[sFlag] = tonumber(value)
                    sCallback(sLocation[sFlag])
                end)
            end

            local function disconnect()
                if renderStepped then renderStepped:Disconnect() end
                if inputBegan then inputBegan:Disconnect() end
                if inputEnded then inputEnded:Disconnect() end
                if mouseDown then mouseDown:Disconnect() end
                if mouseUp then mouseUp:Disconnect() end
            end

            inputBegan = container.InputBegan:Connect(function(input)
                if input.UserInputType ~= Enum.UserInputType.MouseButton1 then return end
                update()
            end)

            inputEnded = container.InputEnded:Connect(function(input)
                if input.UserInputType ~= Enum.UserInputType.MouseButton1 then return end
                disconnect()
            end)

            mouseDown = container.sliderBar.circleBorder.InputBegan:Connect(function(input)
                if input.UserInputType ~= Enum.UserInputType.MouseButton1 then return end
                connected = true
                update()
            end)

            mouseUp = container.sliderBar.circleBorder.InputEnded:Connect(function(input)
                if input.UserInputType ~= Enum.UserInputType.MouseButton1 then return end
                if not connected then return end
                disconnect()
                connected = false
            end)
        end)

        textBox:GetPropertyChangedSignal("Text"):Connect(function()
            textBox.Text = textBox.Text:gsub("[^%-%d]", "")
            textBox.Parent.Parent:TweenSizeAndPosition((string.len(textBox.Text) > 3 and UDim2.new(0, 45, 0, 15)) or UDim2.new(0, 30, 0, 15), (string.len(textBox.Text) > 3 and UDim2.new(0, 140, 0, 4)) or UDim2.new(0, 155, 0, 4), 'Out', 'Quad', 0.15, true)
        end)

        textBox.FocusLost:Connect(function(enterPressed)
            if not enterPressed then return end

            textBox.Text = math.floor(math.clamp(tonumber(textBox.Text), min, max))
            textBox.Parent.Parent:TweenSizeAndPosition((string.len(textBox.Text) > 3 and UDim2.new(0, 45, 0, 15)) or UDim2.new(0, 30, 0, 15), (string.len(textBox.Text) > 3 and UDim2.new(0, 140, 0, 4)) or UDim2.new(0, 155, 0, 4), 'Out', 'Quad', 0.15, true)
            sLocation[sFlag] = tonumber(textBox.Text)
            sCallback(sLocation[sFlag])

            container.sliderBar.circleBorder:TweenPosition(UDim2.new(((math.floor(math.clamp(tonumber(textBox.Text), min, max)) - min) / (max - min)), -4, 0, -4), 'Out', 'Quad', 0.15, true)
            container.sliderBar.moveBar:TweenSize(UDim2.new(((math.floor(math.clamp(tonumber(textBox.Text), min, max)) - min) / (max - min)), -4, 0, 2), 'Out', 'Quad', 0.15, true)
        end)
    end

    function tabs:dropdown(name, useToggles, options, callback)
        local location = options.location or self.flags
        local flag = not useToggles and options.flag or ""
        local callback = callback or function() end
        local list = options.list or {}
        local default = options.default or list[1].Name

        if not useToggles then
            location[flag] = default
        end

        local newDropdown = library:createElement("Frame", {
            Name = name;
            Size = UDim2.new(0, 200, 0, 35);
            BackgroundTransparency = 1;
            LayoutOrder = self:getOrder();
            library:createElement("ImageLabel", {
                Name = "border";
                Size = UDim2.new(1, 0, 0, 26);
                Position = UDim2.new(0, 0, 0, 5);
                BackgroundTransparency = 1;
                Image = "rbxassetid://4894670678";
                ImageColor3 = Color3.fromRGB(25, 25, 25);
                ImageTransparency = 0.5;
                ScaleType = Enum.ScaleType.Slice;
                SliceCenter = Rect.new(5, 5, 434, 297);
                ZIndex = 2;
                library:createElement("ImageButton", {
                    Name = "frame";
                    Size = UDim2.new(1, -2, 1, -2);
                    Position = UDim2.new(0, 1, 0, 1);
                    BackgroundTransparency = 1;
                    Image = "rbxassetid://4894670678";
                    ImageColor3 = Color3.fromRGB(50, 50, 50);
                    ScaleType = Enum.ScaleType.Slice;
                    SliceCenter = Rect.new(5, 5, 434, 297);
                    ZIndex = 2;
                    library:createElement("TextLabel", {
                        Name = "label";
                        Size = UDim2.new(1, -10, 0, 25);
                        Position = UDim2.new(0, 10, 0, 0);
                        Text = default;
                        TextColor3 = Color3.fromRGB(250, 250, 250);
                        TextSize = 12;
                        TextWrapped = true;
                        Font = Enum.Font.GothamSemibold;
                        TextXAlignment = Enum.TextXAlignment.Left;
                        BackgroundTransparency = 1;
                        ZIndex = 2;
                    })
                })
            });
            Parent = self.container;
        })

        local arrow = library:createElement("ImageLabel", {
            Name = "arrow";
            Size = UDim2.new(0, 11, 0, 6);
            Position = UDim2.new(1, -25, 0, 10);
            BackgroundTransparency = 1;
            Image = "rbxassetid://5882688826";
            ImageColor3 = Color3.fromRGB(30, 30, 30);
            ZIndex = 2;
            Parent = newDropdown.border;
        })

        local container = library:createElement("Frame", {
            Name = "containerFrame";
            Size = UDim2.new(1, 0, 0, 0);
            BackgroundTransparency = 1;
            LayoutOrder = self:getOrder();
            ZIndex = 1;
            ClipsDescendants = true;
            library:createElement("ImageLabel", {
                Name = "containerBorder";
                Size = UDim2.new(0.9, 0, 1, 0);
                Position = UDim2.new(0.05, 0, 0, 0);
                BackgroundTransparency = 1;
                Image = "rbxassetid://4894670678";
                ImageColor3 = Color3.fromRGB(25, 25, 25);
                ImageTransparency = 0.3;
                ScaleType = Enum.ScaleType.Slice;
                SliceCenter = Rect.new(5, 5, 434, 297);
                ClipsDescendants = true;
                ZIndex = 1;
                library:createElement("ImageLabel", {
                    Name = "container";
                    Size = UDim2.new(1, -2, 1, -2);
                    Position = UDim2.new(0, 1, 0, 1);
                    BackgroundTransparency = 1;
                    Image = "rbxassetid://4894670678";
                    ImageColor3 = Color3.fromRGB(60, 60, 60);
                    ScaleType = Enum.ScaleType.Slice;
                    SliceCenter = Rect.new(5, 5, 434, 297);
                    ClipsDescendants = true;
                    ZIndex = 1;
                    library:createElement("ScrollingFrame", {
                        Name = "scroll";
                        Size = UDim2.new(1, 0, 1, 0);
                        Position = UDim2.new(0, 0, 0, 0);
                        CanvasSize = UDim2.new(0, 0, 0, (useToggles and #list * 27) or #list * 22);
                        ScrollingEnabled = #list > 5;
                        ScrollBarThickness = (#list > 5 and 2) or 0;
                        ScrollBarImageTransparency = (#list > 5 and 0) or 1;
                        ScrollingDirection = Enum.ScrollingDirection.Y;
                        ElasticBehavior = Enum.ElasticBehavior.Never;
                        BackgroundTransparency = 1;
                        library:createElement("UIListLayout", {
                            Name = "list";
                            SortOrder = 2;
                        })
                    })
                })
            });
            Parent = self.container;
        })

        local button = newDropdown.border.frame

        local dropDown = {
            toggled = false;
            object = newDropdown;
            arrow = arrow;
            container = container.containerBorder.container.scroll;
            l = location;
            f = flag;
            usesToggles = useToggles;
        }
        table.insert(dropList, dropDown)

        for i,v in pairs(list) do
            local listItem = library:createElement("TextButton", {
                Name = v.Name;
                Size = UDim2.new(1, 0, 0, useToggles and 27 or 22);
                BackgroundTransparency = 1;
                Text = v.Name;
                TextColor3 = Color3.fromRGB(250, 250, 250);
                TextSize = 12;
                TextWrapped = true;
                Font = Enum.Font.GothamSemibold;
                LayoutOrder = i;
                ZIndex = 1;
                Parent = dropDown.container;
            })

            local toggle
            if useToggles then
                toggle = library:createElement("ImageButton", {
                    Name = "button";
                    Size = UDim2.new(0, 16, 0, 16);
                    Position = UDim2.new(0, 150, 0, 4);
                    Image = "rbxassetid://4892761119";
                    ScaleType = Enum.ScaleType.Slice;
                    SliceCenter = Rect.new(6, 6, 14, 14);
                    BackgroundTransparency = 1;
                    library:createElement("ImageLabel", {
                        Name = "toggle";
                        Size = (location[v.flag] and UDim2.new(1, 0, 1, 0)) or UDim2.new(0, 0, 0, 0);
                        Position = (location[v.flag] and UDim2.new(0, 0, 0, 0)) or UDim2.new(0.5, 0, 0.5, 0);
                        Image = "rbxassetid://5880482965";
                        BackgroundTransparency = 1;
                    });
                    Parent = listItem;
                })
            end

            if i ~= #list then
                local underline = library:createElement("Frame", {
                    Name = "underline";
                    Size = UDim2.new(0.8, 0, 0, 2);
                    Position = UDim2.new(0.1, 0, 1, -2);
                    BackgroundColor3 = Color3.fromRGB(100, 100, 100);
                    BorderSizePixel = 0;
                    BackgroundTransparency = 0.3;
                    ZIndex = 1;
                    Parent = listItem;
                })
            end

            local function switch()
                if useToggles then
                    location[v.flag] = not location[v.flag]
                    callback(location[v.flag])
                    toggle.toggle:TweenSizeAndPosition((location[v.flag] and UDim2.new(1, 0, 1, 0)) or UDim2.new(0, 0, 0, 0), (location[v.flag] and UDim2.new(0, 0, 0, 0)) or UDim2.new(0.5, 0, 0.5, 0), (location[v.flag] and 'Out') or 'In', (location[v.flag] and 'Elastic') or 'Quad', (location[v.flag] and 0.75) or 0.15, true)
                else
                    dropDown.toggled = false

                    button.label.TextTransparency = 0
                    button.label.Text = listItem.Text

                    self.parentObject:TweenSize(UDim2.new(0, self.parentObject.AbsoluteSize.X, 0, originalTabY), "In", "Quad", 0.15, true)
                    self.container:TweenSize(UDim2.new(0, self.container.AbsoluteSize.X, 0, originalTabContainerY), "In", "Quad", 0.15, true)

                    newDropdown.border.arrow.Rotation = 0
                    container:TweenSize(UDim2.new(1, 0, 0, 0), "In", "Quad", 0.15, true)
                    
                    location[flag] = tostring(listItem.Text)
                    callback(location[flag])
                end
            end

            listItem.InputBegan:Connect(function(input)
                if input.UserInputType ~= Enum.UserInputType.MouseButton1 then return end
                switch()
            end)

            if useToggles then
            
                toggle.InputBegan:Connect(function(input)
                    if input.UserInputType ~= Enum.UserInputType.MouseButton1 then return end
                    switch()
                end)

            end
        end

        button.InputBegan:Connect(function(input)
            if input.UserInputType ~= Enum.UserInputType.MouseButton1 then return end

            dropDown.toggled = not dropDown.toggled

            if not useToggles then
                newDropdown.border.frame.label.TextTransparency = (dropDown.toggled and 0.5) or 0
                newDropdown.border.frame.label.Text = (dropDown.toggled and name) or location[flag]
            end

            local y = 0
            if #list > 5 then
                if useToggles then y = 5 * 27 else y = 5 * 22 end
            else
                for i,v in pairs(dropDown.container:GetChildren()) do
                    if not v:IsA("UIListLayout") then
                        y = y + v.AbsoluteSize.Y
                    end
                end
            end

            for i,v in pairs(dropList) do
                if v ~= dropDown and v.toggled then 
                    v.toggled = false
                    
                    v.arrow.Rotation = 0;
                    v.container.Parent.Parent.Parent:TweenSize(UDim2.new(1, 0, 0, 0), "In", "Quad", 0.15, true)
                    wait(0.15)

                    if not useToggles then
                        v.object.border.frame.label.TextTransparency = 0
                        v.object.border.frame.label.Text = v.l[v.f]
                    end
                end
            end

            if dynamicTabContainerBottomYPos + y > dynamicContainerBottomYPos - 7 or not dropDown.toggled then
                self.parentObject:TweenSize(UDim2.new(0, self.parentObject.AbsoluteSize.X, 0, (dropDown.toggled and originalTabY + ((dynamicTabContainerBottomYPos + y) - dynamicContainerBottomYPos + 7)) or originalTabY), (dropDown.toggled and "Out") or "In", "Quad", 0.15, true)
            end

            self.container:TweenSize(UDim2.new(0, self.container.AbsoluteSize.X, 0, (dropDown.toggled and originalTabContainerY + y) or originalTabContainerY), (dropDown.toggled and 'Out') or 'In', 'Quad', 0.15, true)
            newDropdown.border.arrow.Rotation = (dropDown.toggled and 180) or 0
            container:TweenSize(UDim2.new(1, 0, 0, (dropDown.toggled and y) or 0), (dropDown.toggled and "Out") or "In", "Quad", 0.15, true)
        end)

        userInputService.InputBegan:Connect(function(input)
            if input.UserInputType ~= Enum.UserInputType.MouseButton1 then return end
            if not dropDown.toggled or (isInGui(newDropdown.border) or isInGui(container.containerBorder)) then return end

            dropDown.toggled = false

            if not useToggles then
                newDropdown.border.frame.label.TextTransparency = 0
                newDropdown.border.frame.label.Text = location[flag]
            end

            container:TweenSize(UDim2.new(1, 0, 0, 0), "In", "Quad", 0.15, true)
            self.parentObject:TweenSize(UDim2.new(0, self.parentObject.AbsoluteSize.X, 0, originalTabY), "In", "Quad", 0.15, true)
            self.container:TweenSize(UDim2.new(0, self.container.AbsoluteSize.X, 0, originalTabContainerY), "In", "Quad", 0.15, true)

            newDropdown.border.arrow.Rotation = 0
        end)
    end

    function library:createElement(class, data)
        local obj = Instance.new(class)
        
        for i,v in pairs(data) do
            if i ~= "Parent" then
            
                if typeof(v) == "Instance" then
                    v.Parent = obj
                else
                    obj[i] = v
                end
            end
        end
        
        obj.Parent = data.Parent
        return obj
    end
    
    function library:createWindow(name)
        if not library.container then
            library.container = self:createElement("ScreenGui", {
                self:createElement("Frame", {
                    Name = "Container";
                    Size = UDim2.new(1, -30, 1, 0);
                    Position = UDim2.new(0, 20, 0, 20);
                    BackgroundTransparency = 1;
                    Active = false;
                });
            }):FindFirstChild("Container")
        end

        if syn and syn.protect_gui then
            syn.protect_gui(library.container.Parent)
        end

        library.container.Parent.Parent = game:GetService("CoreGui");

        if not library.options then
            library.options = setmetatable({}, {__index = defaults})
        end

        if getgenv then
            getgenv().hattUI = library.container
        end

        local window = main:window(name)
        return window
    end

    function library:notify(title, text, timeout)
        local timeout = timeout or 5

        local notification = library:createElement("ImageLabel", {
            Name = "border";
            Size = UDim2.new(0, 200, 0, 75);
            Position = UDim2.new(1.1, 0, 0.87, 0);
            BackgroundTransparency = 1;
            Image = "rbxassetid://4894670678";
            ImageColor3 = Color3.fromRGB(200, 58, 75);
            ImageTransparency = 0.35;
            ScaleType = Enum.ScaleType.Slice;
            SliceCenter = Rect.new(5, 5, 434, 297);
            library:createElement("ImageLabel", {
                Name = "frame";
                Size = UDim2.new(1, -2, 1, -2);
                Position = UDim2.new(0, 1, 0, 1);
                BackgroundTransparency = 1;
                Image = "rbxassetid://4894670678";
                ImageColor3 = Color3.fromRGB(40, 40, 40);
                ScaleType = Enum.ScaleType.Slice;
                SliceCenter = Rect.new(5, 5, 434, 297);
                ClipsDescendants = true;
                library:createElement("ImageLabel", {
                    Name = "topBorder";
                    Size = UDim2.new(1, 0, 0, 30);
                    Position = UDim2.new(0, 0, 0, 0);
                    Image = "rbxassetid://4892463081";
                    ImageColor3 = Color3.fromRGB(50, 50, 50);
                    ScaleType = Enum.ScaleType.Slice;
                    SliceCenter = Rect.new(5, 5, 434, 125);
                    BackgroundTransparency = 1;
                    library:createElement("TextLabel", {
                        Name = "title";
                        Size = UDim2.new(0, 200, 0, 30);
                        Position = UDim2.new(0, 15, 0, 0);
                        Text = title;
                        TextWrapped = true;
                        TextXAlignment = Enum.TextXAlignment.Left;
                        TextColor3 = Color3.fromRGB(250, 250, 250);
                        Font = Enum.Font.GothamSemibold;
                        TextSize = 14;
                        BackgroundTransparency = 1;
                    });
                    library:createElement("Frame", {
                        Name = "line";
                        Size = UDim2.new(1, 0, 0, 2);
                        Position = UDim2.new(0, 0, 1, -2);
                        BorderSizePixel = 0;
                        BackgroundColor3 = Color3.fromRGB(35, 35, 35);
                    })
                });
                library:createElement("TextLabel", {
                    Name = "text";
                    Size = UDim2.new(0, 180, 0, 40);
                    Position = UDim2.new(0, 10, 0, 30);
                    Text = text;
                    TextColor3 = Color3.fromRGB(250, 250, 250);
                    TextWrapped = true;
                    Font = Enum.Font.GothamSemibold;
                    TextSize = 12;
                    BackgroundTransparency = 1;
                })
            });
            Parent = library.container;
        })
        spawn(function()
            wait(0.2)

            notification:TweenPosition(UDim2.new(0.88, 0, 0.87, 0), "In", "Quad", 0.25, true)

            wait(timeout)

            notification:TweenPosition(UDim2.new(1.1, 0, 0.87, 0), "In", "Quad", 0.25, true)

            wait(0.25)

            notification:Destroy()
        end)
    end

    local function isReallyPressed(bind, input)
        if typeof(bind) == "Instance" then
            if bind.UserInputType == Enum.UserInputType.Keyboard and input.KeyCode == bind.KeyCode then
                return true
            elseif tostring(bind.UserInputType):find("MouseButton") and input.UserInputType == bind.UserInputType then
                return true
            end
        end

        if tostring(bind):find("MouseButton1") then
            return bind == input.UserInputType
        else
            return bind == input.KeyCode
        end
    end

    userInputService.InputBegan:Connect(function(input)
        if input.KeyCode == Enum.KeyCode.RightControl then
            library.toggled = not library.toggled
            --library.container:TweenPosition(UDim2.new(0, (library.toggled and 20) or (-30 - (library.container:GetChildren()[1].frame.AbsolutePosition.X + library.container:GetChildren()[1].frame.AbsoluteSize.X)), 0, library.container.AbsolutePosition.Y), "Out", "Quad", 0.15, true)
            library.container.Visible = not library.container.Visible
        end

        if library.binding then return end

        for i,v in pairs(library.binds) do
            if v.location[i] ~= nil then

                local realBinding = v.location[i]

                if realBinding and isReallyPressed(realBinding, input) then
                    v.call()
                end

            end
        end
    end)
end


local function startsettings()
    local env = {}
    local Name = "phoenix.game_settings"
    local JSON

    local function get(name, tbl)
        if not pcall(function() readfile(Name) end) then 
            local tb1 = {}
            tb1[name] = tbl
            writefile(Name, game:service'HttpService':JSONEncode(tb1)) 
            return tb1
        else
            local tab = game:service'HttpService':JSONDecode(readfile(Name))
            if not tab[name] then
                tab[name] = tbl
            end
            return tab[name]
        end 
    end

    function env:save(name,tbl)
        local tab = game:service'HttpService':JSONDecode(readfile(Name))
        tab[name] = tbl
        writefile(Name,game:service'HttpService':JSONEncode(tab))
    end

    function env:load(name, tbl)
        local savedtbl = get(name, tbl)
        if tbl == savedtbl then
            return tbl 
        else
            for i,v in pairs(tbl) do
                if savedtbl[i] == nil then
                    savedtbl[i] = v
                end
            end
            env:save(name, savedtbl)
            return savedtbl
        end
    end
    
    return env
end

local savedsettings = startsettings()




















local mainPageIds = {}
local TeleportService = game:GetService("TeleportService")
local pages = game:GetService("AssetService"):GetGamePlacesAsync()
local places = {}
while true do
	for _,place in pairs(pages:GetCurrentPage()) do
		places[place.Name] = place.PlaceId
	end
	if pages.IsFinished then
		break
	end
	pages:AdvanceToNextPageAsync()
end





for i,v in pairs(places) do 
    if v == 1730877806 then -- // GPO ID

        --// GPO

        local settings = savedsettings:load("GPO", {
            alwaysDay = false;
            NoDodgeStam = false;
            AntiAfk = true;
            distBelowNpc = 7;
            riskyTeleportForQuest = false;
            stayUnderGround = true;
            SelectedQuestType = "Defeat";
            SelectedQuestHolderName = "Ronny";
            KillAura = false;
            PlayerKillAura = false;
            HakiFarm = false;
            NoFallDamage = false;
            runspdMod = false;
            runSpeed = 30;
            shipSettings = {
                Enabled = false;
                Speed = 20;
                MaxSpeed = 65;
                Brake = 20;
                RotateSpeed = 10;
                Height = 23;
                AntiCollisionDamage = false; -- Remote Name 'Rough'
            };
        })
        local farmQuest = false
        local farmShip = false
        --getrenv()._G.RenderCache:GetChildren()

        --[[  Auto Open Chest if within 20 studs

        local function getclosestchest()
            local mob = nil
            local closer = math.huge
            local lplayer = game:GetService("Players").LocalPlayer
            local charr = lplayer.Character
            for i, v in pairs(game:GetService("Workspace"):WaitForChild('Env'):GetChildren()) do
                if v and (v.Name == "Part") and v:FindFirstChild("ClickDetector") and charr and charr:FindFirstChild("HumanoidRootPart") and v ~= nil then
                    local mag = (v.Position-charr:FindFirstChild("HumanoidRootPart").Position).magnitude
                    if mag < closer then
                        mob = v
                        closer = mag
                    end
                end
            end
            if closer < 20 then
                warn(closer)
                return mob
            else
                game.Players.LocalPlayer.Character.HumanoidRootPart.Position = mob.Position
            end
        end
        local chest = getclosestchest()
        if chest then
            fireclickdetector(chest.ClickDetector, 1)
        else
            warn("Chest too far / nil") 
        end

        ]]

        -- ///// Always Day

        for i,v in pairs(workspace.Islands:GetChildren()) do
            if settings.alwaysDay then
                v.Settings.Weather.Value = "Normal" 
                v.Settings.Weather.Changed:Connect(function()
                    if settings.alwaysDay then
                        v.Settings.Weather.Value = "Normal" 
                    end
                end)
            end
        end

        game.Lighting.Changed:Connect(function()
            if settings.alwaysDay then
                game.Lighting.ClockTime = 12
            end
        end)

        -- ///// Set Spawn

        local islandNames = {
            "Sandora",
            "Colosseum",
            "Island Of Zou",
            "Sphinx Island",
            "Arlong Park",
            "Restaurant Baratie",
            "Town of Beginnings",
            "Shell's Town"
        }

        local islandNamesReal = {}

        for i,model in pairs(getrenv()._G.RenderCache:GetChildren()) do 
            if model and model:FindFirstChild("Settings") and model:FindFirstChildOfClass("Part") then
                islandNamesReal[model.Name] = (model:FindFirstChild("SpawnPoint") or model:FindFirstChildOfClass("Part")).CFrame
            end
        end

        for i,model in pairs(workspace.Islands:GetChildren()) do 
            if model and model:FindFirstChild("Settings") and model:FindFirstChildOfClass("Part") then
                islandNamesReal[model.Name] = (model:FindFirstChild("SpawnPoint") or model:FindFirstChildOfClass("Part")).CFrame
            end
        end

        local function setSpawn(IslandName)
            local isl = getrenv()._G.RenderCache:FindFirstChild(IslandName)
            if isl then
            local sp = isl.SpawnPoint
            repeat wait()
                spawn(function()
                        pcall(function()
                            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = sp.CFrame
                        end)
                end)
                game:GetService("ReplicatedStorage").Events.SetSpawn:FireServer()
                if workspace.NPCs:FindFirstChild("Robo") then
                    if (isl.SpawnPoint.Position - workspace.NPCs:FindFirstChild("Robo").HumanoidRootPart.Position).magnitude < 700 then
                        sp = workspace.NPCs:FindFirstChild("Robo").HumanoidRootPart
                    end
                else
                    for i, asd in pairs(game.ReplicatedStorage.NPCCache:GetChildren()) do
                        if asd.Name == "Robo" then

                            if (isl.SpawnPoint.Position - asd.HumanoidRootPart.Position).magnitude < 700 then
                                sp = asd.HumanoidRootPart
                            end

                        end
                    end
                end
            until
                game.ReplicatedStorage["Stats"..game.Players.LocalPlayer.Name].Stats.SpawnPoint.Value == IslandName
            end
            
        end

        -- setSpawn("Island Of Zou")

        workspace.Env.DescendantAdded:Connect(function(ent)
            if ent.Parent.Name == "Folder" and ent.Name ~= "Folder" then
                warn(ent)
                library:notify("OMG BRO", "A FRUIT SPAWNED IEWDJAIUWJD, "..tostring(ent.Name), 50)
            end
        end)

        local mt = getrawmetatable(game)
        local namecall = mt.__namecall
        local setreadonly = setreadonly or make_writable


        setreadonly(mt, false)

        mt.__namecall = newcclosure(function(self, ...)
            local args = {...}
            local arguments = args
            local a = {}
            for i = 1, #arguments - 1 do
                a[i] = arguments[i]
            end
            local method = getnamecallmethod()

            if method == 'FireServer' or method == "InvokeServer" then
                if self.Name:find("alization") then
                    warn("blocked logs?")
                    return 
                elseif (self.Name == "takestam" or self.Name == "StamRequest") and settings.NoDodgeStam then
                    return 
                elseif self.Name == "Rough" and settings.shipSettings.AntiCollisionDamage then
                    return
                elseif self.Name == "swim" and settings.AntiDrown then
                    if args[1] == 'drown' then
                        return
                    end
                --[[elseif self.Name == "KnockedOut" then
                    warn'FIJAUDJW'
                    return]]
                end
            end
            
            return namecall(self, ...)    
        end)

        setreadonly(mt, true)





        local NPC_Quest_Islands = game.ReplicatedStorage.Modules.NPCInteractions.Talks
        local NPCs_Quests = _G.NPCs_Quests or nil

        if NPCs_Quests == nil then
            NPCs_Quests = {}
            for i, island in pairs(NPC_Quest_Islands:GetChildren()) do
                if island:IsA("Folder") then
                    for i2, NPCq in pairs(island:GetChildren()) do
                        for a,c in pairs(getreg()) do
                            if type(c) == 'table' then
                            for i,v in pairs(c) do
                                if tostring(v) == NPCq.Name and rawget(c, "QuestInfo") then
                                    NPCs_Quests[NPCq.Name] = c
                                    NPCs_Quests[NPCq.Name]["Module"] = NPCq
                                    end
                                end
                            end
                        end
                    end
                end
            end
            _G.NPCs_Quests = NPCs_Quests
        end

        local NPC_To_Kill = nil
        local function getclosest(isKillAura)
            local mob = {}
            if NPC_To_Kill ~= nil or isKillAura == true then
                local closer = math.huge
                local lplayer = game:GetService("Players").LocalPlayer
                local charr = lplayer.Character
                for i, v in pairs(game:GetService("Workspace"):WaitForChild('NPCs'):GetChildren()) do
                    if v and v:FindFirstChild("HumanoidRootPart") and charr and charr:FindFirstChild("HumanoidRootPart") then
                        local mag = (v.HumanoidRootPart.Position-charr:FindFirstChild("HumanoidRootPart").Position).magnitude
                        if mag < 40 or v.Name == NPC_To_Kill then
                            table.insert(mob, v)
                        end
                    end
                end
            end
            return mob
        end

        local function getclosestPlayer()
            local mob = {}
            local lplayer = game:GetService("Players").LocalPlayer
            local charr = lplayer.Character
            for i, v in pairs(game:GetService("Players"):GetPlayers()) do
                if v and v ~= lplayer and v.Character and v.Character:FindFirstChild("HumanoidRootPart") and charr and charr:FindFirstChild("HumanoidRootPart") then
                    local mag = (v.Character.HumanoidRootPart.Position-charr:FindFirstChild("HumanoidRootPart").Position).magnitude
                    if mag < 20 then
                        table.insert(mob, v.Character)
                    end
                end
            end
            
            return mob
        end

        local rageModeSpeedVal = 45
        local teleporting = false
        local tween
        function tweenMoveRage(model, target)
            spawn(function()
                print(target)
                if target and model then
                    local tweenservice = game:service'TweenService'

                    local Info = TweenInfo.new(
                        ((model:GetPrimaryPartCFrame().Position - target.Position).magnitude)/ rageModeSpeedVal, -- 80
                        Enum.EasingStyle.Quad,
                        Enum.EasingDirection.Out,
                        0,
                        false,
                        0 
                    )

                    tween = tweenservice:Create(model.PrimaryPart, Info, {CFrame = (target) * CFrame.new(0,0,0)})
                    tween:Play()
                end
            end)
        end


        local currentAttacking = nil
        spawn(function()
            while true do wait()
                pcall(function()
                    if game.Players.LocalPlayer.Character:FindFirstChild("attacking") then
                        game.Players.LocalPlayer.Character:FindFirstChild("attacking"):Destroy()
                    end
                    if game.Players.LocalPlayer.Character:FindFirstChild("Stun") then
                        game.Players.LocalPlayer.Character:FindFirstChild("Stun"):Destroy()
                    end
                end)
                if (farmQuest or farmShip) and game.Players.LocalPlayer.Character ~= nil then
                    local tabsss = getclosest()
                    if type(tabsss) == 'table' then
                        for ia, va in pairs(tabsss) do
                            local RootPart = va:FindFirstChild("HumanoidRootPart")
                            if RootPart ~= nil then
                                local mag = (RootPart.Position-game.Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart").Position).magnitude
                                if mag < 70 then
                                    if va.Name == NPC_To_Kill and (va == currentAttacking or (currentAttack ~= nil and currentAttacking:FindFirstChild("HumanoidRootPart") == nil) or currentAttacking == nil or currentAttacking.Parent == nil) then
                                        currentAttacking = va
                                        if not settings.stayUnderGround then
                                            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = RootPart.CFrame * CFrame.new(0,-settings.distBelowNpc,0) * CFrame.Angles(math.rad(90),0,0)
                                        else
                                            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(RootPart.CFrame.X, RootPart.Parent.Info.SpawnCFrame.Value.Y, RootPart.CFrame.Z) * CFrame.new(0,-settings.distBelowNpc,0) * CFrame.Angles(math.rad(90),0,0)
                                        end
                                    end
                                else
                                    if va.Name == NPC_To_Kill and (va == currentAttacking or (currentAttack ~= nil and currentAttacking:FindFirstChild("HumanoidRootPart") == nil) or currentAttacking == nil or currentAttacking.Parent == nil) then
                                        currentAttacking = va
                                        if not farmShip then
                                            tweenMoveRage(game.Players.LocalPlayer.Character, RootPart.CFrame * CFrame.new(0,0,0), true)
                                        else
                                            tweenMoveRage(game.Players.LocalPlayer.Character, CFrame.new(RootPart.CFrame.X, workspace.Effects.Water.Position.Y, RootPart.CFrame.Z) * CFrame.Angles(math.rad(90),0,0), true)
                                        end
                                    end
                                end
                            else
                                if ((NPC_To_Kill ~= nil and workspace.NPCs:FindFirstChild(NPC_To_Kill) and workspace.NPCs:FindFirstChild(NPC_To_Kill):FindFirstChildWhichIsA("Humanoid") and workspace.NPCs:FindFirstChild(NPC_To_Kill).Humanoid.Health <=0) or NPC_To_Kill == nil) and game.Players.LocalPlayer.Character ~= nil and
                                workspace.CurrentCamera.CameraSubject ~= game.Players.LocalPlayer.Character.Humanoid then
                                    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(game.Players.LocalPlayer.Character.HumanoidRootPart.Position) * CFrame.new(0, 50, 0)
                                end
                            end
                        end
                    end
                end
            end
        end)

        local VirtualUser = game:service'VirtualUser'
        game:service'Players'.LocalPlayer.Idled:connect(function()
            if settings.AntiAfk then
                VirtualUser:CaptureController()
                VirtualUser:ClickButton2(Vector2.new())
            end
        end)

        local Clip = true
        local function NoclipLoop()
            if Clip == false and game:GetService("Players").LocalPlayer.Character ~= nil then
                --[[for _, child in pairs(game:GetService("Players").LocalPlayer.Character:GetDescendants()) do
                    if child:IsA("BasePart") and child.CanCollide == true then
                        child.CanCollide = false
                    end
                end]]
                pcall(function()
                    game:GetService("Players").LocalPlayer.Character.Humanoid:ChangeState(11)
                end)
            end
        end
        Noclipping = game:GetService('RunService').Stepped:connect(NoclipLoop)


        local function doQuest()
            repeat wait() until game.Players.LocalPlayer.Character ~= nil
            if farmQuest then
                for i,v in pairs(NPCs_Quests) do
                    --[[print'-----------------------'
                    warn(i, "\n--Type: ", v.QuestInfo.Type, "\n--MobName: ", v.QuestInfo.MobName)
                    print'-----------------------']]
                
                    if i == settings.SelectedQuestHolderName then
                        local NPCModel =  workspace.NPCs:FindFirstChild(i)
                        if not workspace.NPCs:FindFirstChild(i) then
                            library:notify("Autofarm", "Could not find "..i.."!\nPlease go to the island this NPC is at!", 15)
                            
                            if not settings.riskyTeleportForQuest then
                                warn'risko no existo'
                                return
                            end
                        end
                        local pChar = game.Players.LocalPlayer.Character
                        if NPCModel ~= nil and NPCModel.Parent ~= game.ReplicatedStorage.NPCCache then
                            tweenMoveRage(game.Players.LocalPlayer.Character, NPCModel.PrimaryPart.CFrame * CFrame.new(0,-settings.distBelowNpc,0) * CFrame.Angles(math.rad(90),0,0), true)
                        else
                            if settings.riskyTeleportForQuest and game.ReplicatedStorage.NPCCache:FindFirstChild(i) then
                                library:notify("Autofarm", "found npc in cache, teleporting", 5)
                                NPCModel = game.ReplicatedStorage.NPCCache:FindFirstChild(i)
                                
                                for i,v in pairs(islandNamesReal) do
                                        
                                    local pos1 = NPCModel.HumanoidRootPart.Position
                                    local pos2 = v.p
                                    if (pos1 - pos2).magnitude < 500 then
                                        setSpawn(v.Name)
                                        repeat wait() until game.Players.LocalPlayer.Character ~= nil
                                        return doQuest()
                                    end
                                end
                            end
                        end
                        library:notify("Autofarm", "Grabbing quest", 15)
                        --game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = workspace.NPCs[i].PrimaryPart.CFrame
                        repeat 
                                game:GetService("ReplicatedStorage").Events.Quest:InvokeServer({"takequest", v.QuestName})
                                wait(0.5)
                        until
                                game.ReplicatedStorage["Stats"..game.Players.LocalPlayer.Name].Quest.CurrentQuest.Value ~= "None"
                        Clip = true -- true = clipping, false = noclipping
                        if workspace.NPCs:FindFirstChild(v.QuestInfo.MobName) then
                                Clip = false -- true = clipping, false = noclipping
                                library:notify("Autofarm", "Killing NPC", 15)
                                NPC_To_Kill = v.QuestInfo.MobName
                            else 
                                Clip = true -- true = clipping, false = noclipping
                                library:notify("Autofarm", "Waiting for NPC to spawn", 15)
                                repeat wait() until workspace.NPCs:FindFirstChild(v.QuestInfo.MobName)
                                if farmQuest then
                                    return doQuest()
                                end
                            end
                        repeat wait() until game.ReplicatedStorage["Stats"..game.Players.LocalPlayer.Name].Quest.CurrentQuest.Value == "None"
                        NPC_To_Kill = nil
                        if farmQuest then
                            return doQuest()
                        end
                    end
                end
            end
        end

        

        local last = 1
        game:GetService("RunService").RenderStepped:Connect(function()

            if settings.runspdMod then
                local UserInputService = game:GetService("UserInputService")
                pcall(function()
                    game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = settings.runSpeed
                end)
            end

            if settings.HakiFarm then
                if game:GetService("ReplicatedStorage")["Stats"..game.Players.LocalPlayer.Name].Stats:FindFirstChild("BusoMastery") then
                    local busoBar = game:GetService("ReplicatedStorage")["Stats"..game.Players.LocalPlayer.Name].BusoBar
                    if busoBar.Value == busoBar.MaxValue and busoBar.MaxValue > 100 then
                        game:GetService("ReplicatedStorage").Events.Haki:FireServer("Buso")
                    end
                end
            end

            if settings.NoFallDamage then
                if game.Players.LocalPlayer.Character ~= nil then
                    if game.Players.LocalPlayer.Character:FindFirstChild("FallDamage") then
                        game.Players.LocalPlayer.Character:FindFirstChild("FallDamage"):Destroy()
                    end
                end
            end

            local shp = workspace.Ships:FindFirstChild(game.Players.LocalPlayer.Name.."Ship")
            if shp and shp:FindFirstChild("shipHP") and shp:FindFirstChild("Info") and shp.Info.ready.Value == true then
                shp.shipHP.Value = shp.shipHP.MaxValue
            end 

            if farmShip then
                settings.WalkOnWater = true
                if not workspace.Ships:FindFirstChild(game.Players.LocalPlayer.Name.."Ship") then
                    if game.Players.LocalPlayer.Character then
                        spawn(function()
                            game:GetService("ReplicatedStorage").Events.ShipEvents.Spawn:InvokeServer()
                        end)
                    end
                end

                for i,v in pairs(workspace.NPCs:GetChildren()) do
                    if v.Name:find("Captain") then
                        if game.Players.LocalPlayer.Character then
                            if (v.HumanoidRootPart.Position - game.Players.LocalPlayer.Character.HumanoidRootPart.Position).magnitude < 1000 then
                                NPC_To_Kill = v.Name
                            end
                        end
                    end
                end

                if farmShip and tostring(NPC_To_Kill):find("Captain") then
                    Clip = false -- true = clipping, false = noclipping
                elseif farmShip then
                    Clip = true -- true = clipping, false = noclipping
                end
            end

            spawn(function()
                if farmQuest or farmShip or settings.KillAura then
                    if game.Players.LocalPlayer.Character ~= nil then
                        for ia, va in pairs(getclosest(settings.KillAura or farmShip)) do
                            local RootPart = va:FindFirstChild("HumanoidRootPart")
                            
                            if RootPart ~= nil and RootPart.Parent then
                                spawn(function()
                                    if last > 3 then 
                                        last = 1 
                                    end
                                    local tool = game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool")
                                    if not tool then
                                        local pack = game.Players.LocalPlayer.Backpack
                                        local firstWep = game:GetService("HttpService"):JSONDecode(game.ReplicatedStorage["Stats"..game.Players.LocalPlayer.Name].Inventory.BackpackOrder.Value)[1]
                                        if firstWep ~= nil then
                                            for i,v in pairs(pack:children'') do
                                                if v:IsA("Tool") and v:FindFirstChild("Main") and tool == nil and v.Name == firstWep then
                                                    game.Players.LocalPlayer.Character.Humanoid:EquipTool(v)
                                                    tool = v
                                                end
                                            end
                                        else
                                            for i,v in pairs(pack:children'') do
                                                if v:IsA("Tool") and v:FindFirstChild("Main") and tool == nil then
                                                    game.Players.LocalPlayer.Character.Humanoid:EquipTool(v)
                                                    tool = v
                                                end
                                            end
                                        end
                                    end
                                    if tool then
                                        local katanaTypes = require(game.ReplicatedStorage.Modules.SwordHandle.SwordInfo)
                                        if katanaTypes[tool.Name] then
                                            type_t = "Sword"
                                        elseif tool.Name == "Melee" or tool.Name == "BlackLeg" or tool.Name == "FishmanKarate" or tool.Name == "Rokushiki" or tool.Name == "Electro" then
                                            type_t = "Melee"
                                        else
                                            type_t = "Melee"
                                        end
                                        game.ReplicatedStorage.Events.CombatRegister:InvokeServer({"damage", RootPart, type_t, {last, "Ground", type_t}})
                                        last = last + 1
                                    end
                                end)
                            end

                        end
                    end
                end
            end)

            spawn(function()
                if settings.PlayerKillAura then
                    if game.Players.LocalPlayer.Character ~= nil then
                        for ia, va in pairs(getclosestPlayer()) do
                            local RootPart = va:FindFirstChild("HumanoidRootPart")
                            
                            if RootPart ~= nil and RootPart.Parent then
                                spawn(function()
                                    print(RootPart.Parent)
                                    if last > 3 then 
                                        last = 1 
                                    end
                                    local tool = game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool")
                                    if not tool then
                                        local pack = game.Players.LocalPlayer.Backpack
                                        local firstWep = game:GetService("HttpService"):JSONDecode(game.ReplicatedStorage["Stats"..game.Players.LocalPlayer.Name].Inventory.BackpackOrder.Value)[1]
                                        for i,v in pairs(pack:children'') do
                                            if v:IsA("Tool") and v:FindFirstChild("Main") and tool == nil and v.Name == firstWep then
                                                game.Players.LocalPlayer.Character.Humanoid:EquipTool(v)
                                                tool = v
                                            end
                                        end
                                    end
                                    if tool then
                                        local katanaTypes = require(game.ReplicatedStorage.Modules.SwordHandle.SwordInfo)
                                        if katanaTypes[tool.Name] then
                                            type_t = "Sword"
                                        elseif tool.Name == "Melee" or tool.Name == "BlackLeg" or tool.Name == "FishmanKarate" or tool.Name == "Rokushiki" or tool.Name == "Electro" then
                                            type_t = "Melee"
                                        else
                                            type_t = "Melee"
                                        end
                                        game.ReplicatedStorage.Events.CombatRegister:InvokeServer({"damage", RootPart, type_t, {last, "Ground", type_t}})
                                        last = last + 1
                                    end
                                end)
                            end
    
                        end
                    end
                end
            end)
         end)

        local main = library:createWindow("not hattori")
        local tab1 = main:newTab("Main")

        tab1:toggle("Autofarm Quest", {
            location = nil;
            flag = "farmQuest";
            default = farmQuest;
        }, false, {}, function(state) 
            farmQuest = state

            if state then
                Clip = false
                spawn(function()
                    doQuest()
                end)
            else
                Clip = true
            end

            savedsettings:save("GPO", settings)
        end)

        tab1:toggle("Autofarm Ship", {
            location = nil;
            flag = "farmShip";
            default = farmShip;
        }, false, {}, function(state) 
            farmShip = state

            savedsettings:save("GPO", settings)
        end)

        tab1:toggle("KillAura", {
            location = nil;
            flag = "KillAura";
            default = settings.KillAura;
        }, false, {}, function(state) 
            settings.KillAura = state

            savedsettings:save("GPO", settings)
        end)

        tab1:toggle("Player KillAura", {
            location = nil;
            flag = "PlayerKillAura";
            default = settings.PlayerKillAura;
        }, false, {}, function(state) 
            settings.PlayerKillAura = state
            
            savedsettings:save("GPO", settings)
        end)

        local defQuestNames = {}
        for i,v in pairs(NPCs_Quests) do
            if v.QuestInfo.Type == 'Defeat' then
                table.insert(defQuestNames, {Name = v.QuestDesc})
            end
        end

        tab1:dropdown("Selected Quest", false, {
            location = nil;
            flag = "SelectedQuest";
            list = defQuestNames;
            default = settings.SelectedQuest;
        }, function(v) 
            settings.SelectedQuest = (v) 

            for i2,v2 in pairs(NPCs_Quests) do
                if v2.QuestDesc == v then
                    settings.SelectedQuestHolderName = tostring(v2.NPC)
                end
            end

            savedsettings:save("GPO", settings)
        end)

        tab1:slider("Dist Below NPC", {
            location = nil;
            flag = "distBelowNpc";
            min = 1;
            max = 15;
            default = settings.distBelowNpc;
        }, function(v) settings.distBelowNpc = v savedsettings:save("GPO", settings) end, false, {})

        tab1:toggle("Stay Underground", {
            location = nil;
            flag = "stayUnderGround";
            default = settings.stayUnderGround;
        }, false, {}, function(state) 
            settings.stayUnderGround = state

            savedsettings:save("GPO", settings)
        end)

        tab1:toggle("Anti-AFK", {
            location = nil;
            flag = "AntiAfk";
            default = settings.AntiAfk;
        }, false, {}, function(state) 
            settings.AntiAfk = state

            savedsettings:save("GPO", settings)
        end)

        --[[tab1:textbox("Goto PS", {}, function(code)
            game:GetService("ReplicatedStorage").Events.reserved:InvokeServer(code)

            savedsettings:save("GPO", settings)
        end)]]

        tab2:toggle("Always day", {
            location = nil;
            flag = "alwaysDay";
            default = settings.alwaysDay;
        }, false, {}, function(state) 
            settings.alwaysDay = state

            for i,v in pairs(workspace.Islands:GetChildren()) do
                if settings.alwaysDay then
                    v.Settings.Weather.Value = "Normal" 
                end
            end

            savedsettings:save("GPO", settings)
        end)

        local tab3 = main:newTab("Character")

        tab3:slider("Run speed modifier", {
            location = nil;
            flag = "runSpeed";
            min = 16;
            max = 120;
            default = settings.runSpeed;
        }, function(state) settings.runSpeed = state end, true, {
            location = nil;
            flag = "runspdMod";
            default = settings.runspdMod;
            callback = function(state) settings.runspdMod = state end;
        })

        tab3:toggle("Haki farm", {
            location = nil;
            flag = "HakiFarm";
            default = settings.HakiFarm;
        }, false, {}, function(state) 
            settings.HakiFarm = state

            savedsettings:save("GPO", settings)
        end)

        tab3:toggle("Walk on water", {
            location = nil;
            flag = "WalkOnWater";
            default = settings.WalkOnWater;
        }, false, {}, function(state) 
            settings.WalkOnWater = state

            local stats = game.ReplicatedStorage["Stats"..game.Players.LocalPlayer.Name].Stats

            _G.ActualDF = _G.ActualDF or stats.DF.Value

            stats.DF.Value = (state and "Hie-Hie") or _G.ActualDF

            pcall(function()
                game.Players.LocalPlayer.Backpack.WaterLogia.Disabled = true
                game.Players.LocalPlayer.Backpack.WaterLogia.Disabled = false
            end)

            savedsettings:save("GPO", settings)
        end)

        tab3:toggle("Anti Drown", {
            location = nil;
            flag = "AntiDrown";
            default = settings.AntiDrown;
        }, false, {}, function(state) 
            settings.AntiDrown = state

            savedsettings:save("GPO", settings)
        end)

        tab3:toggle("No fall damage", {
            location = nil;
            flag = "NoFallDamage";
            default = settings.NoFallDamage;
        }, false, {}, function(state) 
            settings.NoFallDamage = state

            savedsettings:save("GPO", settings)
        end)

        tab3:toggle("Infinite (normal) Dodge", {
            location = nil;
            flag = "NoDodgeStam";
            default = settings.NoDodgeStam;
        }, false, {}, function(state) 
            settings.NoDodgeStam = state

            savedsettings:save("GPO", settings)
        end)

        tab3:dropdown("Island Teleport", false, {
            location = nil;
            flag = "SelectedQuest";
            list = {
                {Name = "Sandora"},
                {Name = "Colosseum"},
                {Name = "Island Of Zou"},
                {Name = "Sphinx Island"},
                {Name = "Arlong Park"},
                {Name = "Restaurant Baratie"},
                {Name = "Town of Beginnings"},
                {Name = "Shell's Town"}
            };
            default = "Island Teleport";
        }, function(v) 
            if v ~= "Island Teleport" then
                setSpawn(v)
            end
        end)

        tab3:button("Respawn", function() 
            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(20000000000,20000000000,20000000000) 
        end)



        local tab41 = main:newTab("Ships")
        
        tab41:button("Set Settings",  function() 
            for i,v in pairs(getreg()) do
                if type(v) == 'function' and islclosure(v) and not is_synapse_function(v) then
                    for a,c in pairs(getupvalues(v)) do
                        if type(c) == 'table' and rawget(c, "Accel") then
                            c.Accel = settings.shipSettings.Speed
                            local shp = workspace.Ships:FindFirstChild(game.Players.LocalPlayer.Name.."Ship")
                            if shp then
                                local shp = require(shp.Info.Settings)
                                if shp.Type == "Rowboat" and settings.shipSettings.MaxSpeed > 65 then
                                    settings.shipSettings.MaxSpeed = 65
                                    c.MaxSpeed =  65
                                elseif shp.Type == "Caravel" and settings.shipSettings.MaxSpeed > 85 then
                                    settings.shipSettings.MaxSpeed = 85
                                    c.MaxSpeed =  85
                                elseif shp.Type == "Brig" and settings.shipSettings.MaxSpeed > 105 then
                                    settings.shipSettings.MaxSpeed = 105
                                    c.MaxSpeed =  105
                                end
                            end
                            c.Brake = settings.shipSettings.Brake
                            c.RotateAngle = settings.shipSettings.RotateSpeed/100
                        end
                    end
                end
            end
        end)

        tab41:toggle("Anti Collision Damage", {
            location = nil;
            flag = "AntiCollisionDamage";
            default = settings.shipSettings.AntiCollisionDamage;
        }, false, {}, function(state) 
            settings.shipSettings.AntiCollisionDamage = state

            savedsettings:save("GPO", settings)
        end)

        tab41:slider("Ship Acceleration", {
            location = nil;
            flag = "Speed";
            min = 1;
            max = 30;
            default = settings.shipSettings.Speed;
        }, function(v) 
            settings.shipSettings.Speed = v 
            savedsettings:save("GPO", settings) 
        end, false, {})

        tab41:slider("Ship Height", {
            location = nil;
            flag = "Speed";
            min = -17;
            max = 17;
            default = settings.shipSettings.Height;
        }, function(v) 
            settings.shipSettings.Height = v 

            local shp = workspace.Ships:FindFirstChild(game.Players.LocalPlayer.Name.."Ship")
            if shp then
                if shp:FindFirstChild("m") and shp.m:FindFirstChild("BodyPosition") then
                    shp.m.BodyPosition.Position = Vector3.new(0, v or 23, 0)
                end
            end

            savedsettings:save("GPO", settings) 
        end, false, {})

        tab41:slider("Ship MaxSpeed", {
            location = nil;
            flag = "MaxSpeed";
            min = 1;
            max = 105;
            default = settings.shipSettings.MaxSpeed;
        }, function(v) 
            settings.shipSettings.MaxSpeed = v 
            savedsettings:save("GPO", settings) 
        end, false, {})

        tab41:slider("Ship Brake Speed", {
            location = nil;
            flag = "Brake";
            min = 1;
            max = 30;
            default = settings.shipSettings.Brake;
        }, function(v) 
            settings.shipSettings.Brake = v 
            savedsettings:save("GPO", settings) 
        end, false, {})

        tab41:slider("Ship RotateSpeed", {
            location = nil;
            flag = "RotateSpeed";
            min = 1;
            max = 10;
            default = settings.shipSettings.RotateSpeed;
        }, function(v) 
            settings.shipSettings.RotateSpeed = v 
            savedsettings:save("GPO", settings) 
        end, false, {})

        tab1.spFuncs:SimClck()










    elseif v == 4616652839 then -- // Shindo life ID
        --// SL2

        local settings = savedsettings:load("SL2", {
            resetAfterSpin = false;
            resetAfterSpinAmount = 79;
            autoaim_Projectiles = false;
            AntiAfk = true;
            StopWhenScroll = true;
            autoPrestige = false;
            canKillNPC = true;
            shouldNoClip = false;
            bossOnly = false;
            distUnderNPC = 0;
            killaura_Enabled = false;
            sniper_Enabled = false;
            autokill_Jins = false;
            PublicHopMethod2 = false;
            messageOnModJoin = false;
            kickOnModJoin = false;
            includeTesterAsMod = false;
            untilBossSpawns = false;
            untilRound = 21;
            killaura_Enabled2 = false;
            autofarm_Enabled = false;
            rejoinAfterAllQuests = false;
            killauraRange = 30000;
            waitTimeKillaura = 3;
            runSpeed = 30;
            runspdMod = false;
            autoReset = false; 
            ResetAfter = 21;
            untilRound = 19;
            Chakra = false;
            Level = false;
            Mode = false;
            Health = false;
            BoxOutline = false;
            Tracers = false;
            TextOutline = false;
            espFontSize = 12;
            Nametag = false;
            TeamCheck = false;
            UniversalEsp = {
                ["Team ESP Color"] = {255/255, 100/255, 100/255};
                ["Team ESP Color"] = {0, 245/255, 0};
                ["Visible ESP Color"] = {50/255,100/255,255/255};
            };
            kgsroll = {
                slot1 = false;
                slot2 = false;
                slot3 = false;
                slot4 = false;
            };
            kgspicked = {
                sharingan = false;
                boil = false;
                crystal = false;
                dust = false;
                explosion = false;
                sand = false;
                ice	= false;
                golddust = false;
                scorch = false;
                lava = false;
                ironsand = false;
                wood = false;
                mud	= false;
                storm = false;
                byakugan = false;
                ketsuryugan	= false;
                kaguya = false;
                namikaze = false;
                sarutobi = false;
                uzumaki	= false;
                shirogane = false;
                nara = false;
                hoshigaki = false;
                senjuwood = false;
                yukiice	= false;
                kamizuru = false;
                rinnegan = false;
                blacklightning = false;
                clay = false;
                itachisharingan	= false;
                obitosharingan	= false;
                inuzuka	= false;
                jashin	= false;
                paper = false;
                akimichi = false;
            };
            staffdetecs = {
                notif = false;
                skick = false;
                inctest = false;
            };
            SelectableVillages = {
                Leaf = 4601350214,
                Rock = 4601350809,
                Cloud = 4601350656,
                Mist = 4601350760,
                Sand = 4601350394,
                TrainingGrounds = 5431071837,
                ForestOfDeath = 5447073001,
                Rain = 5084678830,
                Akatsuki = 5431069982,
            };
            SelectableVillages2 = {
                Leaf = 4601350214,
                Rock = 4601350809,
                Cloud = 4601350656,
                Mist = 4601350760,
                Sand = 4601350394,
                TrainingGrounds = 5431071837,
                ForestOfDeath = 5447073001,
                Rain = 5084678830,
                Akatsuki = 5431069982,
            };
            spawnSets = {
                SelectedVillage = "Leaf",
                JinSpawn = false,
                WeaponSpawn = false,
                ModeSpawn = false,
                SubSpawn = false,
                cachedServers = {[game.JobId] = true},
            };
            autofarmCandy_Enabled = false;
            newServerAfterTimer = false;
            timerMaxForCandy = 10;
        })

        repeat wait() until game.Loaded
        repeat wait() until game.Players.LocalPlayer:FindFirstChild("startevent")
        local char = game.Players.LocalPlayer.Character


        local isReady2 = true

        local uniData = game:service'HttpService':JSONDecode(game:HttpGet("https://games.roblox.com/v1/games?universeIds=1511883870")).data[1]
        --table.foreach(uniData, warn)
        local lastUpdated = "2020-11-07T19:00:57.4354083Z"
        local currentUpdated = uniData.updated

        if lastUpdated == currentUpdated then
            isReady2 = true
        else
            game.StarterGui:SetCore("SendNotification", {
                Title = "!! WARNING !!"; 
                Text = "The game has updated, please be cautious or wait until Hattori updates!";
                Duration = 500; 
            })
        end

        repeat wait() until isReady2
        repeat wait() until game.Players.LocalPlayer.PlayerGui:FindFirstChild("Main")

        game:getService("RunService"):UnbindFromRenderStep("noclOppl")
        game:getService("RunService"):BindToRenderStep("noclOppl",0,function()
            pcall(function()
                local char = game.Players.LocalPlayer.Character or game.Players.LocalPlayer.CharacterAdded:Wait()
                if settings.shouldNoClip then
                    pcall(function()
                        local char = game.Players.LocalPlayer.Character or game.Players.LocalPlayer.CharacterAdded:Wait()
                        char.Humanoid:ChangeState(11)
                    end)
                elseif char.Humanoid:GetState() == 11 then
                    pcall(function()
                        local char = game.Players.LocalPlayer.Character or game.Players.LocalPlayer.CharacterAdded:Wait()
                        char.Humanoid:ChangeState(1)
                    end)
                end
            end)
        end)

        --[[
        if workspace:FindFirstChild("CCoff") then
            workspace:FindFirstChild("CCoff"):Destroy()
        end
        workspace.ChildAdded:Connect(function(p)
            if p.Name == "CCoff" then
                p:Destroy()
            end
        end)


        local old
        setreadonly(getrenv().table, false)
        old = hookfunction(getrenv().table.insert, function(tab, ...)
            if #tab == 1 and not checkcaller() then
                for i,v in pairs(tab) do
                    if typeof(v) == 'Vector3' or typeof(v) == 'CFrame' then
                        return
                    end
                end
            end
            
            return old(tab, ...)
        end)
        setreadonly(getrenv().table, true)

        ]]








        local function getMissionGiverData(npc)
            local toReturn = {
                Enabled = false;
            }
            local deafeatQuestImage = "http://www.roblox.com/asset/?id=5459241648";
            local companionQuestImage = "http://www.roblox.com/asset/?id=5459241799";

            if npc and npc:FindFirstChild("Head") and npc.Head.givemission.Enabled == true then
                local missionImage = npc.Head.givemission.color.Image
                if missionImage == deafeatQuestImage then
                    toReturn.Type = "defeat"
                end
                if missionImage == companionQuestImage then
                    toReturn.Type = "companion"
                end
                
            end

            return toReturn
        end

        local function cancelQuest()
            local chatbox = game.Players.LocalPlayer.PlayerGui.Chat.Frame.ChatBarParentFrame.Frame.BoxFrame.Frame.ChatBar 

            chatbox.Text = [[!cancel]]

            for i,v in pairs(getconnections(chatbox.FocusLost)) do
                v.Function(true)
            end
        end

        --[[local mt = getrawmetatable(game)
        local namecall = mt.__namecall
        local setreadonly = setreadonly or make_writable


        setreadonly(mt, false)

        mt.__namecall = newcclosure(function(self, ...)
            local args = {...}
            local arguments = args
            local a = {}
            for i = 1, #arguments - 1 do
                a[i] = arguments[i]
            end
            local method = getnamecallmethod()

            if method == 'FireServer' then
                for a,c in pairs(args) do
                    if tostring(c):find("!name a") then
                        return
                    end
                    if tostring(c):find("!name N/A") then
                        return
                    end
                    if tostring(c):find("!cancel") then
                        return
                    end
                end
            end
            
            return namecall(self, ...)    
        end)

        setreadonly(mt, true)]]

        local toKillNPCs = workspace:FindFirstChild("npc")
        local missiongivers = workspace:FindFirstChild("missiongivers")
        local autofarmDat = {
            GotQuest = nil;
            MissionGiver = nil;
            Objective = nil;
            KillingNPCs = false;
            QuestFinished = false;
        }

        local function resetQuestDat()
            autofarmDat = {
                GettingQuest = false;
                GotQuest = nil;
                MissionGiver = nil;
                Objective = nil;
                KillingNPCs = false;
                QuestFinished = false;
            }
        end

        if workspace:FindFirstChild("CCoff") then
            workspace:FindFirstChild("CCoff"):Destroy()
        end
        workspace.ChildAdded:Connect(function(p)
            if p.Name == "CCoff" then
                p:Destroy()
            end
        end)


        local old
        setreadonly(getrenv().table, false)
        old = hookfunction(getrenv().table.insert, function(tab, ...)
            if #tab == 1 and not checkcaller() then
                for i,v in pairs(tab) do
                    if typeof(v) == 'Vector3' or typeof(v) == 'CFrame' then
                        return
                    end
                end
            end
            
            return old(tab, ...)
        end)
        setreadonly(getrenv().table, true)

        function createPS(Place)
            game:GetService("Players").LocalPlayer.startevent:FireServer("createprivateserver", settings.SelectableVillages[Place])
        end

        local alreadyPsHopping = false
        function ps_Hop()
            if alreadyPsHopping == false then
                ownsGP = game.Players.LocalPlayer.gamepasses:FindFirstChild("privateservers")
                if ownsGP then
                    if settings.spawnSets.WeaponSpawn or settings.spawnSets.ModeSpawn or settings.spawnSets.JinSpawn or settings.spawnSets.SubSpawn then
                        codeWhenHopping = "_G.ServerHop = true".."\n"..codeWhenHopping
                    end
                    savedsettings:save("SL2", settings)
                    alreadyPsHopping = true
                    hasCalled = true
                    syn.queue_on_teleport(codeWhenHopping)
                    warn(codeWhenHopping)
                    createPS(settings.spawnSets.SelectedVillage)
                elseif _G.PubCodeHop then
                    local code = _G.PubCodeHopCode
                    if workspace:FindFirstChild("playerps") or game.PlaceId ~= settings.SelectableVillages2[Place] then

                        codeWhenHopping = "_G.PubCodeHop = true\n".."_G.PubCodeHopCode = "..tostring(_G.PubCodeHopCode).."\n"..codeWhenHopping
                        savedsettings:save("SL2", settings)
                        alreadyPsHopping = true
                        hasCalled = true
                        syn.queue_on_teleport(codeWhenHopping)
                        game.Players.LocalPlayer.startevent:FireServer("rpgteleport", settings.SelectableVillages2[Place]);
                    elseif not workspace:FindFirstChild("playerps") and game.PlaceId ~= settings.SelectableVillages2[Place] then

                        codeWhenHopping = "_G.PubCodeHop = true\n".."_G.PubCodeHopCode = "..tostring(_G.PubCodeHopCode).."\n"..codeWhenHopping
                        savedsettings:save("SL2", settings)
                        alreadyPsHopping = true
                        hasCalled = true
                        syn.queue_on_teleport(codeWhenHopping)
                        TPEvent:FireServer("teleporttoprivate", _G.PubCodeHopCode)
                    end
                else
                    game.StarterGui:SetCore("SendNotification", {
                        Title = "PS-Hopper"; 
                        Text = "Sorry, you must own the 'Private Servers' gamepass!";
                        Duration = 5; 
                    })
                end
            end
        end
        spawn(function()
            wait(2)
            repeat wait() until game.Players.LocalPlayer.PlayerGui:FindFirstChild("Main") ~= nil
            repeat wait() until game.Players.LocalPlayer.PlayerGui.Main:FindFirstChild("esttime") ~= nil
            repeat wait() until game.Players.LocalPlayer.PlayerGui:FindFirstChild("Main"):FindFirstChild("esttime").Text:find("EST")
            local kgs = game.Players.LocalPlayer.statz.main
            kgs.DescendantAdded:Connect(function(s)
                if s.Name:find("dontspin") then
                    repeat wait() if s then
                        s:Destroy()
                    end
                until
                    s == nil
                end
            end)
            foundJin = false
            foundMode = false
            foundWep = false
            foundSub = false

            if settings.spawnSets.JinSpawn then
                repeat wait() until workspace:findFirstChild("npc")
                for i,v in pairs(workspace.GLOBALTIME:children'') do
                    if v:FindFirstChild("sh") and v:FindFirstChild("boss") then
                        foundJin = true
                    end
                end
            end
            if settings.spawnSets.ModeSpawn then
                repeat wait() until workspace:findFirstChild("GLOBALTIME")
                for i,v in pairs(workspace.GLOBALTIME:children'') do
                    if v:FindFirstChild("sh") then
                        if game.ReplicatedStorage.alljutsu.modes:FindFirstChild(v.Name) then
                            foundMode = true
                        end
                    end
                end
            end
            if settings.spawnSets.WeaponSpawn then
                repeat wait() until workspace:findFirstChild("GLOBALTIME")
                for i,v in pairs(workspace.GLOBALTIME:children'') do
                    if v:FindFirstChild("sh") then
                        if game.ReplicatedStorage.blades:FindFirstChild(v.Name) then
                            foundWep = true
                        end
                    end
                end
            end
            if settings.spawnSets.SubSpawn then
                repeat wait() until workspace:findFirstChild("GLOBALTIME")
                for i,v in pairs(workspace.GLOBALTIME:children'') do
                    if v:FindFirstChild("sh") then
                        if game.ReplicatedStorage.alljutsu.Acharacterpowers:FindFirstChild(v.Name) or game.ReplicatedStorage.alljutsu.taijutsu:FindFirstChild(v.Name) then
                            foundSub = true
                        end
                    end
                end
            end
            spawn(function()
                if not _G.ServerHop then
                    repeat wait() until _G.ServerHop
                end
                if settings.spawnSets.WeaponSpawn or settings.spawnSets.ModeSpawn or settings.spawnSets.JinSpawn or settings.spawnSets.SubSpawn then
                    --if (settings.StopWhenScroll == true and foundWep == false and foundMode == false and foundJin == false and foundSub == false) or not settings.StopWhenScroll then
                    if foundWep == false and foundMode == false and foundJin == false and foundSub == false then
                        if _G.ServerHop then
                            ps_Hop()
                        end
                    end
                end
            end)
        end)

        local lobby = 4616652839
        function createPubS(Place, samePlace, isLobby)
            if game.PlaceId ~= settings.SelectableVillages2[Place] and not isLobby then
                game.Players.LocalPlayer.startevent:FireServer("rpgteleport", settings.SelectableVillages2[Place]);
            else
                if not settings.PublicHopMethod2 then
                    local url = 'https://games.roblox.com/v1/games/%s/servers/public?cursor=%s'
                    local cursor = ""

                    game.StarterGui:SetCore("SendNotification", {
                        Title = "Server-Hopper"; 
                        Text = "Attempting to hop servers..";
                        Duration = 5; 
                    })

                    local hasTried = false
                    
                    while wait(0.1) do
                        local response = game:HttpGet(url:format(game.PlaceId, cursor))
                        local decoded = HttpService:JSONDecode(response)
                        
                        for i, server in next, decoded.data do
                            if server.playing < server.maxPlayers then
                                settings.spawnSets.cachedServers[server.id] = true
                                wait()
                                savedsettings:save("SL2", settings)
                                wait()
                                warn'ACTUALLY TELEPORTING??'
                                game:GetService'TeleportService':TeleportToPlaceInstance(game.PlaceId, server.id, game.Players.LocalPlayer)
                                if not hasTried then 
                                    hasTried = true
                                    game.StarterGui:SetCore("SendNotification", {
                                        Title = "Server-Hopper"; 
                                        Text = "Teleporting!";
                                        Duration = 5; 
                                    })
                                end
                                wait(9e9)
                            end
                        end
                        
                        if not decoded.nextPageCursor then
                            break
                        end

                        cursor = decoded.nextPageCursor;
                    end
                else
                    print'Method2..FUCK'
                    if samePlace then
                        savedsettings:save("SL2", settings)
                        game.Players.LocalPlayer.startevent:FireServer("rpgteleport", lobby);
                    else
                        savedsettings:save("SL2", settings)
                        game.Players.LocalPlayer.startevent:FireServer("rpgteleport", settings.SelectableVillages2[Place]);
                    end

                end
            end
        end
        local alreadyPubHopping = false
        function pub_Hop()
            if alreadyPubHopping == false then
                if settings.spawnSets.WeaponSpawn or settings.spawnSets.ModeSpawn or settings.spawnSets.JinSpawn or settings.spawnSets.SubSpawn then
                    codeWhenHopping = "_G.ServerHopPublic1 = true\n"..codeWhenHopping
                    hasCalled = true
                    syn.queue_on_teleport(codeWhenHopping)
                    if settings.PublicHopMethod2 and game.PlaceId == settings.SelectableVillages2[settings.spawnSets.SelectedVillage] then
                        savedsettings:save("SL2", settings)
                        alreadyPubHopping = true
                        createPubS(lobby, true)
                    end
                end
                alreadyPubHopping = true
                createPubS(settings.spawnSets.SelectedVillage)
            end
        end
        --[[
        spawn(function()
            repeat wait() until game.Players.LocalPlayer.Character
            wait(5)
            local timerFoundCandy = 0
            while wait() do
                if settings.autofarmCandy_Enabled then
                    for i, npc in pairs(Workspace.missiongivers:GetChildren()) do
                        if npc and npc:FindFirstChild("Talk") then
                            if npc.Talk.typ.Value == "halloweenevent" and npc:FindFirstChild("CLIENTTALK") and npc.Head.givemission.Enabled == true then
                                timerFoundCandy = 0
                                game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = npc.HumanoidRootPart.CFrame
                                repeat wait()
                                    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = npc.HumanoidRootPart.CFrame
                                    npc.CLIENTTALK:FireServer()
                                    wait(0.3)
                                    npc.CLIENTTALK:FireServer("accept")
                                    wait(0.3)
                                until
                                    npc == nil or npc.Parent == nil or settings.autofarmCandy_Enabled == false or npc.Head.givemission.Enabled == false
                            end
                        end
                    end
                    timerFoundCandy = timerFoundCandy + 0.04
                    
                    if settings.newServerAfterTimer then
                        if settings.timerMaxForCandy <= timerFoundCandy then
                            settings.autofarmCandy_Enabled = false
                            for i,v in pairs (settings.SelectableVillages) do
                                if v == game.PlaceId then
                                    settings.SelectedVillage = settings.SelectableVillages[i]
                                end
                            end
                            if workspace:FindFirstChild("playerps") then
                                ps_Hop()
                            else
                                pub_Hop()
                            end
                        end
                    end
                end
            end
        end)
        ]]
        spawn(function()
            repeat wait() until game.Players.LocalPlayer.Character
            wait(5)
            local questTimer = 0
            while true do
                wait()
                --game:GetService("RunService").RenderStepped:Wait()
                pcall(function()
                    resetQuestDat()

                    if settings.autofarm_Enabled then
                        if not autofarmDat.GotQuest then
                            for index, npc in pairs(missiongivers:GetChildren()) do
                                repeat wait() until game.Players.LocalPlayer.Character
                                local giverdata = getMissionGiverData(npc)
                                wait()
                                if giverdata.Type and npc:FindFirstChild("CLIENTTALK") and (giverdata.Type == "defeat" or (settings.bossOnly and giverdata.Type == "companion" and game.Players.LocalPlayer.statz.lvl.lvl.Value > 700)) then
                                    questTimer = 0
                                    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = npc.HumanoidRootPart.CFrame
                                    repeat wait()
                                        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = npc.HumanoidRootPart.CFrame
                                        spawn(function()
                                            npc.CLIENTTALK:FireServer()
                                            wait(0.3)
                                            npc.CLIENTTALK:FireServer("accept")
                                            wait(0.3)
                                        end)
                                    until game.Players.LocalPlayer.PlayerGui.Main.ingame.Missionstory.Visible == true or settings.autofarm_Enabled == false or getMissionGiverData(npc).Type == nil

                                    if game.Players.LocalPlayer.PlayerGui.Main.ingame.Missionstory.Visible then
                                        autofarmDat.GotQuest = game.Players.LocalPlayer.PlayerGui.Target
                                    end
                                end

                                if game.Players.LocalPlayer.PlayerGui:FindFirstChild("Target") then
                                    autofarmDat.KillingNPCs = true
                                    for index, npc in pairs(toKillNPCs:GetChildren()) do
                                        if npc and npc:FindFirstChild("HumanoidRootPart") and npc.Name ~= "logtraining" and game.Players.LocalPlayer.PlayerGui:FindFirstChild("Target") and (npc.HumanoidRootPart.Position - game.Players.LocalPlayer.PlayerGui.Target.Adornee.Position).magnitude < 200 then
                                            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game.Players.LocalPlayer.PlayerGui.Target.Adornee.CFrame * CFrame.new(0, 2.5, 0)
                                            spawn(function()
                                                local i = 0
                                                repeat wait(1) 
                                                    i = i + 1 
                                                    if i >= 8 then 
                                                        cancelQuest() 
                                                        resetQuestDat()
                                                    end 
                                                until autofarmDat.KillingNPCs == false or not game.Players.LocalPlayer.PlayerGui:FindFirstChild("Target") or game.Players.LocalPlayer.PlayerGui.Main.ingame.Missionstory.Visible == false or settings.autofarm_Enabled == false
                                            end)
                                            repeat wait()
                                                npc.Humanoid.Health = npc.Humanoid.MaxHealth
                                                wait()
                                                npc.Humanoid.Health = 0
                                            until
                                                npc == nil or npc.Parent == nil or (npc:FindFirstChild'fakehealth' and npc.fakehealth.Value == 0) or autofarmDat.KillingNPCs == false or not game.Players.LocalPlayer.PlayerGui:FindFirstChild("Target") or game.Players.LocalPlayer.PlayerGui.Main.ingame.Missionstory.Visible == false or settings.autofarm_Enabled == false
                                                
                                        end
                                    end
                                    autofarmDat.KillingNPCs = false
                                end
                                if settings.rejoinAfterAllQuests then
                                    questTimer = questTimer + 0.1
                                    
                                    if questTimer >= 10 then
                                        game:GetService("Players").LocalPlayer.startevent:FireServer("createprivateserver", 4601350214)
                                    end
                                end
                            end
                        end
                    end
                end)
            end
        end)

        local function hideName()
            local chatbox = game.Players.LocalPlayer.PlayerGui.Chat.Frame.ChatBarParentFrame.Frame.BoxFrame.Frame.ChatBar 

            chatbox.Text = [[!name a 

            ]]

            for i,v in pairs(getconnections(chatbox.FocusLost)) do
                v.Function(true)
            end
        end

        local function showName()
            local chatbox = game.Players.LocalPlayer.PlayerGui.Chat.Frame.ChatBarParentFrame.Frame.BoxFrame.Frame.ChatBar 

            chatbox.Text = [[!name N/A]]

            for i,v in pairs(getconnections(chatbox.FocusLost)) do
                v.Function(true)
            end
        end

        local alreadygot = {}
        local function getAdded(thing)
            local model = nil
            local clickDetector = nil
            local name = ""
            local sh = thing:FindFirstChild("sh")
            if sh then
                local cf = sh.CFrame.p 
                if cf ~= Vector3.new(0, -40000, 0) then
                    model = thing
                    name = model.Name
                    clickDetector = sh:FindFirstChildOfClass("ClickDetector")
                end
                if model and model.Name:find("tentail") then
                    foundBossScroll = true
                end
            end
            if sh and sh:FindFirstChild("invoke") then
                local unlocked = game.Players.LocalPlayer.statz.unlocked
                if not unlocked:FindFirstChild(tostring(name):lower().."scroll") then
                    if not alreadygot[thing] then
                        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = sh.CFrame
                        wait()
                        alreadygot[model] = true
                        game.StarterGui:SetCore("SendNotification", {
                            Title = "Scroll Sniper"; 
                            Text = "Scroll Sniped "..name.."";
                            Duration = 5; 
                        })
                    end
                    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = sh.CFrame
                    wait()
                    sh.invoke:FireServer(game.Players.LocalPlayer)
                end
            end
            if clickDetector then
                local unlocked = game.Players.LocalPlayer.statz.unlocked
                if not unlocked:FindFirstChild(tostring(name):lower().."scroll") then
                    if not alreadygot[thing] then
                        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = sh.CFrame
                        wait()
                        alreadygot[model] = true
                        game.StarterGui:SetCore("SendNotification", {
                            Title = "Scroll Sniper"; 
                            Text = "Scroll Sniped "..name.."";
                            Duration = 5; 
                        })
                    end
                    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = sh.CFrame
                    wait()
                    fireclickdetector(clickDetector)
                end
            end
        end

        spawn(function()
            while true do
                game:GetService("RunService").RenderStepped:Wait()

                setsimulationradius(900000)

                pcall(function()
                    spawn(function()
                        if settings.autoaim_Projectiles then

                            local projp = workspace.projectileparent
                            local ms = projp:FindFirstChild(game.Players.LocalPlayer.Name.."mouse")

                            local target = getClosestPlayerToCursor()
                            if target then 
                                target = target.Character 

                                ms.mous.Position = target.HumanoidRootPart.Position

                            end
                        end
                    end)
                end)

                if settings.killaura_Enabled then
                    pcall(function()
                        for i, npc in pairs(workspace.npc:children'') do
                            if (npc.HumanoidRootPart.Position - game.Players.LocalPlayer.Character.HumanoidRootPart.Position).magnitude < 30 then
                                spawn(function()
                                    repeat wait()
                                        npc.Humanoid.Health = npc.Humanoid.MaxHealth
                                        wait()
                                        npc.Humanoid.Health = 0
                                    until
                                        npc == nil or npc.Parent == nil or (npc:FindFirstChild'fakehealth' and npc.fakehealth.Value == 0) or settings.killaura_Enabled == false
                                end)
                            end
                        end
                    end)
                end

                if settings.killaura_Enabled2 then
                    pcall(function()
                        for i, npc in pairs(workspace.npc:children'') do
                            if (npc.HumanoidRootPart.Position - game.Players.LocalPlayer.Character.HumanoidRootPart.Position).magnitude < settings.killauraRange then
                                spawn(function()
                                    wait(waitTimeKillaura)
                                    repeat wait()
                                        npc.Humanoid.Health = npc.Humanoid.MaxHealth
                                        wait()
                                        npc.Humanoid.Health = 0
                                    until
                                        npc == nil or npc.Parent == nil or (npc:FindFirstChild'fakehealth' and npc.fakehealth.Value == 0) or settings.killaura_Enabled2 == false
                                end)
                            end
                        end
                    end)
                end

                if runspdMod then
                    local UserInputService = game:GetService("UserInputService")
                    local shift = UserInputService:IsKeyDown(Enum.KeyCode.LeftShift)
                    if shift then
                        pcall(function()
                            game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = runSpeed
                        end)
                    end
                end

                if settings.sniper_Enabled then
                    spawn(function()
                        for i,thing in pairs(workspace:GetChildren'') do
                            getAdded(thing)
                        end
                    end)
                    spawn(function()
                        for i,thing in pairs(workspace.GLOBALTIME:children'') do
                            getAdded(thing)
                        end
                    end)
                end
                if settings.autokill_Jins then
                    pcall(function()
                        spawn(function()
                            for i,thing in pairs(workspace.npc:children'') do
                                if thing:FindFirstChild("megaboss") and thing:FindFirstChild("HumanoidRootPart") and thing.HumanoidRootPart.CFrame.Y > -500 then
                                    local oldSet = settings.autofarm_Enabled
                                    settings.autofarm_Enabled = false
                                    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = thing.HumanoidRootPart.CFrame
                                    autofarmDat.KillingNPCs = false
                                    autofarmDat.KillingNPCs = true
                                    spawn(function()
                                        local i = 0
                                        repeat wait(1) 
                                            i = i + 1 
                                            if i >= 8 then 
                                                cancelQuest() 
                                                resetQuestDat()
                                            end 
                                        until autofarmDat.KillingNPCs == false or not game.Players.LocalPlayer.PlayerGui:FindFirstChild("Target") or game.Players.LocalPlayer.PlayerGui.Main.ingame.Missionstory.Visible == false or settings.autofarm_Enabled == false
                                    end)
                                    repeat wait()
                                        npc.Humanoid.Health = npc.Humanoid.MaxHealth
                                        wait()
                                        npc.Humanoid.Health = 0
                                    until
                                        npc == nil or npc.Parent == nil or (npc:FindFirstChild'fakehealth' and npc.fakehealth.Value == 0) or autofarmDat.KillingNPCs == false

                                    settings.autofarm_Enabled = oldSet
                                end
                            end
                        end)
                    end)
                end
            end
        end)

        spawn(function()
            while wait(10) do
                if settings.autoPrestige and game.Players.LocalPlayer.statz.lvl.lvl.Value == 1000 then
                    game:GetService("Players").LocalPlayer.startevent:FireServer("rankup")
                end
            end
        end)

        local function rejoinServer()
            game.Players.LocalPlayer.startevent:FireServer("play");
            game.Players.LocalPlayer.startevent:FireServer("rpgteleport", lobby);
        end

        local function godmode()
            pcall(function()
                local old = game.Players.LocalPlayer.Character:FindFirstChild("fakehealth")
                local new = old:Clone()
                new.Parent = old.Parent
                old:Destroy()
                game.Players.LocalPlayer.Character.ChildAdded:Connect(function(s)
                    if s.Name == "stayonground" then
                        s:Destroy()
                    end
                end)
            end)
        end

        local function antigrip()
            for i,s in pairs(game.Players.LocalPlayer.Character:children'') do
                if s.Name == "stayonground" then
                    s:Destroy()
                end
            end
            game.Players.LocalPlayer.Character.ChildAdded:Connect(function(s)
                if s.Name == "stayonground" then
                    s:Destroy()
                end
            end)
            for i,s in pairs(game.Players.LocalPlayer.Character.HumanoidRootPart:children'') do
                if s.Name == "KO" then
                    s:Destroy()
                end
            end
            game.Players.LocalPlayer.Character.HumanoidRootPart.ChildAdded:Connect(function(s)
                if s.Name == "KO" then
                    s:Destroy()
                end
            end)
            spawn(function()
                pcall(function()
                    while game.Players.LocalPlayer.Character do
                        game:GetService'RunService'.RenderStepped:Wait()
                        local chr = game.Players.LocalPlayer.Character or game.Players.LocalPlayer.CharacterAdded:Wait()
                        local combat = chr.combat 
                        combat.disable.Value = false
                        combat.canrun.Value = false
                        combat.combat.delayfront.Value = false
                        if combat:FindFirstChild("landed") then
                            combat:FindFirstChild("landed"):Destroy()
                        end
                        if combat:FindFirstChild("attacked") then
                            combat:FindFirstChild("attacked"):Destroy()
                        end
                        if combat:FindFirstChild("slowdown") then
                            combat:FindFirstChild("slowdown"):Destroy()
                        end
                        if combat:FindFirstChild("nowalk") then
                            combat:FindFirstChild("nowalk"):Destroy()
                        end
                        if combat:FindFirstChild("nomove") then
                            combat:FindFirstChild("nomove"):Destroy()
                        end
                        combat.charge.Value = false
                        combat.bind.Value = false
                        combat.grip.Value = false
                    end
                end)
            end)
        end

        local function tpquesttarg()
            pcall(function()
                local target = game.Players.LocalPlayer.PlayerGui.Target.Adornee 
                game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = target.CFrame
            end)
        end

        local function disableMovementCooldowns()
            pcall(function()
                spawn(function()
                    while game.Players.LocalPlayer.Character do
                        game:GetService'RunService'.RenderStepped:Wait()
                        local chr = game.Players.LocalPlayer.Character
                        local combat = chr.combat 
                        combat.disable.Value = false
                        combat.canrun.Value = false
                        combat.combat.delayfront.Value = false
                        if combat:FindFirstChild("landed") then
                            combat:FindFirstChild("landed"):Destroy()
                        end
                        if combat:FindFirstChild("attacked") then
                            combat:FindFirstChild("attacked"):Destroy()
                        end
                        if combat:FindFirstChild("slowdown") then
                            combat:FindFirstChild("slowdown"):Destroy()
                        end
                        if combat:FindFirstChild("nowalk") then
                            combat:FindFirstChild("nowalk"):Destroy()
                        end
                        if combat:FindFirstChild("nomove") then
                            combat:FindFirstChild("nomove"):Destroy()
                        end
                        combat.charge.Value = false
                        combat.bind.Value = false
                        combat.grip.Value = false
                    end
                end)
            end)
        end

        function createWarPubs(Place)
            Save1()
            local url = 'https://games.roblox.com/v1/games/%s/servers/public?cursor=%s'
            local cursor = ""

            game.StarterGui:SetCore("SendNotification", {
                Title = "Server-Hopper"; 
                Text = "Attempting to hop servers..";
                Duration = 5; 
            })

            local hasTried = false
            
            while wait(0.1) do
                local response = game:HttpGet(url:format(Place, cursor))
                local decoded = HttpService:JSONDecode(response)
                
                for i, server in next, decoded.data do
                    if server.playing < server.maxPlayers then
                        settings.spawnSets.cachedServers[server.id] = true
                        wait()
                        savedsettings:save("SL2", settings)
                        wait()
                        if not hasTried then 
                            hasTried = true
                            game.StarterGui:SetCore("SendNotification", {
                                Title = "Server-Hopper"; 
                                Text = "Teleporting!";
                                Duration = 5; 
                            })
                        end
                        game:GetService'TeleportService':TeleportToPlaceInstance(Place, server.id, game.Players.LocalPlayer)
                        wait(9e9)
                    end
                end
                
                if not decoded.nextPageCursor then
                    break
                end

                cursor = decoded.nextPageCursor;
            end
        end

        local canspin = true
        local spins = game.Players.LocalPlayer.statz.spins
        local amountSpun = 0
        local lastNumSpins = spins.Value
        local function spinUntil()
            canspin = false
            canspin = true
            local foundkg1 = false
            local foundkg2 = false
            local foundkg3 = false
            local foundkg3 = false
            repeat wait(0.1)
                if canspin then
                    for slot, v in pairs(settings.kgsroll) do
                        if v then
                            local currentKG = game.Players.LocalPlayer.statz.main[slot]
                            if settings.kgspicked[currentKG.Value] then
                                canspin = false
                                return
                            elseif amountSpun < settings.resetAfterSpinAmount and settings.resetAfterSpin or settings.resetAfterSpin == false then
                                game:GetService("Players").LocalPlayer.startevent:FireServer("spin", slot)
                                wait()
                            end
                        end
                    end
                end

            until
                game.Players.LocalPlayer.statz.spins.Value == 0 or canspin == false or (settings.resetAfterSpin and amountSpun >= settings.resetAfterSpinAmount)

            canspin = true
        end

        game.Players.PlayerAdded:Connect(function(Player)
            if (settings.staffdetecs.inctest and Player:GetRoleInGroup(1226491) == "[SL2] Tester") or Player:GetRoleInGroup(1226491):find("NvM") or Player:GetRoleInGroup(1226491):find("The Man") or Player:GetRoleInGroup(1226491):find("Creators") or Player.Name == "RELLhub" then
                if settings.staffdetecs.skick then
                    savedsettings:save("SL2", settings)
                    game.Players.LocalPlayer:Kick("User "..Player.Name.." has joined. | Rank: ".. Player:GetRoleInGroup(1226491))
                end
                if settings.staffdetecs.notif then
                    game.StarterGui:SetCore("SendNotification", {
                        Title = "RELL Staff Detected"; 
                        Text = "User "..Player.Name.." has joined. | Rank: ".. Player:GetRoleInGroup(1226491);
                        Duration = 5; 
                    })
                end
            end
        end)

        local main = library:createWindow("not hattori")
        local tab1 = main:newTab("Main")

        tab1:button("Copy Discord Invite", function()
            write_clipboard("https://discord.gg/hattori")
        end)

        local VirtualUser = game:service'VirtualUser'
        game:service'Players'.LocalPlayer.Idled:connect(function()
            if settings.AntiAfk then
                VirtualUser:CaptureController()
                VirtualUser:ClickButton2(Vector2.new())
            end
        end)

        tab1:toggle("Anti-AFK", {
            location = nil;
            flag = "AntiAfk";
            default = settings.AntiAfk;
        }, false, {}, function(state) 
            settings.AntiAfk = state

            savedsettings:save("SL2", settings)
        end)

        tab1:toggle("Autofarm", {
            location = nil;
            flag = "autofarm_Enabled";
            default = settings.autofarm_Enabled;
        }, false, {}, function(state) 
            settings.autofarm_Enabled = state
            settings.shouldNoClip = state

            savedsettings:save("SL2", settings)
        end)

        tab1:toggle("Include Companion Missions", {
            location = nil;
            flag = "bossOnly";
            default = settings.bossOnly;
        }, false, {}, function(state) 
            settings.bossOnly = state

            savedsettings:save("SL2", settings)
        end)

        tab1:toggle("Rejoin/All quests completed", {
            location = nil;
            flag = "rejoinAfterAllQuests";
            default = settings.rejoinAfterAllQuests;
        }, false, {}, function(state) 
            settings.rejoinAfterAllQuests = state

            savedsettings:save("SL2", settings)
        end)

        tab1:toggle("Scroll Sniper", {
            location = nil;
            flag = "sniper_Enabled";
            default = settings.sniper_Enabled;
        }, false, {}, function(state) 
            settings.sniper_Enabled = state

            savedsettings:save("SL2", settings)
        end)

        tab1:toggle("Autokill Jins", {
            location = nil;
            flag = "autokill_Jins";
            default = settings.autokill_Jins;
        }, false, {}, function(state) 
            settings.autokill_Jins = state

            savedsettings:save("SL2", settings)
        end)

        tab1:button("Anti-grip", antigrip)

        tab1:button("Tp to quest target", tpquesttarg)


        local tab2 = main:newTab("War mode")

        tab2:toggle("Killaura", {
            location = nil;
            flag = "killaura_Enabled2";
            default = settings.killaura_Enabled2;
        }, false, {}, function(state) 
            settings.killaura_Enabled2 = state

            savedsettings:save("SL2", settings)
        end)

        tab2:slider("Range", {
            location = nil;
            flag = "killauraRange";
            min = 30;
            max = 30000;
            default = settings.killauraRange;
        }, function(v) settings.killauraRange = v savedsettings:save("SL2", settings) end, false, {})

        tab2:slider("Time before kill", {
            location = nil;
            flag = "waitTimeKillaura";
            min = 0;
            max = 5;
            default = settings.waitTimeKillaura;
        }, function(v) settings.waitTimeKillaura = v savedsettings:save("SL2", settings) end, false, {})


        local labelx = tab2:label("Current Round", "Current Round: 0")
        spawn(function()
            if _G.HopUntilRound then
                local curRound = workspace.warserver.round.Value
                if not (curRound >= _G.HopUntilRound and curRound < 21) then
                    codeWhenHopping = "_G.HopUntilRound = "..tostring(_G.HopUntilRound).."\n_G.UntilBossSpawns = "..tostring(_G.UntilBossSpawns).."\n"..codeWhenHopping
                    settings.spawnSets.cachedServers[game.JobId] = true
                    savedsettings:save("SL2", settings)
                    hasCalled = true
                    syn.queue_on_teleport(codeWhenHopping)
                    createWarPubs(5824792748)
                end
            end
        end)

        if workspace:FindFirstChild("warserver") then
            workspace.warserver.round.Changed:Connect(function()
                
                labelx:changeText("Current Round: "..tostring(workspace.warserver.round.Value))
                if settings.autoReset then
                    if workspace.warserver.round.Value >= settings.ResetAfter then
                        game.Players.LocalPlayer.Character:BreakJoints()
                    end
                end
                if _G.UntilBossSpawns then
                    if workspace.warserver.round.Value >= 22 then
                        if not foundBossScroll then
                            codeWhenHopping = "_G.HopUntilRound = "..tostring(_G.HopUntilRound).."\n_G.UntilBossSpawns = "..tostring(_G.UntilBossSpawns).."\n"..codeWhenHopping
                            settings.spawnSets.cachedServers[game.JobId] = true
                            savedsettings:save("SL2", settings)
                            hasCalled = true
                            syn.queue_on_teleport(codeWhenHopping)
                            createWarPubs(5824792748)
                        end
                    end
                end
            end)
        end

        tab2:slider("Auto-reset after round", {
            location = nil;
            flag = "ResetAfter";
            min = 1;
            max = 100;
            default = settings.ResetAfter;
        }, function(state) ResetAfter = state savedsettings:save("SL2", settings) end, true, {
            location = nil;
            flag = "autoReset";
            default = settings.autoReset;
            callback = function(state) autoReset = state savedsettings:save("SL2", settings) end;
        })

        tab2:button("Hop until round", function() 

            _G.HopUntilRound = untilRound
            _G.UntilBossSpawns = untilBossSpawns
            
            codeWhenHopping = "_G.HopUntilRound = "..tostring(_G.HopUntilRound).."\n_G.UntilBossSpawns = "..tostring(_G.UntilBossSpawns).."\n"..codeWhenHopping
            settings.spawnSets.cachedServers[game.JobId] = true
            savedsettings:save("SL2", settings)
            hasCalled = true
            syn.queue_on_teleport(codeWhenHopping)
            createWarPubs(5824792748)

        end)

        tab2:slider("Until Round", {
            location = nil;
            flag = "untilRound";
            min = 0;
            max = 20;
            default = settings.untilRound;
        }, function(v) settings.untilRound = v savedsettings:save("SL2", settings) end, false, {})


        tab2:toggle("Hop if no scroll spawns", {
            location = nil;
            flag = "untilBossSpawns";
            default = settings.untilBossSpawns;
        }, false, {}, function(state) 
            settings.untilBossSpawns = state

            savedsettings:save("SL2", settings)
        end)

        local tab3 = main:newTab("Spins")

        local cs = game.Players.LocalPlayer.statz:FindFirstChild("customsusanoo")
        if cs then
            local mainColor = cs.color
            local eyeColor = cs.eyecolor

            local labelx1 = tab3:label("Eye Color", "Eye Color").object
            local labelx22 = tab3:label("Main Color", "Main Color").object
            
            labelx1.border.frame.ImageColor3 = Color3.fromRGB(unpack(tostring(eyeColor.Value):split(",")))
            labelx22.border.frame.ImageColor3 = Color3.fromRGB(unpack(tostring(mainColor.Value):split(",")))

            local function randomizeEyeColor()
                game:GetService("Players").LocalPlayer.startevent:FireServer("csusanoo", "eyecolor")

                --labelx1.Text = "Eye Color: " ..tostring(BrickColor.new(r1,g1,b1))
                --labelx2.Text = "Main Color: " ..tostring(BrickColor.new(r3,g3,b3))

                labelx1.Parent.ImageColor3 = Color3.fromRGB(unpack(tostring(eyeColor.Value):split(",")))
            end
            
            local function randomizeMainColor()
                game:GetService("Players").LocalPlayer.startevent:FireServer("csusanoo", "color")

                --labelx22.Text = "Main Color: " ..tostring(BrickColor.new(r3,g3,b3))

                labelx22.Parent.ImageColor3 = Color3.fromRGB(unpack(tostring(mainColor.Value):split(",")))
            end

            tab3:button("Spin Susanoo EyeColor", randomizeEyeColor)

            tab3:button("Spin Susanoo MainColor", randomizeMainColor)
        end

        local labelx111 = tab3:label("Current Spins", "Current Spins: "..tostring(game.Players.LocalPlayer.statz.spins.Value))


        tab3:dropdown("Select KG slot", true, {
            location = settings.kgsroll;
            list = {
                {
                    Name = "Slot 1";
                    flag = "kg1";
                };
                {
                    Name = "Slot 2";
                    flag = "kg2";
                };
                {
                    Name = "Slot 3";
                    flag = "kg3";
                };
                {
                    Name = "Slot 4";
                    flag = "kg4";
                };
            };
            default = "Select KG slot";
        }, function(v) 
            savedsettings:save("SL2", settings)
        end)

        local kglist = {
            {
                Name = "Sharingan";
                flag = 'sharingan';
            };
            {
                Name = "Boil";
                flag = 'boil';
            };
            {
                Name = "Crystal";
                flag = 'crystal';
            };
            {
                Name = "Dust";
                flag = 'dust';
            };
            {
                Name = "Explosion";
                flag = 'explosion';
            };
            {
                Name = "Sand";
                flag = 'sand';
            };
            {
                Name = "Ice";
                flag = 'ice';
            };
            {
                Name = "Golddust";
                flag = 'golddust';
            };
            {
                Name = "Scorch";
                flag = 'scorch';
            };
            {
                Name = "Lava";
                flag = 'lava';
            };
            {
                Name = "Ironsand";
                flag = 'ironsand';
            };
            {
                Name = "Wood";
                flag = 'wood';
            };
            {
                Name = "Mud";
                flag = 'mud';
            };
            {
                Name = "Storm";
                flag = 'storm';
            };
            {
                Name = "Byakugan";
                flag = 'byakugan';
            };
            {
                Name = "Ketsuryugan";
                flag = 'ketsuryugan';
            };
            {
                Name = "Kaguya";
                flag = 'kaguya';
            };
            {
                Name = "Namikaze";
                flag = 'namikaze';
            };
            {
                Name = "Sarutobi";
                flag = 'sarutobi';
            };
            {
                Name = "Uzumaki";
                flag = 'uzumaki';
            };
            {
                Name = "Shirogane";
                flag = 'shirogane';
            };
            {
                Name = "Nara";
                flag = 'nara';
            };
            {
                Name = "Hoshigaki";
                flag = 'hoshigaki';
            };
            {
                Name = "Senjuwood";
                flag = 'senjuwood';
            };
            {
                Name = "Yukiice";
                flag = 'yukiice';
            };
            {
                Name = "Kamizuru";
                flag = 'kamizuru';
            };
            {
                Name = "Rinnegan";
                flag = 'rinnegan';
            };
            {
                Name = "Blacklightning";
                flag = 'blacklightning';
            };
            {
                Name = "Clay";
                flag = 'clay';
            };
            {
                Name = "Itachi Sharingan";
                flag = 'itachisharingan';
            };
            {
                Name = "Obito Sharingan";
                flag = 'obitosharingan';
            };
            {
                Name = "Inuzuka";
                flag = 'inuzuka';
            };
            {
                Name = "Jashin";
                flag = 'jashin';
            };
            {
                Name = "Paper";
                flag = 'paper';
            };
            {
                Name = "Akimichi";
                flag = 'akimichi';
            };
        };

        for i,v in pairs(kglist) do
            v.Name = game.ReplicatedStorage.alljutsu:WaitForChild(v.flag, 99):FindFirstChild("REALNAME").Value 
        end
        
        tab3:dropdown("Select KG", true, {
            location = settings.kgspicked;
            list = kglist;
            default = "Select KG";
        }, function(v) 
            savedsettings:save("SL2", settings) 
        end)

        tab3:button("Spin for KG", spinUntil)

        tab3:slider("Reset Save after #spins", {
            location = nil;
            flag = "resetAfterSpinAmount";
            min = 1;
            max = 79;
            default = settings.resetAfterSpinAmount;
        }, function(state) settings.resetAfterSpinAmount = state savedsettings:save("SL2", settings) end, true, {
            location = nil;
            flag = "resetAfterSpin";
            default = settings.resetAfterSpin;
            callback = function(state) settings.resetAfterSpin = state savedsettings:save("SL2", settings) end;
        })

        spins.Changed:Connect(function()
            labelx111:changeText("Current Spins: "..tostring(spins.Value))
            if spins.Value < lastNumSpins then
                lastNumSpins = spins.Value
                amountSpun = amountSpun + 1
                if settings.resetAfterSpin then
                    if amountSpun >= settings.resetAfterSpinAmount then
                        game.Players.LocalPlayer.statz:ClearAllChildren()
                        game:service'TeleportService':Teleport(game.PlaceId);
                    end
                end
            end
        end)

        tab3:button("Reset to last save", function()
            pcall(function()
                game.Players.LocalPlayer.statz:ClearAllChildren()
                game:service'TeleportService':Teleport(game.PlaceId);
            end)
        end)

        local tab4 = main:newTab("Character")

        --tab4:button("Hide name", hideName)

        --tab4:button("Show name", showName)

        tab4:slider("Run speed modifier", {
            location = nil;
            flag = "runSpeed";
            min = 30;
            max = 100;
            default = settings.runSpeed;
        }, function(state) runSpeed = state end, true, {
            location = nil;
            flag = "runspdMod";
            default = settings.runspdMod;
            callback = function(state) runspdMod = state end;
        })

        tab4:button("Infinite Mode", function()
            pcall(function()
                local currentmode = game.Players.LocalPlayer.Character.combat.KG.currentmode 
                if currentmode.Value ~= "" or currentmode.Parent.currentkg.Value ~= "" then
                    local c = game.Players.LocalPlayer.Character.combat.mode
                    local s = c:Clone()
                    s.Parent = c.Parent
                    c:Destroy()
                end
            end)
        end)

        tab4:button("No movement cooldown", disableMovementCooldowns)

        tab4:button("Godmode", godmode)

        local tab5 = main:newTab("Misc")

        tab5:button("Rejoin Server", rejoinServer)

        tab5:toggle("Auto-prestige", {
            location = nil;
            flag = "autoPrestige";
            default = settings.autoPrestige;
        }, false, {}, function(state) 
            settings.autoPrestige = state

            savedsettings:save("SL2", settings)
        end)

        tab5:toggle("Silent Aim", {
            location = nil;
            flag = "autoaim_Projectiles";
            default = settings.autoaim_Projectiles;
        }, false, {}, function(state) 
            settings.autoaim_Projectiles = state
        end)

        tab5:dropdown("Staff Join Detection", true, {
            location = settings.staffdetecs;
            list = {
                {
                    Name = "Notification";
                    flag = "notif";
                };
                {
                    Name = "Self-Kick";
                    flag = "skick";
                };
                {
                    Name = "Include Testers";
                    flag = "inctest";
                };
            };
            default = "Staff Join Detection";
        }, function(v) 
            savedsettings:save("SL2", settings)
        end)
        --[[
        tab5:toggle("Candy Autofarm", {
            location = nil;
            flag = "autofarmCandy_Enabled";
            default = settings.autofarmCandy_Enabled;
        }, false, {}, function(state) 
            settings.autofarmCandy_Enabled = state

            savedsettings:save("SL2", settings)
        end)

        tab5:slider("Serverhop-no candy spawned (secs)", {
            location = nil;
            flag = "timerMaxForCandy";
            min = 5;
            max = 60;
            default = settings.timerMaxForCandy;
        }, function(state) settings.timerMaxForCandy = state end, true, {
            location = nil;
            flag = "newServerAfterTimer";
            default = settings.newServerAfterTimer;
            callback = function(state) settings.newServerAfterTimer = state end;
        })
        ]]
        local tab6 = main:newTab("Private Hop")

        tab6:dropdown("Select Village", false, {
            location = nil;
            flag = "SelectedVillage";
            list = {
                {Name = "Leaf";};
                {Name = "Rock";};
                {Name = "Cloud";};
                {Name = "Mist";};
                {Name = "Sand";};
                {Name = "TrainingGrounds";};
                {Name = "ForestOfDeath";};
                {Name = "Rain";};
                {Name = "Akatsuki";};
            };
            default = settings.spawnSets.SelectedVillage;
        }, function(v) 
            settings.spawnSets.SelectedVillage = (v) 

            savedsettings:save("SL2", settings)
        end)

        tab6:button("Hop Private Servers", ps_Hop)
        --[[
        tab6:toggle("Stop when scroll found", {
            location = nil;
            flag = "PubCodeHop";
            default = settings.StopWhenScroll;
        }, false, {}, function(state) 
            settings.StopWhenScroll = state

            savedsettings:save("SL2", settings)
        end)
        ]]
        tab6:toggle("Use a code to hop", {
            location = nil;
            flag = "PubCodeHop";
            default = _G.PubCodeHop;
        }, false, {}, function(state) 
            _G.PubCodeHop = state

            savedsettings:save("SL2", settings)
        end)

        tab6:textbox("Input Code", {}, function(stat)
            _G.PubCodeHopCode = stat

            savedsettings:save("SL2", settings)
        end)

        tab6:dropdown("Hop Until", true, {
            location = settings.spawnSets;
            list = {
                {
                    Name = "Jin Spawns";
                    flag = "JinSpawn";
                };
                {
                    Name = "Weapon Spawns";
                    flag = "WeaponSpawn";
                };
                {
                    Name = "Mode Spawns";
                    flag = "ModeSpawn";
                };
                {
                    Name = "Sub Spawns";
                    flag = "SubSpawn";
                };
            };
            default = "Hop Until";
        }, function(isToggled, name) 
            savedsettings:save("SL2", settings)
        end)

        local tab7 = main:newTab("Public Hop")

        tab7:button("Hop Public Servers", pub_Hop)

        tab7:toggle("Use alternative method", {
            location = nil;
            flag = "PublicHopMethod2";
            default = settings.PublicHopMethod2;
        }, false, {}, function(state) 
            settings.PublicHopMethod2 = state

            savedsettings:save("SL2", settings)
        end)

        tab7:dropdown("Select Village", false, {
            location = nil;
            flag = "SelectedVillage2";
            list = {
                {Name = "Leaf";};
                {Name = "Rock";};
                {Name = "Cloud";};
                {Name = "Mist";};
                {Name = "Sand";};
                {Name = "TrainingGrounds";};
                {Name = "ForestOfDeath";};
                {Name = "Rain";};
                {Name = "Akatsuki";};
            };
            default = settings.spawnSets.SelectedVillage;
        }, function(v) 
            settings.spawnSets.SelectedVillage = (v) 

            savedsettings:save("SL2", settings)
        end)

        tab7:dropdown("Hop Until", true, {
            location = settings.spawnSets;
            list = {
                {
                    Name = "Jin Spawns";
                    flag = "JinSpawn";
                };
                {
                    Name = "Weapon Spawns";
                    flag = "WeaponSpawn";
                };
                {
                    Name = "Mode Spawns";
                    flag = "ModeSpawn";
                };
                {
                    Name = "Sub Spawns";
                    flag = "SubSpawn";
                };
            };
            default = "Hop Until";
        }, function(isToggled, name) 
            savedsettings:save("SL2", settings)
        end)
        function len(tab)
            local sum = 0
            for _, v in pairs(tab) do
                sum = sum + 1
            end
            return sum
        end
        local labelx1 = tab7:label("Cached Servers", "Cached Servers: "..tostring(len(settings.spawnSets.cachedServers)))
        tab7:button("Clear Cache", function()
            settings.spawnSets.cachedServers = {}
            savedsettings:save("SL2", settings)
            labelx1:changeText("Cached Servers: "..tostring(len(settings.spawnSets.cachedServers)))
        end)

        --local s = library:notify("Test Title", "Test 2 aaaaa", 15)

        tab1.spFuncs:SimClck()
    end
end
